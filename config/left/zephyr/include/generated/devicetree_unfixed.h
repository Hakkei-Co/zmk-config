/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   proton_c.dts.pre.tmp
 *
 * Directories with bindings:
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings, /home/laujonat/hakkei/ryval-zmk/app/drivers/zephyr/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Nodes in dependency order (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector_a
 *   4   /connector_d
 *   5   /keymap_transform_0
 *   6   /keymap_transform_1
 *   7   /soc
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *   10  /soc/pin-controller@48000000/gpio@48000000
 *   11  /soc/pin-controller@48000000/gpio@48000400
 *   12  /kscan
 *   13  /memory@10000000
 *   14  /memory@20000000
 *   15  /behaviors
 *   16  /behaviors/behavior_ext_power
 *   17  /behaviors/behavior_key_press
 *   18  /behaviors/behavior_momentary_layer
 *   19  /behaviors/behavior_layer_tap
 *   20  /behaviors/behavior_mod_tap
 *   21  /behaviors/behavior_none
 *   22  /behaviors/behavior_outputs
 *   23  /behaviors/behavior_reset
 *   24  /behaviors/behavior_reset_dfu
 *   25  /behaviors/behavior_rgb_underglow
 *   26  /behaviors/behavior_sensor_rotate_key_press
 *   27  /behaviors/behavior_sticky_key
 *   28  /behaviors/behavior_sticky_layer
 *   29  /behaviors/behavior_to_layer
 *   30  /behaviors/behavior_toggle_layer
 *   31  /cpus
 *   32  /cpus/cpu@0
 *   33  /keymap
 *   34  /keymap/default_layer
 *   35  /behaviors/behavior_bluetooth
 *   36  /behaviors/behavior_transparent
 *   37  /keymap/lower_layer
 *   38  /keymap/raise_layer
 *   39  /leds
 *   40  /soc/pin-controller@48000000/gpio@48000800
 *   41  /leds/led_0
 *   42  /soc/interrupt-controller@e000e100
 *   43  /soc/adc@50000000
 *   44  /soc/can@40006400
 *   45  /soc/dma@40020000
 *   46  /soc/dma@40020400
 *   47  /soc/i2c@40005800
 *   48  /soc/rtc@40002800
 *   49  /soc/serial@40004400
 *   50  /soc/serial@40004800
 *   51  /soc/serial@40013800
 *   52  /soc/spi@40003800
 *   53  /soc/spi@40013000
 *   54  /soc/timer@e000e010
 *   55  /usbphy
 *   56  /soc/usb@40005c00
 *   57  /soc/watchdog@40002c00
 *   58  /soc/watchdog@40003000
 *   59  /soc/flash-controller@40022000
 *   60  /soc/flash-controller@40022000/flash@8000000
 *   61  /soc/flash-controller@40022000/flash@8000000/partitions
 *   62  /soc/flash-controller@40022000/flash@8000000/partitions/partition@3e800
 *   63  /soc/i2c@40005400
 *   64  /soc/i2c@40005400/ssd1306@3c
 *   65  /soc/pin-controller@48000000/gpio@48000c00
 *   66  /soc/pin-controller@48000000/gpio@48001000
 *   67  /soc/pin-controller@48000000/gpio@48001400
 *   68  /soc/timers@40000000
 *   69  /soc/timers@40000000/pwm
 *   70  /soc/timers@40000400
 *   71  /soc/timers@40000400/pwm
 *   72  /soc/timers@40000800
 *   73  /soc/timers@40000800/pwm
 *   74  /soc/timers@40001000
 *   75  /soc/timers@40001000/pwm
 *   76  /soc/timers@40001400
 *   77  /soc/timers@40001400/pwm
 *   78  /soc/timers@40012c00
 *   79  /soc/timers@40012c00/pwm
 *   80  /soc/timers@40013400
 *   81  /soc/timers@40013400/pwm
 *   82  /soc/timers@40014000
 *   83  /soc/timers@40014000/pwm
 *   84  /soc/timers@40014400
 *   85  /soc/timers@40014400/pwm
 *   86  /soc/timers@40014800
 *   87  /soc/timers@40014800/pwm
 *   88  /soc/timers@40015000
 *   89  /soc/timers@40015000/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node's generated path identifier: DT_N
 *
 * Dependency Ordinal: 0
 *
 * Supports:
 *   1   /aliases
 *   15  /behaviors
 *   2   /chosen
 *   3   /connector_a
 *   4   /connector_d
 *   31  /cpus
 *   33  /keymap
 *   5   /keymap_transform_0
 *   6   /keymap_transform_1
 *   12  /kscan
 *   39  /leds
 *   13  /memory@10000000
 *   14  /memory@20000000
 *   7   /soc
 *   55  /usbphy
 */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_usbphy) fn(DT_N_S_memory_10000000) fn(DT_N_S_connector_d) fn(DT_N_S_connector_a) fn(DT_N_S_leds) fn(DT_N_S_keymap_transform_0) fn(DT_N_S_keymap_transform_1) fn(DT_N_S_kscan) fn(DT_N_S_behaviors) fn(DT_N_S_keymap)

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_qmk_proton_c DT_N
#define DT_N_INST_0_st_stm32f303 DT_N

/* Special property macros: */
#define DT_N_REG_NUM 0
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_qmk_proton_c 1
#define DT_N_COMPAT_MATCHES_st_stm32f303 1
#define DT_N_STATUS_okay 1

/* Generic property macros: */
#define DT_N_P_compatible {"qmk,proton_c", "st,stm32f303"}
#define DT_N_P_compatible_IDX_0 "qmk,proton_c"
#define DT_N_P_compatible_IDX_1 "st,stm32f303"
#define DT_N_P_compatible_LEN 2
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node's generated path identifier: DT_N_S_aliases
 *
 * Dependency Ordinal: 1
 *
 * Requires:
 *   0   /
 */

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N
#define DT_N_S_aliases_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Special property macros: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node's generated path identifier: DT_N_S_chosen
 *
 * Dependency Ordinal: 2
 *
 * Requires:
 *   0   /
 */

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N
#define DT_N_S_chosen_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Special property macros: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /connector_a
 *
 * Node's generated path identifier: DT_N_S_connector_a
 *
 * Dependency Ordinal: 3
 *
 * Requires:
 *   0   /
 */

/* Node parent (/) identifier: */
#define DT_N_S_connector_a_PARENT DT_N
#define DT_N_S_connector_a_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_connector_a_EXISTS 1
#define DT_N_INST_1_arduino_pro_micro DT_N_S_connector_a
#define DT_N_NODELABEL_pro_micro_a    DT_N_S_connector_a

/* Special property macros: */
#define DT_N_S_connector_a_REG_NUM 0
#define DT_N_S_connector_a_IRQ_NUM 0
#define DT_N_S_connector_a_COMPAT_MATCHES_arduino_pro_micro 1
#define DT_N_S_connector_a_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_connector_a_P_compatible {"arduino-pro-micro"}
#define DT_N_S_connector_a_P_compatible_IDX_0 "arduino-pro-micro"
#define DT_N_S_connector_a_P_compatible_LEN 1
#define DT_N_S_connector_a_P_compatible_EXISTS 1

/*
 * Devicetree node: /connector_d
 *
 * Node's generated path identifier: DT_N_S_connector_d
 *
 * Dependency Ordinal: 4
 *
 * Requires:
 *   0   /
 */

/* Node parent (/) identifier: */
#define DT_N_S_connector_d_PARENT DT_N
#define DT_N_S_connector_d_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_connector_d_EXISTS 1
#define DT_N_INST_0_arduino_pro_micro DT_N_S_connector_d
#define DT_N_NODELABEL_pro_micro_d    DT_N_S_connector_d

/* Special property macros: */
#define DT_N_S_connector_d_REG_NUM 0
#define DT_N_S_connector_d_IRQ_NUM 0
#define DT_N_S_connector_d_COMPAT_MATCHES_arduino_pro_micro 1
#define DT_N_S_connector_d_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_connector_d_P_compatible {"arduino-pro-micro"}
#define DT_N_S_connector_d_P_compatible_IDX_0 "arduino-pro-micro"
#define DT_N_S_connector_d_P_compatible_LEN 1
#define DT_N_S_connector_d_P_compatible_EXISTS 1

/*
 * Devicetree node: /keymap_transform_0
 *
 * Node's generated path identifier: DT_N_S_keymap_transform_0
 *
 * Binding (compatible = zmk,matrix-transform):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/zmk,matrix-transform.yaml
 *
 * Dependency Ordinal: 5
 *
 * Requires:
 *   0   /
 *
 * Description:
 *   Defines a mapping from keymap logical positions to matrix physical positions
 */

/* Node parent (/) identifier: */
#define DT_N_S_keymap_transform_0_PARENT DT_N
#define DT_N_S_keymap_transform_0_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_keymap_transform_0_EXISTS 1
#define DT_N_INST_0_zmk_matrix_transform DT_N_S_keymap_transform_0
#define DT_N_NODELABEL_default_transform DT_N_S_keymap_transform_0

/* Special property macros: */
#define DT_N_S_keymap_transform_0_REG_NUM 0
#define DT_N_S_keymap_transform_0_IRQ_NUM 0
#define DT_N_S_keymap_transform_0_COMPAT_MATCHES_zmk_matrix_transform 1
#define DT_N_S_keymap_transform_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_keymap_transform_0_P_columns 12
#define DT_N_S_keymap_transform_0_P_columns_EXISTS 1
#define DT_N_S_keymap_transform_0_P_rows 4
#define DT_N_S_keymap_transform_0_P_rows_EXISTS 1
#define DT_N_S_keymap_transform_0_P_col_offset 0
#define DT_N_S_keymap_transform_0_P_col_offset_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map {0 /* 0x0 */, 1 /* 0x1 */, 2 /* 0x2 */, 3 /* 0x3 */, 4 /* 0x4 */, 5 /* 0x5 */, 6 /* 0x6 */, 7 /* 0x7 */, 8 /* 0x8 */, 9 /* 0x9 */, 10 /* 0xa */, 11 /* 0xb */, 256 /* 0x100 */, 257 /* 0x101 */, 258 /* 0x102 */, 259 /* 0x103 */, 260 /* 0x104 */, 261 /* 0x105 */, 262 /* 0x106 */, 263 /* 0x107 */, 264 /* 0x108 */, 265 /* 0x109 */, 266 /* 0x10a */, 267 /* 0x10b */, 512 /* 0x200 */, 513 /* 0x201 */, 514 /* 0x202 */, 515 /* 0x203 */, 516 /* 0x204 */, 517 /* 0x205 */, 518 /* 0x206 */, 519 /* 0x207 */, 520 /* 0x208 */, 521 /* 0x209 */, 522 /* 0x20a */, 523 /* 0x20b */, 771 /* 0x303 */, 772 /* 0x304 */, 773 /* 0x305 */, 774 /* 0x306 */, 775 /* 0x307 */, 776 /* 0x308 */}
#define DT_N_S_keymap_transform_0_P_map_IDX_0 0
#define DT_N_S_keymap_transform_0_P_map_IDX_1 1
#define DT_N_S_keymap_transform_0_P_map_IDX_2 2
#define DT_N_S_keymap_transform_0_P_map_IDX_3 3
#define DT_N_S_keymap_transform_0_P_map_IDX_4 4
#define DT_N_S_keymap_transform_0_P_map_IDX_5 5
#define DT_N_S_keymap_transform_0_P_map_IDX_6 6
#define DT_N_S_keymap_transform_0_P_map_IDX_7 7
#define DT_N_S_keymap_transform_0_P_map_IDX_8 8
#define DT_N_S_keymap_transform_0_P_map_IDX_9 9
#define DT_N_S_keymap_transform_0_P_map_IDX_10 10
#define DT_N_S_keymap_transform_0_P_map_IDX_11 11
#define DT_N_S_keymap_transform_0_P_map_IDX_12 256
#define DT_N_S_keymap_transform_0_P_map_IDX_13 257
#define DT_N_S_keymap_transform_0_P_map_IDX_14 258
#define DT_N_S_keymap_transform_0_P_map_IDX_15 259
#define DT_N_S_keymap_transform_0_P_map_IDX_16 260
#define DT_N_S_keymap_transform_0_P_map_IDX_17 261
#define DT_N_S_keymap_transform_0_P_map_IDX_18 262
#define DT_N_S_keymap_transform_0_P_map_IDX_19 263
#define DT_N_S_keymap_transform_0_P_map_IDX_20 264
#define DT_N_S_keymap_transform_0_P_map_IDX_21 265
#define DT_N_S_keymap_transform_0_P_map_IDX_22 266
#define DT_N_S_keymap_transform_0_P_map_IDX_23 267
#define DT_N_S_keymap_transform_0_P_map_IDX_24 512
#define DT_N_S_keymap_transform_0_P_map_IDX_25 513
#define DT_N_S_keymap_transform_0_P_map_IDX_26 514
#define DT_N_S_keymap_transform_0_P_map_IDX_27 515
#define DT_N_S_keymap_transform_0_P_map_IDX_28 516
#define DT_N_S_keymap_transform_0_P_map_IDX_29 517
#define DT_N_S_keymap_transform_0_P_map_IDX_30 518
#define DT_N_S_keymap_transform_0_P_map_IDX_31 519
#define DT_N_S_keymap_transform_0_P_map_IDX_32 520
#define DT_N_S_keymap_transform_0_P_map_IDX_33 521
#define DT_N_S_keymap_transform_0_P_map_IDX_34 522
#define DT_N_S_keymap_transform_0_P_map_IDX_35 523
#define DT_N_S_keymap_transform_0_P_map_IDX_36 771
#define DT_N_S_keymap_transform_0_P_map_IDX_37 772
#define DT_N_S_keymap_transform_0_P_map_IDX_38 773
#define DT_N_S_keymap_transform_0_P_map_IDX_39 774
#define DT_N_S_keymap_transform_0_P_map_IDX_40 775
#define DT_N_S_keymap_transform_0_P_map_IDX_41 776
#define DT_N_S_keymap_transform_0_P_map_LEN 42
#define DT_N_S_keymap_transform_0_P_map_EXISTS 1

/*
 * Devicetree node: /keymap_transform_1
 *
 * Node's generated path identifier: DT_N_S_keymap_transform_1
 *
 * Binding (compatible = zmk,matrix-transform):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/zmk,matrix-transform.yaml
 *
 * Dependency Ordinal: 6
 *
 * Requires:
 *   0   /
 *
 * Description:
 *   Defines a mapping from keymap logical positions to matrix physical positions
 */

/* Node parent (/) identifier: */
#define DT_N_S_keymap_transform_1_PARENT DT_N
#define DT_N_S_keymap_transform_1_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_keymap_transform_1_EXISTS 1
#define DT_N_INST_1_zmk_matrix_transform     DT_N_S_keymap_transform_1
#define DT_N_NODELABEL_five_column_transform DT_N_S_keymap_transform_1

/* Special property macros: */
#define DT_N_S_keymap_transform_1_REG_NUM 0
#define DT_N_S_keymap_transform_1_IRQ_NUM 0
#define DT_N_S_keymap_transform_1_COMPAT_MATCHES_zmk_matrix_transform 1
#define DT_N_S_keymap_transform_1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_keymap_transform_1_P_columns 10
#define DT_N_S_keymap_transform_1_P_columns_EXISTS 1
#define DT_N_S_keymap_transform_1_P_rows 4
#define DT_N_S_keymap_transform_1_P_rows_EXISTS 1
#define DT_N_S_keymap_transform_1_P_col_offset 0
#define DT_N_S_keymap_transform_1_P_col_offset_EXISTS 1
#define DT_N_S_keymap_transform_1_P_map {1 /* 0x1 */, 2 /* 0x2 */, 3 /* 0x3 */, 4 /* 0x4 */, 5 /* 0x5 */, 6 /* 0x6 */, 7 /* 0x7 */, 8 /* 0x8 */, 9 /* 0x9 */, 10 /* 0xa */, 257 /* 0x101 */, 258 /* 0x102 */, 259 /* 0x103 */, 260 /* 0x104 */, 261 /* 0x105 */, 262 /* 0x106 */, 263 /* 0x107 */, 264 /* 0x108 */, 265 /* 0x109 */, 266 /* 0x10a */, 513 /* 0x201 */, 514 /* 0x202 */, 515 /* 0x203 */, 516 /* 0x204 */, 517 /* 0x205 */, 518 /* 0x206 */, 519 /* 0x207 */, 520 /* 0x208 */, 521 /* 0x209 */, 522 /* 0x20a */, 771 /* 0x303 */, 772 /* 0x304 */, 773 /* 0x305 */, 774 /* 0x306 */, 775 /* 0x307 */, 776 /* 0x308 */}
#define DT_N_S_keymap_transform_1_P_map_IDX_0 1
#define DT_N_S_keymap_transform_1_P_map_IDX_1 2
#define DT_N_S_keymap_transform_1_P_map_IDX_2 3
#define DT_N_S_keymap_transform_1_P_map_IDX_3 4
#define DT_N_S_keymap_transform_1_P_map_IDX_4 5
#define DT_N_S_keymap_transform_1_P_map_IDX_5 6
#define DT_N_S_keymap_transform_1_P_map_IDX_6 7
#define DT_N_S_keymap_transform_1_P_map_IDX_7 8
#define DT_N_S_keymap_transform_1_P_map_IDX_8 9
#define DT_N_S_keymap_transform_1_P_map_IDX_9 10
#define DT_N_S_keymap_transform_1_P_map_IDX_10 257
#define DT_N_S_keymap_transform_1_P_map_IDX_11 258
#define DT_N_S_keymap_transform_1_P_map_IDX_12 259
#define DT_N_S_keymap_transform_1_P_map_IDX_13 260
#define DT_N_S_keymap_transform_1_P_map_IDX_14 261
#define DT_N_S_keymap_transform_1_P_map_IDX_15 262
#define DT_N_S_keymap_transform_1_P_map_IDX_16 263
#define DT_N_S_keymap_transform_1_P_map_IDX_17 264
#define DT_N_S_keymap_transform_1_P_map_IDX_18 265
#define DT_N_S_keymap_transform_1_P_map_IDX_19 266
#define DT_N_S_keymap_transform_1_P_map_IDX_20 513
#define DT_N_S_keymap_transform_1_P_map_IDX_21 514
#define DT_N_S_keymap_transform_1_P_map_IDX_22 515
#define DT_N_S_keymap_transform_1_P_map_IDX_23 516
#define DT_N_S_keymap_transform_1_P_map_IDX_24 517
#define DT_N_S_keymap_transform_1_P_map_IDX_25 518
#define DT_N_S_keymap_transform_1_P_map_IDX_26 519
#define DT_N_S_keymap_transform_1_P_map_IDX_27 520
#define DT_N_S_keymap_transform_1_P_map_IDX_28 521
#define DT_N_S_keymap_transform_1_P_map_IDX_29 522
#define DT_N_S_keymap_transform_1_P_map_IDX_30 771
#define DT_N_S_keymap_transform_1_P_map_IDX_31 772
#define DT_N_S_keymap_transform_1_P_map_IDX_32 773
#define DT_N_S_keymap_transform_1_P_map_IDX_33 774
#define DT_N_S_keymap_transform_1_P_map_IDX_34 775
#define DT_N_S_keymap_transform_1_P_map_IDX_35 776
#define DT_N_S_keymap_transform_1_P_map_LEN 36
#define DT_N_S_keymap_transform_1_P_map_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node's generated path identifier: DT_N_S_soc
 *
 * Dependency Ordinal: 7
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   43  /soc/adc@50000000
 *   44  /soc/can@40006400
 *   45  /soc/dma@40020000
 *   46  /soc/dma@40020400
 *   59  /soc/flash-controller@40022000
 *   63  /soc/i2c@40005400
 *   47  /soc/i2c@40005800
 *   42  /soc/interrupt-controller@e000e100
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *   48  /soc/rtc@40002800
 *   49  /soc/serial@40004400
 *   50  /soc/serial@40004800
 *   51  /soc/serial@40013800
 *   52  /soc/spi@40003800
 *   53  /soc/spi@40013000
 *   54  /soc/timer@e000e010
 *   68  /soc/timers@40000000
 *   70  /soc/timers@40000400
 *   72  /soc/timers@40000800
 *   74  /soc/timers@40001000
 *   76  /soc/timers@40001400
 *   78  /soc/timers@40012c00
 *   80  /soc/timers@40013400
 *   82  /soc/timers@40014000
 *   84  /soc/timers@40014400
 *   86  /soc/timers@40014800
 *   88  /soc/timers@40015000
 *   56  /soc/usb@40005c00
 *   57  /soc/watchdog@40002c00
 *   58  /soc/watchdog@40003000
 */

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_usb_40005c00) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40001400) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_can_40006400) fn(DT_N_S_soc_S_adc_50000000) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40013400) fn(DT_N_S_soc_S_timers_40015000) fn(DT_N_S_soc_S_dma_40020400)

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Special property macros: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000
 *
 * Node's generated path identifier: DT_N_S_soc_S_pin_controller_48000000
 *
 * Binding (compatible = st,stm32-pinmux):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/st,stm32-pinmux.yaml
 *
 * Dependency Ordinal: 8
 *
 * Requires:
 *   7   /soc
 *
 * Supports:
 *   10  /soc/pin-controller@48000000/gpio@48000000
 *   11  /soc/pin-controller@48000000/gpio@48000400
 *   40  /soc/pin-controller@48000000/gpio@48000800
 *   65  /soc/pin-controller@48000000/gpio@48000c00
 *   66  /soc/pin-controller@48000000/gpio@48001000
 *   67  /soc/pin-controller@48000000/gpio@48001400
 *
 * Description:
 *   STM32 PINMUX
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinmux DT_N_S_soc_S_pin_controller_48000000
#define DT_N_NODELABEL_pinctrl      DT_N_S_soc_S_pin_controller_48000000

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_VAL_ADDRESS 1207959552 /* 0x48000000 */
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_VAL_SIZE 6144 /* 0x1800 */
#define DT_N_S_soc_S_pin_controller_48000000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_MATCHES_st_stm32_pinmux 1
#define DT_N_S_soc_S_pin_controller_48000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_P_reg {1207959552 /* 0x48000000 */, 6144 /* 0x1800 */}
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_0 1207959552
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_1 6144
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible {"st,stm32-pinmux"}
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0 "st,stm32-pinmux"
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/rcc@40021000
 *
 * Node's generated path identifier: DT_N_S_soc_S_rcc_40021000
 *
 * Binding (compatible = st,stm32-rcc):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-rcc.yaml
 *
 * Dependency Ordinal: 9
 *
 * Requires:
 *   7   /soc
 *
 * Supports:
 *   43  /soc/adc@50000000
 *   44  /soc/can@40006400
 *   45  /soc/dma@40020000
 *   46  /soc/dma@40020400
 *   63  /soc/i2c@40005400
 *   47  /soc/i2c@40005800
 *   48  /soc/rtc@40002800
 *   49  /soc/serial@40004400
 *   50  /soc/serial@40004800
 *   51  /soc/serial@40013800
 *   52  /soc/spi@40003800
 *   53  /soc/spi@40013000
 *   68  /soc/timers@40000000
 *   70  /soc/timers@40000400
 *   72  /soc/timers@40000800
 *   74  /soc/timers@40001000
 *   76  /soc/timers@40001400
 *   78  /soc/timers@40012c00
 *   80  /soc/timers@40013400
 *   82  /soc/timers@40014000
 *   84  /soc/timers@40014400
 *   86  /soc/timers@40014800
 *   88  /soc/timers@40015000
 *   56  /soc/usb@40005c00
 *   57  /soc/watchdog@40002c00
 *   10  /soc/pin-controller@48000000/gpio@48000000
 *   11  /soc/pin-controller@48000000/gpio@48000400
 *   40  /soc/pin-controller@48000000/gpio@48000800
 *   65  /soc/pin-controller@48000000/gpio@48000c00
 *   66  /soc/pin-controller@48000000/gpio@48001000
 *   67  /soc/pin-controller@48000000/gpio@48001400
 *
 * Description:
 *   STM32 RCC (Reset and Clock Controller)
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_40021000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_40021000_EXISTS 1
#define DT_N_INST_0_st_stm32_rcc DT_N_S_soc_S_rcc_40021000
#define DT_N_NODELABEL_rcc       DT_N_S_soc_S_rcc_40021000

/* Special property macros: */
#define DT_N_S_soc_S_rcc_40021000_REG_NUM 1
#define DT_N_S_soc_S_rcc_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_rcc_40021000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rcc_40021000_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_40021000_COMPAT_MATCHES_st_stm32_rcc 1
#define DT_N_S_soc_S_rcc_40021000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_40021000_P_reg {1073876992 /* 0x40021000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rcc_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_compatible {"st,stm32-rcc"}
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0 "st,stm32-rcc"
#define DT_N_S_soc_S_rcc_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_label "STM32_CLK_RCC"
#define DT_N_S_soc_S_rcc_40021000_P_label_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000000
 *
 * Node's generated path identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * Dependency Ordinal: 10
 *
 * Requires:
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   12  /kscan
 *
 * Description:
 *   STM32 GPIO node
 */

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_VAL_ADDRESS 1207959552 /* 0x48000000 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg {1207959552 /* 0x48000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_0 1207959552
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_label "GPIOA"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000400
 *
 * Node's generated path identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * Dependency Ordinal: 11
 *
 * Requires:
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   12  /kscan
 *
 * Description:
 *   STM32 GPIO node
 */

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_VAL_ADDRESS 1207960576 /* 0x48000400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg {1207960576 /* 0x48000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_0 1207960576
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_label "GPIOB"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_EXISTS 1

/*
 * Devicetree node: /kscan
 *
 * Node's generated path identifier: DT_N_S_kscan
 *
 * Binding (compatible = zmk,kscan-gpio-matrix):
 *   /home/laujonat/hakkei/ryval-zmk/app/drivers/zephyr/dts/bindings/kscan/zmk,kscan-gpio-matrix.yaml
 *
 * Dependency Ordinal: 12
 *
 * Requires:
 *   0   /
 *   10  /soc/pin-controller@48000000/gpio@48000000
 *   11  /soc/pin-controller@48000000/gpio@48000400
 *
 * Description:
 *   GPIO keyboard matrix controller
 */

/* Node parent (/) identifier: */
#define DT_N_S_kscan_PARENT DT_N
#define DT_N_S_kscan_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_kscan_EXISTS 1
#define DT_N_INST_0_zmk_kscan_gpio_matrix DT_N_S_kscan
#define DT_N_NODELABEL_kscan0             DT_N_S_kscan

/* Special property macros: */
#define DT_N_S_kscan_REG_NUM 0
#define DT_N_S_kscan_IRQ_NUM 0
#define DT_N_S_kscan_COMPAT_MATCHES_zmk_kscan_gpio_matrix 1
#define DT_N_S_kscan_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_kscan_P_row_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_pin 5
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_pin 4
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_pin 3
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_pin 2
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_LEN 4
#define DT_N_S_kscan_P_row_gpios_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_pin 2
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_pin 1
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_pin 0
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_pin 8
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_4_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_pin 13
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_5_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_kscan_P_col_gpios_IDX_5_VAL_pin 14
#define DT_N_S_kscan_P_col_gpios_IDX_5_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_5_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_5_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_LEN 6
#define DT_N_S_kscan_P_col_gpios_EXISTS 1
#define DT_N_S_kscan_P_debounce_period 5
#define DT_N_S_kscan_P_debounce_period_EXISTS 1
#define DT_N_S_kscan_P_diode_direction "col2row"
#define DT_N_S_kscan_P_diode_direction_ENUM_IDX 1
#define DT_N_S_kscan_P_diode_direction_EXISTS 1
#define DT_N_S_kscan_P_label "KSCAN"
#define DT_N_S_kscan_P_label_EXISTS 1
#define DT_N_S_kscan_P_compatible {"zmk,kscan-gpio-matrix"}
#define DT_N_S_kscan_P_compatible_IDX_0 "zmk,kscan-gpio-matrix"
#define DT_N_S_kscan_P_compatible_LEN 1
#define DT_N_S_kscan_P_compatible_EXISTS 1

/*
 * Devicetree node: /memory@10000000
 *
 * Node's generated path identifier: DT_N_S_memory_10000000
 *
 * Binding (compatible = st,stm32-ccm):
 *   $ZEPHYR_BASE/dts/bindings/arm/st,stm32-ccm.yaml
 *
 * Dependency Ordinal: 13
 *
 * Requires:
 *   0   /
 *
 * Description:
 *   STM32 CCM (Core Coupled Memory)
 */

/* Node parent (/) identifier: */
#define DT_N_S_memory_10000000_PARENT DT_N
#define DT_N_S_memory_10000000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_memory_10000000_EXISTS 1
#define DT_N_INST_0_st_stm32_ccm DT_N_S_memory_10000000
#define DT_N_NODELABEL_ccm0      DT_N_S_memory_10000000

/* Special property macros: */
#define DT_N_S_memory_10000000_REG_NUM 1
#define DT_N_S_memory_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_memory_10000000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_memory_10000000_IRQ_NUM 0
#define DT_N_S_memory_10000000_COMPAT_MATCHES_st_stm32_ccm 1
#define DT_N_S_memory_10000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_memory_10000000_P_reg {268435456 /* 0x10000000 */, 8192 /* 0x2000 */}
#define DT_N_S_memory_10000000_P_reg_IDX_0 268435456
#define DT_N_S_memory_10000000_P_reg_IDX_1 8192
#define DT_N_S_memory_10000000_P_reg_EXISTS 1
#define DT_N_S_memory_10000000_P_compatible {"st,stm32-ccm"}
#define DT_N_S_memory_10000000_P_compatible_IDX_0 "st,stm32-ccm"
#define DT_N_S_memory_10000000_P_compatible_LEN 1
#define DT_N_S_memory_10000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node's generated path identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * Dependency Ordinal: 14
 *
 * Requires:
 *   0   /
 *
 * Description:
 *   Generic on-chip SRAM description
 */

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Special property macros: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 40960 /* 0xa000 */
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 40960 /* 0xa000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_1 40960
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /behaviors
 *
 * Node's generated path identifier: DT_N_S_behaviors
 *
 * Dependency Ordinal: 15
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   35  /behaviors/behavior_bluetooth
 *   16  /behaviors/behavior_ext_power
 *   17  /behaviors/behavior_key_press
 *   19  /behaviors/behavior_layer_tap
 *   20  /behaviors/behavior_mod_tap
 *   18  /behaviors/behavior_momentary_layer
 *   21  /behaviors/behavior_none
 *   22  /behaviors/behavior_outputs
 *   23  /behaviors/behavior_reset
 *   24  /behaviors/behavior_reset_dfu
 *   25  /behaviors/behavior_rgb_underglow
 *   26  /behaviors/behavior_sensor_rotate_key_press
 *   27  /behaviors/behavior_sticky_key
 *   28  /behaviors/behavior_sticky_layer
 *   29  /behaviors/behavior_to_layer
 *   30  /behaviors/behavior_toggle_layer
 *   36  /behaviors/behavior_transparent
 */

/* Node parent (/) identifier: */
#define DT_N_S_behaviors_PARENT DT_N
#define DT_N_S_behaviors_FOREACH_CHILD(fn) fn(DT_N_S_behaviors_S_behavior_key_press) fn(DT_N_S_behaviors_S_behavior_transparent) fn(DT_N_S_behaviors_S_behavior_none) fn(DT_N_S_behaviors_S_behavior_mod_tap) fn(DT_N_S_behaviors_S_behavior_layer_tap) fn(DT_N_S_behaviors_S_behavior_sticky_key) fn(DT_N_S_behaviors_S_behavior_sticky_layer) fn(DT_N_S_behaviors_S_behavior_momentary_layer) fn(DT_N_S_behaviors_S_behavior_toggle_layer) fn(DT_N_S_behaviors_S_behavior_to_layer) fn(DT_N_S_behaviors_S_behavior_reset) fn(DT_N_S_behaviors_S_behavior_reset_dfu) fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press) fn(DT_N_S_behaviors_S_behavior_rgb_underglow) fn(DT_N_S_behaviors_S_behavior_bluetooth) fn(DT_N_S_behaviors_S_behavior_ext_power) fn(DT_N_S_behaviors_S_behavior_outputs)

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_EXISTS 1

/* Special property macros: */
#define DT_N_S_behaviors_REG_NUM 0
#define DT_N_S_behaviors_IRQ_NUM 0
#define DT_N_S_behaviors_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/behavior_ext_power
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_ext_power
 *
 * Binding (compatible = zmk,behavior-ext-power):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-ext-power.yaml
 *
 * Dependency Ordinal: 16
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   External power control Behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_ext_power_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_ext_power_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_ext_power_EXISTS 1
#define DT_N_INST_0_zmk_behavior_ext_power DT_N_S_behaviors_S_behavior_ext_power
#define DT_N_NODELABEL_ext_power           DT_N_S_behaviors_S_behavior_ext_power

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_ext_power_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_ext_power_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_ext_power_COMPAT_MATCHES_zmk_behavior_ext_power 1
#define DT_N_S_behaviors_S_behavior_ext_power_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_ext_power_P_label "EXT_POWER_BEHAVIOR"
#define DT_N_S_behaviors_S_behavior_ext_power_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_key_press
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_key_press
 *
 * Binding (compatible = zmk,behavior-key-press):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-key-press.yaml
 *
 * Dependency Ordinal: 17
 *
 * Requires:
 *   15  /behaviors
 *
 * Supports:
 *   19  /behaviors/behavior_layer_tap
 *   20  /behaviors/behavior_mod_tap
 *   27  /behaviors/behavior_sticky_key
 *   34  /keymap/default_layer
 *   37  /keymap/lower_layer
 *   38  /keymap/raise_layer
 *
 * Description:
 *   Key press/release behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_key_press_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_key_press_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_key_press_EXISTS 1
#define DT_N_INST_0_zmk_behavior_key_press DT_N_S_behaviors_S_behavior_key_press
#define DT_N_NODELABEL_cp                  DT_N_S_behaviors_S_behavior_key_press
#define DT_N_NODELABEL_kp                  DT_N_S_behaviors_S_behavior_key_press

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_key_press_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_key_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_key_press_COMPAT_MATCHES_zmk_behavior_key_press 1
#define DT_N_S_behaviors_S_behavior_key_press_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_key_press_P_label "KEY_PRESS"
#define DT_N_S_behaviors_S_behavior_key_press_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_momentary_layer
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_momentary_layer
 *
 * Binding (compatible = zmk,behavior-momentary-layer):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-momentary-layer.yaml
 *
 * Dependency Ordinal: 18
 *
 * Requires:
 *   15  /behaviors
 *
 * Supports:
 *   19  /behaviors/behavior_layer_tap
 *   28  /behaviors/behavior_sticky_layer
 *   34  /keymap/default_layer
 *
 * Description:
 *   Momentary layer on press/release behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_momentary_layer_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_EXISTS 1
#define DT_N_INST_0_zmk_behavior_momentary_layer DT_N_S_behaviors_S_behavior_momentary_layer
#define DT_N_NODELABEL_mo                        DT_N_S_behaviors_S_behavior_momentary_layer

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_momentary_layer_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_momentary_layer_COMPAT_MATCHES_zmk_behavior_momentary_layer 1
#define DT_N_S_behaviors_S_behavior_momentary_layer_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_P_label "MO"
#define DT_N_S_behaviors_S_behavior_momentary_layer_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_layer_tap
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_layer_tap
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * Dependency Ordinal: 19
 *
 * Requires:
 *   15  /behaviors
 *   17  /behaviors/behavior_key_press
 *   18  /behaviors/behavior_momentary_layer
 *
 * Description:
 *   Hold or Tap behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_layer_tap_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_layer_tap_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_layer_tap_EXISTS 1
#define DT_N_INST_1_zmk_behavior_hold_tap DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_NODELABEL_lt                 DT_N_S_behaviors_S_behavior_layer_tap

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_layer_tap_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_layer_tap_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_layer_tap_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_behavior_layer_tap_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_momentary_layer
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_LEN 2
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_behavior_layer_tap_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_flavor "tap-preferred"
#define DT_N_S_behaviors_S_behavior_layer_tap_P_flavor_ENUM_IDX 2
#define DT_N_S_behaviors_S_behavior_layer_tap_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_label "LAYER_TAP"
#define DT_N_S_behaviors_S_behavior_layer_tap_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_mod_tap
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_mod_tap
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * Dependency Ordinal: 20
 *
 * Requires:
 *   15  /behaviors
 *   17  /behaviors/behavior_key_press
 *
 * Description:
 *   Hold or Tap behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_mod_tap_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_mod_tap_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_mod_tap_EXISTS 1
#define DT_N_INST_0_zmk_behavior_hold_tap DT_N_S_behaviors_S_behavior_mod_tap
#define DT_N_NODELABEL_mt                 DT_N_S_behaviors_S_behavior_mod_tap

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_mod_tap_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_mod_tap_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_mod_tap_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_behavior_mod_tap_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_mod_tap_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_behaviors_S_behavior_mod_tap_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_behaviors_S_behavior_mod_tap_P_bindings_LEN 2
#define DT_N_S_behaviors_S_behavior_mod_tap_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_behavior_mod_tap_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_behavior_mod_tap_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_behavior_mod_tap_P_flavor "hold-preferred"
#define DT_N_S_behaviors_S_behavior_mod_tap_P_flavor_ENUM_IDX 0
#define DT_N_S_behaviors_S_behavior_mod_tap_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_behavior_mod_tap_P_label "MOD_TAP"
#define DT_N_S_behaviors_S_behavior_mod_tap_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_none
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_none
 *
 * Binding (compatible = zmk,behavior-none):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-none.yaml
 *
 * Dependency Ordinal: 21
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   None Binding Behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_none_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_none_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_none_EXISTS 1
#define DT_N_INST_0_zmk_behavior_none DT_N_S_behaviors_S_behavior_none
#define DT_N_NODELABEL_none           DT_N_S_behaviors_S_behavior_none

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_none_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_none_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_none_COMPAT_MATCHES_zmk_behavior_none 1
#define DT_N_S_behaviors_S_behavior_none_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_none_P_label "NONE"
#define DT_N_S_behaviors_S_behavior_none_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_outputs
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_outputs
 *
 * Binding (compatible = zmk,behavior-outputs):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-outputs.yaml
 *
 * Dependency Ordinal: 22
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   Output Selection Behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_outputs_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_outputs_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_outputs_EXISTS 1
#define DT_N_INST_0_zmk_behavior_outputs DT_N_S_behaviors_S_behavior_outputs
#define DT_N_NODELABEL_out               DT_N_S_behaviors_S_behavior_outputs

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_outputs_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_outputs_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_outputs_COMPAT_MATCHES_zmk_behavior_outputs 1
#define DT_N_S_behaviors_S_behavior_outputs_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_outputs_P_label "OUTPUTS"
#define DT_N_S_behaviors_S_behavior_outputs_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_reset
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_reset
 *
 * Binding (compatible = zmk,behavior-reset):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-reset.yaml
 *
 * Dependency Ordinal: 23
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   Keyboard Reset Behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_reset_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_reset_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_reset_EXISTS 1
#define DT_N_INST_0_zmk_behavior_reset DT_N_S_behaviors_S_behavior_reset
#define DT_N_NODELABEL_reset           DT_N_S_behaviors_S_behavior_reset

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_reset_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_COMPAT_MATCHES_zmk_behavior_reset 1
#define DT_N_S_behaviors_S_behavior_reset_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_reset_P_type 0
#define DT_N_S_behaviors_S_behavior_reset_P_type_EXISTS 1
#define DT_N_S_behaviors_S_behavior_reset_P_label "RESET"
#define DT_N_S_behaviors_S_behavior_reset_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_reset_dfu
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_reset_dfu
 *
 * Binding (compatible = zmk,behavior-reset):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-reset.yaml
 *
 * Dependency Ordinal: 24
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   Keyboard Reset Behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_reset_dfu_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_EXISTS 1
#define DT_N_INST_1_zmk_behavior_reset DT_N_S_behaviors_S_behavior_reset_dfu
#define DT_N_NODELABEL_bootloader      DT_N_S_behaviors_S_behavior_reset_dfu

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_dfu_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_dfu_COMPAT_MATCHES_zmk_behavior_reset 1
#define DT_N_S_behaviors_S_behavior_reset_dfu_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_type 87
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_type_EXISTS 1
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_label "BOOTLOADER_RESET"
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_rgb_underglow
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_rgb_underglow
 *
 * Binding (compatible = zmk,behavior-rgb-underglow):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-rgb-underglow.yaml
 *
 * Dependency Ordinal: 25
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   RGB Underglow Action
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_rgb_underglow_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_EXISTS 1
#define DT_N_INST_0_zmk_behavior_rgb_underglow DT_N_S_behaviors_S_behavior_rgb_underglow
#define DT_N_NODELABEL_rgb_ug                  DT_N_S_behaviors_S_behavior_rgb_underglow

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_rgb_underglow_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_rgb_underglow_COMPAT_MATCHES_zmk_behavior_rgb_underglow 1
#define DT_N_S_behaviors_S_behavior_rgb_underglow_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_P_label "RGB_UNDERGLOW"
#define DT_N_S_behaviors_S_behavior_rgb_underglow_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_sensor_rotate_key_press
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
 *
 * Binding (compatible = zmk,behavior-sensor-rotate-key-press):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-sensor-rotate-key-press.yaml
 *
 * Dependency Ordinal: 26
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   Sensor rotate key press/release behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_EXISTS 1
#define DT_N_INST_0_zmk_behavior_sensor_rotate_key_press DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_NODELABEL_inc_dec_cp                        DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_NODELABEL_inc_dec_kp                        DT_N_S_behaviors_S_behavior_sensor_rotate_key_press

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_COMPAT_MATCHES_zmk_behavior_sensor_rotate_key_press 1
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_P_label "ENC_KEY_PRESS"
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_sticky_key
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_sticky_key
 *
 * Binding (compatible = zmk,behavior-sticky-key):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-sticky-key.yaml
 *
 * Dependency Ordinal: 27
 *
 * Requires:
 *   15  /behaviors
 *   17  /behaviors/behavior_key_press
 *
 * Description:
 *   Sticky key behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_sticky_key_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_sticky_key_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_sticky_key_EXISTS 1
#define DT_N_INST_0_zmk_behavior_sticky_key DT_N_S_behaviors_S_behavior_sticky_key
#define DT_N_NODELABEL_sk                   DT_N_S_behaviors_S_behavior_sticky_key

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_sticky_key_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_sticky_key_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_sticky_key_COMPAT_MATCHES_zmk_behavior_sticky_key 1
#define DT_N_S_behaviors_S_behavior_sticky_key_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_sticky_key_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_behaviors_S_behavior_sticky_key_P_bindings_LEN 1
#define DT_N_S_behaviors_S_behavior_sticky_key_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_behavior_sticky_key_P_release_after_ms 1000
#define DT_N_S_behaviors_S_behavior_sticky_key_P_release_after_ms_EXISTS 1
#define DT_N_S_behaviors_S_behavior_sticky_key_P_label "STICKY_KEY"
#define DT_N_S_behaviors_S_behavior_sticky_key_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_sticky_layer
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_sticky_layer
 *
 * Binding (compatible = zmk,behavior-sticky-key):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-sticky-key.yaml
 *
 * Dependency Ordinal: 28
 *
 * Requires:
 *   15  /behaviors
 *   18  /behaviors/behavior_momentary_layer
 *
 * Description:
 *   Sticky key behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_sticky_layer_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_sticky_layer_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_sticky_layer_EXISTS 1
#define DT_N_INST_1_zmk_behavior_sticky_key DT_N_S_behaviors_S_behavior_sticky_layer
#define DT_N_NODELABEL_sl                   DT_N_S_behaviors_S_behavior_sticky_layer

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_sticky_layer_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_sticky_layer_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_sticky_layer_COMPAT_MATCHES_zmk_behavior_sticky_key 1
#define DT_N_S_behaviors_S_behavior_sticky_layer_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_sticky_layer_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_momentary_layer
#define DT_N_S_behaviors_S_behavior_sticky_layer_P_bindings_LEN 1
#define DT_N_S_behaviors_S_behavior_sticky_layer_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_behavior_sticky_layer_P_release_after_ms 1000
#define DT_N_S_behaviors_S_behavior_sticky_layer_P_release_after_ms_EXISTS 1
#define DT_N_S_behaviors_S_behavior_sticky_layer_P_label "STICKY_LAYER"
#define DT_N_S_behaviors_S_behavior_sticky_layer_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_to_layer
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_to_layer
 *
 * Binding (compatible = zmk,behavior-to-layer):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-to-layer.yaml
 *
 * Dependency Ordinal: 29
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   To Layer
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_to_layer_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_to_layer_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_to_layer_EXISTS 1
#define DT_N_INST_0_zmk_behavior_to_layer DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_NODELABEL_to                 DT_N_S_behaviors_S_behavior_to_layer

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_to_layer_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_to_layer_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_to_layer_COMPAT_MATCHES_zmk_behavior_to_layer 1
#define DT_N_S_behaviors_S_behavior_to_layer_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_to_layer_P_label "TO_LAYER"
#define DT_N_S_behaviors_S_behavior_to_layer_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_toggle_layer
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_toggle_layer
 *
 * Binding (compatible = zmk,behavior-toggle-layer):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-toggle-layer.yaml
 *
 * Dependency Ordinal: 30
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   Toggle Layer
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_toggle_layer_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_toggle_layer_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_toggle_layer_EXISTS 1
#define DT_N_INST_0_zmk_behavior_toggle_layer DT_N_S_behaviors_S_behavior_toggle_layer
#define DT_N_NODELABEL_tog                    DT_N_S_behaviors_S_behavior_toggle_layer

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_toggle_layer_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_toggle_layer_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_toggle_layer_COMPAT_MATCHES_zmk_behavior_toggle_layer 1
#define DT_N_S_behaviors_S_behavior_toggle_layer_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_toggle_layer_P_label "TOGGLE_LAYER"
#define DT_N_S_behaviors_S_behavior_toggle_layer_P_label_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node's generated path identifier: DT_N_S_cpus
 *
 * Dependency Ordinal: 31
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   32  /cpus/cpu@0
 */

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Special property macros: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node's generated path identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * Dependency Ordinal: 32
 *
 * Requires:
 *   31  /cpus
 *
 * Description:
 *   ARM Cortex-M4F CPU
 */

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0

/* Special property macros: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1

/*
 * Devicetree node: /keymap
 *
 * Node's generated path identifier: DT_N_S_keymap
 *
 * Binding (compatible = zmk,keymap):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * Dependency Ordinal: 33
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   34  /keymap/default_layer
 *   37  /keymap/lower_layer
 *   38  /keymap/raise_layer
 *
 * Description:
 *   Allows defining a keymap composed of multiple layers
 */

/* Node parent (/) identifier: */
#define DT_N_S_keymap_PARENT DT_N
#define DT_N_S_keymap_FOREACH_CHILD(fn) fn(DT_N_S_keymap_S_default_layer) fn(DT_N_S_keymap_S_lower_layer) fn(DT_N_S_keymap_S_raise_layer)

/* Existence and alternate IDs: */
#define DT_N_S_keymap_EXISTS 1
#define DT_N_INST_0_zmk_keymap DT_N_S_keymap

/* Special property macros: */
#define DT_N_S_keymap_REG_NUM 0
#define DT_N_S_keymap_IRQ_NUM 0
#define DT_N_S_keymap_COMPAT_MATCHES_zmk_keymap 1
#define DT_N_S_keymap_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_keymap_P_compatible {"zmk,keymap"}
#define DT_N_S_keymap_P_compatible_IDX_0 "zmk,keymap"
#define DT_N_S_keymap_P_compatible_LEN 1
#define DT_N_S_keymap_P_compatible_EXISTS 1

/*
 * Devicetree node: /keymap/default_layer
 *
 * Node's generated path identifier: DT_N_S_keymap_S_default_layer
 *
 * Binding (compatible = zmk,keymap):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * Dependency Ordinal: 34
 *
 * Requires:
 *   33  /keymap
 *   17  /behaviors/behavior_key_press
 *   18  /behaviors/behavior_momentary_layer
 *
 * Description:
 *   A layer to be used in a keymap
 */

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_default_layer_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_default_layer_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_default_layer_EXISTS 1

/* Special property macros: */
#define DT_N_S_keymap_S_default_layer_REG_NUM 0
#define DT_N_S_keymap_S_default_layer_IRQ_NUM 0
#define DT_N_S_keymap_S_default_layer_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_0_VAL_param1 458795
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_1_VAL_param1 458772
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_2_VAL_param1 458778
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_3_VAL_param1 458760
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_4_VAL_param1 458773
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_5_VAL_param1 458775
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_6_VAL_param1 458780
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_7_VAL_param1 458776
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_8_VAL_param1 458764
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_9_VAL_param1 458770
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_10_VAL_param1 458771
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_11_VAL_param1 458794
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_12_VAL_param1 458976
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_13_VAL_param1 458756
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_14_VAL_param1 458774
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_15_VAL_param1 458759
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_16_VAL_param1 458761
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_17_VAL_param1 458762
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_18_VAL_param1 458763
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_19_VAL_param1 458765
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_20_VAL_param1 458766
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_21_VAL_param1 458767
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_22_VAL_param1 458803
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_23_VAL_param1 458804
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_23_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_24_VAL_param1 458977
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_25_VAL_param1 458781
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_26_VAL_param1 458779
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_27_VAL_param1 458758
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_28_VAL_param1 458777
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_29_VAL_param1 458757
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_30_VAL_param1 458769
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_31_VAL_param1 458768
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_32_VAL_param1 458806
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_33_VAL_param1 458807
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_34_VAL_param1 458808
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_35_VAL_param1 458981
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_36_VAL_param1 458979
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_momentary_layer
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_37_VAL_param1 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_37_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_38_VAL_param1 458796
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_39_VAL_param1 458792
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_momentary_layer
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_40_VAL_param1 2
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_41_VAL_param1 458982
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_41_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_LEN 42
#define DT_N_S_keymap_S_default_layer_P_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_bluetooth
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_bluetooth
 *
 * Binding (compatible = zmk,behavior-bluetooth):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-bluetooth.yaml
 *
 * Dependency Ordinal: 35
 *
 * Requires:
 *   15  /behaviors
 *
 * Supports:
 *   37  /keymap/lower_layer
 *
 * Description:
 *   Bluetooth Behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_bluetooth_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_bluetooth_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_bluetooth_EXISTS 1
#define DT_N_INST_0_zmk_behavior_bluetooth DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_NODELABEL_bt                  DT_N_S_behaviors_S_behavior_bluetooth

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_bluetooth_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_bluetooth_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_bluetooth_COMPAT_MATCHES_zmk_behavior_bluetooth 1
#define DT_N_S_behaviors_S_behavior_bluetooth_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_bluetooth_P_label "BLUETOOTH"
#define DT_N_S_behaviors_S_behavior_bluetooth_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_transparent
 *
 * Node's generated path identifier: DT_N_S_behaviors_S_behavior_transparent
 *
 * Binding (compatible = zmk,behavior-transparent):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-transparent.yaml
 *
 * Dependency Ordinal: 36
 *
 * Requires:
 *   15  /behaviors
 *
 * Supports:
 *   37  /keymap/lower_layer
 *   38  /keymap/raise_layer
 *
 * Description:
 *   Transparent Binding Behavior
 */

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_transparent_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_transparent_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_transparent_EXISTS 1
#define DT_N_INST_0_zmk_behavior_transparent DT_N_S_behaviors_S_behavior_transparent
#define DT_N_NODELABEL_trans                 DT_N_S_behaviors_S_behavior_transparent

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_transparent_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_transparent_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_transparent_COMPAT_MATCHES_zmk_behavior_transparent 1
#define DT_N_S_behaviors_S_behavior_transparent_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_transparent_P_label "TRANS"
#define DT_N_S_behaviors_S_behavior_transparent_P_label_EXISTS 1

/*
 * Devicetree node: /keymap/lower_layer
 *
 * Node's generated path identifier: DT_N_S_keymap_S_lower_layer
 *
 * Binding (compatible = zmk,keymap):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * Dependency Ordinal: 37
 *
 * Requires:
 *   33  /keymap
 *   35  /behaviors/behavior_bluetooth
 *   17  /behaviors/behavior_key_press
 *   36  /behaviors/behavior_transparent
 *
 * Description:
 *   A layer to be used in a keymap
 */

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_lower_layer_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_lower_layer_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_lower_layer_EXISTS 1

/* Special property macros: */
#define DT_N_S_keymap_S_lower_layer_REG_NUM 0
#define DT_N_S_keymap_S_lower_layer_IRQ_NUM 0
#define DT_N_S_keymap_S_lower_layer_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_0_VAL_param1 458793
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_1_VAL_param1 458782
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_2_VAL_param1 458783
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_3_VAL_param1 458784
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_4_VAL_param1 458785
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_5_VAL_param1 458786
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_6_VAL_param1 458787
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_7_VAL_param1 458788
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_8_VAL_param1 458789
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_9_VAL_param1 458790
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_10_VAL_param1 458791
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_11_VAL_param1 458794
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_12_VAL_param1 0
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_12_VAL_param2 0
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_12_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_13_VAL_param1 3
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_13_VAL_param2 0
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_13_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_14_VAL_param1 3
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_14_VAL_param2 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_14_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_15_VAL_param1 3
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_15_VAL_param2 2
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_15_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_16_VAL_param1 3
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_16_VAL_param2 3
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_16_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_17_VAL_param1 3
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_17_VAL_param2 4
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_17_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_18_VAL_param1 458832
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_19_VAL_param1 458833
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_20_VAL_param1 458834
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_21_VAL_param1 458831
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_24_VAL_param1 458977
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_36_VAL_param1 458979
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_38_VAL_param1 458796
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_39_VAL_param1 458792
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_41_VAL_param1 458982
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_41_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_LEN 42
#define DT_N_S_keymap_S_lower_layer_P_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/raise_layer
 *
 * Node's generated path identifier: DT_N_S_keymap_S_raise_layer
 *
 * Binding (compatible = zmk,keymap):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * Dependency Ordinal: 38
 *
 * Requires:
 *   33  /keymap
 *   17  /behaviors/behavior_key_press
 *   36  /behaviors/behavior_transparent
 *
 * Description:
 *   A layer to be used in a keymap
 */

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_raise_layer_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_raise_layer_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_raise_layer_EXISTS 1

/* Special property macros: */
#define DT_N_S_keymap_S_raise_layer_REG_NUM 0
#define DT_N_S_keymap_S_raise_layer_IRQ_NUM 0
#define DT_N_S_keymap_S_raise_layer_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_0_VAL_param1 458793
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_1_VAL_param1 34013214
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_2_VAL_param1 34013215
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_3_VAL_param1 34013216
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_4_VAL_param1 34013217
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_5_VAL_param1 34013218
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_6_VAL_param1 34013219
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_7_VAL_param1 34013220
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_8_VAL_param1 458837
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_9_VAL_param1 34013222
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_10_VAL_param1 34013223
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_11_VAL_param1 458794
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_12_VAL_param1 458976
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_18_VAL_param1 458797
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_19_VAL_param1 458798
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_20_VAL_param1 458799
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_21_VAL_param1 458800
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_22_VAL_param1 34013233
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_23_VAL_param1 458805
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_23_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_24_VAL_param1 458977
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_34_VAL_param1 458801
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_35_VAL_param1 34013237
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_36_VAL_param1 458979
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_38_VAL_param1 458796
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_39_VAL_param1 458792
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_41_VAL_param1 458982
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_41_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_LEN 42
#define DT_N_S_keymap_S_raise_layer_P_bindings_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node's generated path identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * Dependency Ordinal: 39
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   41  /leds/led_0
 *
 * Description:
 *   GPIO LEDs parent node
 */

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0)

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Special property macros: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000800
 *
 * Node's generated path identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * Dependency Ordinal: 40
 *
 * Requires:
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   41  /leds/led_0
 *
 * Description:
 *   STM32 GPIO node
 */

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_VAL_ADDRESS 1207961600 /* 0x48000800 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg {1207961600 /* 0x48000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_0 1207961600
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_label "GPIOC"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bits 524288
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node's generated path identifier: DT_N_S_leds_S_led_0
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * Dependency Ordinal: 41
 *
 * Requires:
 *   39  /leds
 *   40  /soc/pin-controller@48000000/gpio@48000800
 *
 * Description:
 *   GPIO LED child node
 */

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_NODELABEL_led DT_N_S_leds_S_led_0

/* Special property macros: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "User LED"
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node's generated path identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * Dependency Ordinal: 42
 *
 * Requires:
 *   7   /soc
 *
 * Supports:
 *   43  /soc/adc@50000000
 *   44  /soc/can@40006400
 *   45  /soc/dma@40020000
 *   46  /soc/dma@40020400
 *   59  /soc/flash-controller@40022000
 *   63  /soc/i2c@40005400
 *   47  /soc/i2c@40005800
 *   48  /soc/rtc@40002800
 *   49  /soc/serial@40004400
 *   50  /soc/serial@40004800
 *   51  /soc/serial@40013800
 *   52  /soc/spi@40003800
 *   53  /soc/spi@40013000
 *   68  /soc/timers@40000000
 *   70  /soc/timers@40000400
 *   72  /soc/timers@40000800
 *   74  /soc/timers@40001000
 *   76  /soc/timers@40001400
 *   78  /soc/timers@40012c00
 *   80  /soc/timers@40013400
 *   82  /soc/timers@40014000
 *   84  /soc/timers@40014400
 *   86  /soc/timers@40014800
 *   88  /soc/timers@40015000
 *   56  /soc/usb@40005c00
 *   57  /soc/watchdog@40002c00
 *
 * Description:
 *   ARMv7-M NVIC (Nested Vectored Interrupt Controller)
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Special property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/adc@50000000
 *
 * Node's generated path identifier: DT_N_S_soc_S_adc_50000000
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE/dts/bindings/iio/adc/st,stm32-adc.yaml
 *
 * Dependency Ordinal: 43
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   ST STM32 family ADC
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_50000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_adc_50000000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_50000000_EXISTS 1
#define DT_N_INST_0_st_stm32_adc DT_N_S_soc_S_adc_50000000
#define DT_N_NODELABEL_adc1      DT_N_S_soc_S_adc_50000000

/* Special property macros: */
#define DT_N_S_soc_S_adc_50000000_REG_NUM 1
#define DT_N_S_soc_S_adc_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_adc_50000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_50000000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_50000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_50000000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_adc_50000000_P_reg {1342177280 /* 0x50000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_adc_50000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_adc_50000000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_adc_50000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_adc_50000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_50000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_50000000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_50000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_50000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_label "ADC_1"
#define DT_N_S_soc_S_adc_50000000_P_label_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_status "disabled"
#define DT_N_S_soc_S_adc_50000000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_50000000_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_50000000_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_50000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/can@40006400
 *
 * Node's generated path identifier: DT_N_S_soc_S_can_40006400
 *
 * Binding (compatible = st,stm32-can):
 *   $ZEPHYR_BASE/dts/bindings/can/st,stm32-can.yaml
 *
 * Dependency Ordinal: 44
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 CAN controller
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_40006400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_40006400_EXISTS 1
#define DT_N_INST_0_st_stm32_can DT_N_S_soc_S_can_40006400
#define DT_N_NODELABEL_can1      DT_N_S_soc_S_can_40006400

/* Special property macros: */
#define DT_N_S_soc_S_can_40006400_REG_NUM 1
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_VAL_ADDRESS 1073767424 /* 0x40006400 */
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_can_40006400_IRQ_NUM 4
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq 20
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq 21
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq 22
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_COMPAT_MATCHES_st_stm32_can 1
#define DT_N_S_soc_S_can_40006400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_can_40006400_P_reg {1073767424 /* 0x40006400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_0 1073767424
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_can_40006400_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts {19 /* 0x13 */, 0 /* 0x0 */, 20 /* 0x14 */, 0 /* 0x0 */, 21 /* 0x15 */, 0 /* 0x0 */, 22 /* 0x16 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_2 20
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_4 21
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_6 22
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bits 33554432
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_LEN 1
#define DT_N_S_soc_S_can_40006400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_label "CAN_1"
#define DT_N_S_soc_S_can_40006400_P_label_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_bus_speed 125000
#define DT_N_S_soc_S_can_40006400_P_bus_speed_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_sjw 1
#define DT_N_S_soc_S_can_40006400_P_sjw_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_prop_seg 0
#define DT_N_S_soc_S_can_40006400_P_prop_seg_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_phase_seg1 5
#define DT_N_S_soc_S_can_40006400_P_phase_seg1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_phase_seg2 6
#define DT_N_S_soc_S_can_40006400_P_phase_seg2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_status "disabled"
#define DT_N_S_soc_S_can_40006400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_can_40006400_P_status_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_compatible {"st,stm32-can"}
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0 "st,stm32-can"
#define DT_N_S_soc_S_can_40006400_P_compatible_LEN 1
#define DT_N_S_soc_S_can_40006400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names {"TX", "RX0", "RX1", "SCE"}
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0 "TX"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1 "RX0"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2 "RX1"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3 "SCE"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/dma@40020000
 *
 * Node's generated path identifier: DT_N_S_soc_S_dma_40020000
 *
 * Binding (compatible = st,stm32-dma):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma.yaml
 *
 * Dependency Ordinal: 45
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   The STM32 DMA is a general-purpose direct memory access controller
 *   capable of supporting 5 or 6 or 7 or 8 independent DMA channels.
 *   Each channel can have up to 8 requests.
 *   DMA clients connected to the STM32 DMA controller must use the format
 *   described in the dma.txt file, using a four-cell specifier for each
 *   channel: a phandle to the DMA controller plus the following four integer cells:
 *     1. channel: the dma stream from 0 in V1 or 1 in V2 to <dma-requests>
 *     2. slot: DMA periph request ID in DMA_V2 or DMAMUX, dma request in V1
 *     3. channel-config: A 32bit mask specifying the DMA channel configuration
 *     which is device dependent:
 *         -bit 6-7 : Direction  (see dma.h)
 *        	       0x0: MEM to MEM
 *        	       0x1: MEM to PERIPH
 *        	       0x2: PERIPH to MEM
 *        	       0x3: reserved for PERIPH to PERIPH
 *         -bit 9 : Peripheral Increment Address
 *        	       0x0: no address increment between transfers
 *        	       0x1: increment address between transfers
 *         -bit 10 : Memory Increment Address
 *        	       0x0: no address increment between transfers
 *        	       0x1: increment address between transfers
 *         -bit 11-12 : Peripheral data size
 *        	       0x0: Byte (8 bits)
 *        	       0x1: Half-word (16 bits)
 *        	       0x2: Word (32 bits)
 *        	       0x3: reserved
 *         -bit 13-14 : Memory data size
 *        	       0x0: Byte (8 bits)
 *        	       0x1: Half-word (16 bits)
 *        	       0x2: Word (32 bits)
 *        	       0x3: reserved
 *         -bit 15: Peripheral Increment Offset Size (not USED for DMA V2)
 *        	       0x0: offset size is linked to the peripheral bus width
 *        	       0x1: offset size is fixed to 4 (32-bit alignment)
 *         -bit 16-17 : Priority level
 *        	       0x0: low
 *        	       0x1: medium
 *        	       0x2: high
 *        	       0x3: very high
 *     4. features: A 32bit bitfield value specifying DMA features
 *         -bit 0-1: DMA FIFO threshold selection (not USED for DMA V2)
 *        	       0x0: 1/4 full FIFO
 *        	       0x1: 1/2 full FIFO
 *        	       0x2: 3/4 full FIFO
 *        	       0x3: full FIFO
 *     examples for stm32wb55x
 *      dma2: dma-controller@40020400 {
 *          compatible = "st,stm32-dma";
 *          ...
 *          st,mem2mem;
 *          dma-requests = <7>;
 *          status = "disabled";
 *          label = "DMA_2";
 *         };
 *
 *   For the client part, example for stm32f411 DMA V1 on DMA2 instance
 *     Tx using stream 5 on channel 3 (stream 2 on channel 2 is also possible)
 *     Rx using stream 2 on channel 3 (stream 0 on channel 3 is also possible)
 *     spi1 {
 *      dmas = <&dma2 5 3 0x28440 0x03>,
 *            <&dma2 2 3 0x28480 0x03>;
 *      dma-names = "tx", "rx";
 *      };
 *
 *   For the client part, example for stm32l476 DMA V2 on DMA1 instance
 *     Tx using channel 3 with request 1
 *     Rx using channel 2 with request 1
 *     spi1 {
 *      compatible = "st,stm32-spi";
 *      dmas = <&dma1 3 1 0x20440 0x04>,
 *            <&dma1 2 1 0x20480 0x04>;
 *      dma-names = "tx", "rx";
 *    };
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40020000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_dma DT_N_S_soc_S_dma_40020000
#define DT_N_NODELABEL_dma1      DT_N_S_soc_S_dma_40020000

/* Special property macros: */
#define DT_N_S_soc_S_dma_40020000_REG_NUM 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40020000_IRQ_NUM 7
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq 13
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq 14
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq 15
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_irq 16
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_irq 17
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_MATCHES_st_stm32_dma 1
#define DT_N_S_soc_S_dma_40020000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40020000_P_reg {1073872896 /* 0x40020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4 13
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6 14
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8 15
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_10 16
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_12 17
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_label "DMA_1"
#define DT_N_S_soc_S_dma_40020000_P_label_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status "disabled"
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible {"st,stm32-dma"}
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0 "st,stm32-dma"
#define DT_N_S_soc_S_dma_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/dma@40020400
 *
 * Node's generated path identifier: DT_N_S_soc_S_dma_40020400
 *
 * Binding (compatible = st,stm32-dma):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma.yaml
 *
 * Dependency Ordinal: 46
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   The STM32 DMA is a general-purpose direct memory access controller
 *   capable of supporting 5 or 6 or 7 or 8 independent DMA channels.
 *   Each channel can have up to 8 requests.
 *   DMA clients connected to the STM32 DMA controller must use the format
 *   described in the dma.txt file, using a four-cell specifier for each
 *   channel: a phandle to the DMA controller plus the following four integer cells:
 *     1. channel: the dma stream from 0 in V1 or 1 in V2 to <dma-requests>
 *     2. slot: DMA periph request ID in DMA_V2 or DMAMUX, dma request in V1
 *     3. channel-config: A 32bit mask specifying the DMA channel configuration
 *     which is device dependent:
 *         -bit 6-7 : Direction  (see dma.h)
 *        	       0x0: MEM to MEM
 *        	       0x1: MEM to PERIPH
 *        	       0x2: PERIPH to MEM
 *        	       0x3: reserved for PERIPH to PERIPH
 *         -bit 9 : Peripheral Increment Address
 *        	       0x0: no address increment between transfers
 *        	       0x1: increment address between transfers
 *         -bit 10 : Memory Increment Address
 *        	       0x0: no address increment between transfers
 *        	       0x1: increment address between transfers
 *         -bit 11-12 : Peripheral data size
 *        	       0x0: Byte (8 bits)
 *        	       0x1: Half-word (16 bits)
 *        	       0x2: Word (32 bits)
 *        	       0x3: reserved
 *         -bit 13-14 : Memory data size
 *        	       0x0: Byte (8 bits)
 *        	       0x1: Half-word (16 bits)
 *        	       0x2: Word (32 bits)
 *        	       0x3: reserved
 *         -bit 15: Peripheral Increment Offset Size (not USED for DMA V2)
 *        	       0x0: offset size is linked to the peripheral bus width
 *        	       0x1: offset size is fixed to 4 (32-bit alignment)
 *         -bit 16-17 : Priority level
 *        	       0x0: low
 *        	       0x1: medium
 *        	       0x2: high
 *        	       0x3: very high
 *     4. features: A 32bit bitfield value specifying DMA features
 *         -bit 0-1: DMA FIFO threshold selection (not USED for DMA V2)
 *        	       0x0: 1/4 full FIFO
 *        	       0x1: 1/2 full FIFO
 *        	       0x2: 3/4 full FIFO
 *        	       0x3: full FIFO
 *     examples for stm32wb55x
 *      dma2: dma-controller@40020400 {
 *          compatible = "st,stm32-dma";
 *          ...
 *          st,mem2mem;
 *          dma-requests = <7>;
 *          status = "disabled";
 *          label = "DMA_2";
 *         };
 *
 *   For the client part, example for stm32f411 DMA V1 on DMA2 instance
 *     Tx using stream 5 on channel 3 (stream 2 on channel 2 is also possible)
 *     Rx using stream 2 on channel 3 (stream 0 on channel 3 is also possible)
 *     spi1 {
 *      dmas = <&dma2 5 3 0x28440 0x03>,
 *            <&dma2 2 3 0x28480 0x03>;
 *      dma-names = "tx", "rx";
 *      };
 *
 *   For the client part, example for stm32l476 DMA V2 on DMA1 instance
 *     Tx using channel 3 with request 1
 *     Rx using channel 2 with request 1
 *     spi1 {
 *      compatible = "st,stm32-spi";
 *      dmas = <&dma1 3 1 0x20440 0x04>,
 *            <&dma1 2 1 0x20480 0x04>;
 *      dma-names = "tx", "rx";
 *    };
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40020400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40020400_EXISTS 1
#define DT_N_INST_1_st_stm32_dma DT_N_S_soc_S_dma_40020400
#define DT_N_NODELABEL_dma2      DT_N_S_soc_S_dma_40020400

/* Special property macros: */
#define DT_N_S_soc_S_dma_40020400_REG_NUM 1
#define DT_N_S_soc_S_dma_40020400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_REG_IDX_0_VAL_ADDRESS 1073873920 /* 0x40020400 */
#define DT_N_S_soc_S_dma_40020400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40020400_IRQ_NUM 5
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_irq 57
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_irq 58
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_irq 59
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_irq 60
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_COMPAT_MATCHES_st_stm32_dma 1
#define DT_N_S_soc_S_dma_40020400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40020400_P_reg {1073873920 /* 0x40020400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_0 1073873920
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40020400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts {56 /* 0x38 */, 0 /* 0x0 */, 57 /* 0x39 */, 0 /* 0x0 */, 58 /* 0x3a */, 0 /* 0x0 */, 59 /* 0x3b */, 0 /* 0x0 */, 60 /* 0x3c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_0 56
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_2 57
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_4 58
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_6 59
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_8 60
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40020400_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_label "DMA_2"
#define DT_N_S_soc_S_dma_40020400_P_label_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_status "disabled"
#define DT_N_S_soc_S_dma_40020400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40020400_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_compatible {"st,stm32-dma"}
#define DT_N_S_soc_S_dma_40020400_P_compatible_IDX_0 "st,stm32-dma"
#define DT_N_S_soc_S_dma_40020400_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40020400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800
 *
 * Node's generated path identifier: DT_N_S_soc_S_i2c_40005800
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * Dependency Ordinal: 47
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 I2C V2 controller
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_EXISTS 1
#define DT_N_INST_1_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_i2c2         DT_N_S_soc_S_i2c_40005800

/* Special property macros: */
#define DT_N_S_soc_S_i2c_40005800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005800_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq 34
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_P_reg {1073764352 /* 0x40005800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts {33 /* 0x21 */, 0 /* 0x0 */, 34 /* 0x22 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2 34
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_label "I2C_2"
#define DT_N_S_soc_S_i2c_40005800_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800
 *
 * Node's generated path identifier: DT_N_S_soc_S_rtc_40002800
 *
 * Binding (compatible = st,stm32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/st,stm32-rtc.yaml
 *
 * Dependency Ordinal: 48
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 RTC
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40002800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_EXISTS 1
#define DT_N_INST_0_st_stm32_rtc DT_N_S_soc_S_rtc_40002800
#define DT_N_NODELABEL_rtc       DT_N_S_soc_S_rtc_40002800

/* Special property macros: */
#define DT_N_S_soc_S_rtc_40002800_REG_NUM 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_ADDRESS 1073752064 /* 0x40002800 */
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_40002800_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MATCHES_st_stm32_rtc 1
#define DT_N_S_soc_S_rtc_40002800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_P_reg {1073752064 /* 0x40002800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0 1073752064
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_40002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_label "RTC_0"
#define DT_N_S_soc_S_rtc_40002800_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_prescaler 32768
#define DT_N_S_soc_S_rtc_40002800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status "okay"
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40002800_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible {"st,stm32-rtc"}
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0 "st,stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004400
 *
 * Node's generated path identifier: DT_N_S_soc_S_serial_40004400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * Dependency Ordinal: 49
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 USART
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004400_EXISTS 1
#define DT_N_INST_1_st_stm32_usart DT_N_S_soc_S_serial_40004400
#define DT_N_INST_1_st_stm32_uart  DT_N_S_soc_S_serial_40004400
#define DT_N_NODELABEL_usart2      DT_N_S_soc_S_serial_40004400

/* Special property macros: */
#define DT_N_S_soc_S_serial_40004400_REG_NUM 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_ADDRESS 1073759232 /* 0x40004400 */
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004400_P_reg {1073759232 /* 0x40004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0 1073759232
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts {38 /* 0x26 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0 38
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_parity 0
#define DT_N_S_soc_S_serial_40004400_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_label "UART_2"
#define DT_N_S_soc_S_serial_40004400_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status "disabled"
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004800
 *
 * Node's generated path identifier: DT_N_S_soc_S_serial_40004800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * Dependency Ordinal: 50
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 USART
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004800_EXISTS 1
#define DT_N_INST_2_st_stm32_usart DT_N_S_soc_S_serial_40004800
#define DT_N_INST_2_st_stm32_uart  DT_N_S_soc_S_serial_40004800
#define DT_N_NODELABEL_usart3      DT_N_S_soc_S_serial_40004800

/* Special property macros: */
#define DT_N_S_soc_S_serial_40004800_REG_NUM 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_ADDRESS 1073760256 /* 0x40004800 */
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004800_P_reg {1073760256 /* 0x40004800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0 1073760256
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_parity 0
#define DT_N_S_soc_S_serial_40004800_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_label "UART_3"
#define DT_N_S_soc_S_serial_40004800_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status "disabled"
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/serial@40013800
 *
 * Node's generated path identifier: DT_N_S_soc_S_serial_40013800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * Dependency Ordinal: 51
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 USART
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40013800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40013800_EXISTS 1
#define DT_N_INST_0_st_stm32_usart      DT_N_S_soc_S_serial_40013800
#define DT_N_INST_0_st_stm32_uart       DT_N_S_soc_S_serial_40013800
#define DT_N_NODELABEL_usart1           DT_N_S_soc_S_serial_40013800
#define DT_N_NODELABEL_pro_micro_serial DT_N_S_soc_S_serial_40013800

/* Special property macros: */
#define DT_N_S_soc_S_serial_40013800_REG_NUM 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_ADDRESS 1073821696 /* 0x40013800 */
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40013800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40013800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40013800_P_reg {1073821696 /* 0x40013800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0 1073821696
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40013800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40013800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_parity 0
#define DT_N_S_soc_S_serial_40013800_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_label "UART_1"
#define DT_N_S_soc_S_serial_40013800_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status "disabled"
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40013800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40013800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node's generated path identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi-fifo.yaml
 *
 * Dependency Ordinal: 52
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 SPI controller with embedded Rx and Tx FIFOs
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_1_st_stm32_spi_fifo DT_N_S_soc_S_spi_40003800
#define DT_N_INST_1_st_stm32_spi      DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi2           DT_N_S_soc_S_spi_40003800

/* Special property macros: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {36 /* 0x24 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_label "SPI_2"
#define DT_N_S_soc_S_spi_40003800_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node's generated path identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi-fifo.yaml
 *
 * Dependency Ordinal: 53
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 SPI controller with embedded Rx and Tx FIFOs
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_0_st_stm32_spi_fifo DT_N_S_soc_S_spi_40013000
#define DT_N_INST_0_st_stm32_spi      DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi1           DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_pro_micro_spi  DT_N_S_soc_S_spi_40013000

/* Special property macros: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {35 /* 0x23 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_label "SPI_1"
#define DT_N_S_soc_S_spi_40013000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "disabled"
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node's generated path identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Dependency Ordinal: 54
 *
 * Requires:
 *   7   /soc
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Special property macros: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1

/*
 * Devicetree node: /usbphy
 *
 * Node's generated path identifier: DT_N_S_usbphy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE/dts/bindings/phy/usb-nop-xceiv.yaml
 *
 * Dependency Ordinal: 55
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   56  /soc/usb@40005c00
 *
 * Description:
 *   This binding is to be used by all the usb transceivers which are built-in
 *   with USB IP
 */

/* Node parent (/) identifier: */
#define DT_N_S_usbphy_PARENT DT_N
#define DT_N_S_usbphy_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_usbphy_EXISTS 1
#define DT_N_INST_0_usb_nop_xceiv DT_N_S_usbphy
#define DT_N_NODELABEL_usb_fs_phy DT_N_S_usbphy

/* Special property macros: */
#define DT_N_S_usbphy_REG_NUM 0
#define DT_N_S_usbphy_IRQ_NUM 0
#define DT_N_S_usbphy_COMPAT_MATCHES_usb_nop_xceiv 1
#define DT_N_S_usbphy_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_usbphy_P_compatible {"usb-nop-xceiv"}
#define DT_N_S_usbphy_P_compatible_IDX_0 "usb-nop-xceiv"
#define DT_N_S_usbphy_P_compatible_LEN 1
#define DT_N_S_usbphy_P_compatible_EXISTS 1
#define DT_N_S_usbphy_P_label "USB_FS_PHY"
#define DT_N_S_usbphy_P_label_EXISTS 1

/*
 * Devicetree node: /soc/usb@40005c00
 *
 * Node's generated path identifier: DT_N_S_soc_S_usb_40005c00
 *
 * Binding (compatible = st,stm32-usb):
 *   $ZEPHYR_BASE/dts/bindings/usb/st,stm32-usb.yaml
 *
 * Dependency Ordinal: 56
 *
 * Requires:
 *   7   /soc
 *   55  /usbphy
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 USB controller
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usb_40005c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_usb_40005c00_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usb_40005c00_EXISTS 1
#define DT_N_INST_0_st_stm32_usb DT_N_S_soc_S_usb_40005c00
#define DT_N_NODELABEL_usb       DT_N_S_soc_S_usb_40005c00

/* Special property macros: */
#define DT_N_S_soc_S_usb_40005c00_REG_NUM 1
#define DT_N_S_soc_S_usb_40005c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_REG_IDX_0_VAL_ADDRESS 1073765376 /* 0x40005c00 */
#define DT_N_S_soc_S_usb_40005c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_usb_40005c00_IRQ_NUM 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_VAL_irq 75
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_NAME_usb_VAL_irq DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usb_40005c00_IRQ_NAME_usb_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_IRQ_NAME_usb_VAL_priority DT_N_S_soc_S_usb_40005c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usb_40005c00_IRQ_NAME_usb_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_COMPAT_MATCHES_st_stm32_usb 1
#define DT_N_S_soc_S_usb_40005c00_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_usb_40005c00_P_reg {1073765376 /* 0x40005c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_usb_40005c00_P_reg_IDX_0 1073765376
#define DT_N_S_soc_S_usb_40005c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_usb_40005c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_interrupts {75 /* 0x4b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usb_40005c00_P_interrupts_IDX_0 75
#define DT_N_S_soc_S_usb_40005c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usb_40005c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_ram_size 512
#define DT_N_S_soc_S_usb_40005c00_P_ram_size_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_phys_IDX_0_PH DT_N_S_usbphy
#define DT_N_S_soc_S_usb_40005c00_P_phys_LEN 1
#define DT_N_S_soc_S_usb_40005c00_P_phys_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_enable_pin_remap 0
#define DT_N_S_soc_S_usb_40005c00_P_enable_pin_remap_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_usb_40005c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_usb_40005c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_clocks_IDX_0_VAL_bits 8388608
#define DT_N_S_soc_S_usb_40005c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_clocks_LEN 1
#define DT_N_S_soc_S_usb_40005c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_num_bidir_endpoints 8
#define DT_N_S_soc_S_usb_40005c00_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_label "USB"
#define DT_N_S_soc_S_usb_40005c00_P_label_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_status "okay"
#define DT_N_S_soc_S_usb_40005c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usb_40005c00_P_status_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_compatible {"st,stm32-usb"}
#define DT_N_S_soc_S_usb_40005c00_P_compatible_IDX_0 "st,stm32-usb"
#define DT_N_S_soc_S_usb_40005c00_P_compatible_LEN 1
#define DT_N_S_soc_S_usb_40005c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names {"usb"}
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_IDX_0 "usb"
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_usb_40005c00_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002c00
 *
 * Node's generated path identifier: DT_N_S_soc_S_watchdog_40002c00
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-window-watchdog.yaml
 *
 * Dependency Ordinal: 57
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 system window watchdog
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002c00_EXISTS 1
#define DT_N_INST_0_st_stm32_window_watchdog DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdg                  DT_N_S_soc_S_watchdog_40002c00

/* Special property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_ADDRESS 1073753088 /* 0x40002c00 */
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MATCHES_st_stm32_window_watchdog 1
#define DT_N_S_soc_S_watchdog_40002c00_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_P_reg {1073753088 /* 0x40002c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0 1073753088
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_label "WWDG"
#define DT_N_S_soc_S_watchdog_40002c00_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible {"st,stm32-window-watchdog"}
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0 "st,stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts {0 /* 0x0 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node's generated path identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = st,stm32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-watchdog.yaml
 *
 * Dependency Ordinal: 58
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   STM32 watchdog
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_INST_0_st_stm32_watchdog DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_iwdg           DT_N_S_soc_S_watchdog_40003000

/* Special property macros: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_st_stm32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_label "IWDG"
#define DT_N_S_soc_S_watchdog_40003000_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"st,stm32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "st,stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000
 *
 * Node's generated path identifier: DT_N_S_soc_S_flash_controller_40022000
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/st,stm32-flash-controller.yaml
 *
 * Dependency Ordinal: 59
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *
 * Supports:
 *   60  /soc/flash-controller@40022000/flash@8000000
 *
 * Description:
 *   STM32 Family flash controller
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_EXISTS 1
#define DT_N_INST_0_st_stm32_flash_controller   DT_N_S_soc_S_flash_controller_40022000
#define DT_N_INST_0_st_stm32f3_flash_controller DT_N_S_soc_S_flash_controller_40022000
#define DT_N_NODELABEL_flash                    DT_N_S_soc_S_flash_controller_40022000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MATCHES_st_stm32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MATCHES_st_stm32f3_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40022000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_P_label "FLASH_CTRL"
#define DT_N_S_soc_S_flash_controller_40022000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg {1073881088 /* 0x40022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible {"st,stm32-flash-controller", "st,stm32f3-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0 "st,stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1 "st,stm32f3-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts {4 /* 0x4 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000
 *
 * Node's generated path identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * Dependency Ordinal: 60
 *
 * Requires:
 *   59  /soc/flash-controller@40022000
 *
 * Supports:
 *   61  /soc/flash-controller@40022000/flash@8000000/partitions
 *
 * Description:
 *   Flash node
 */

/* Node parent (/soc/flash-controller@40022000) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_40022000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_label "FLASH_STM32"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_erase_block_size 2048
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_write_block_size 2
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions
 *
 * Node's generated path identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/partition.yaml
 *
 * Dependency Ordinal: 61
 *
 * Requires:
 *   60  /soc/flash-controller@40022000/flash@8000000
 *
 * Supports:
 *   62  /soc/flash-controller@40022000/flash@8000000/partitions/partition@3e800
 *
 * Description:
 *   Flash partitions parent node
 */

/* Node parent (/soc/flash-controller@40022000/flash@8000000) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@3e800
 *
 * Node's generated path identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/partition.yaml
 *
 * Dependency Ordinal: 62
 *
 * Requires:
 *   61  /soc/flash-controller@40022000/flash@8000000/partitions
 *
 * Description:
 *   Flash partition child node
 */

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_REG_IDX_0_VAL_ADDRESS 256000 /* 0x3e800 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_REG_IDX_0_VAL_SIZE 6144 /* 0x1800 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_STATUS_okay 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label "storage"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_reg {256000 /* 0x3e800 */, 6144 /* 0x1800 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_reg_IDX_0 256000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_reg_IDX_1 6144
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node's generated path identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * Dependency Ordinal: 63
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   64  /soc/i2c@40005400/ssd1306@3c
 *
 * Description:
 *   STM32 I2C V2 controller
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v2  DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c1          DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_pro_micro_i2c DT_N_S_soc_S_i2c_40005400

/* Special property macros: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq 32
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005400_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */, 32 /* 0x20 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2 32
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_label "I2C_1"
#define DT_N_S_soc_S_i2c_40005400_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400/ssd1306@3c
 *
 * Node's generated path identifier: DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c
 *
 * Binding (compatible = solomon,ssd1306fb):
 *   $ZEPHYR_BASE/dts/bindings/display/solomon,ssd1306fb.yaml
 *
 * Dependency Ordinal: 64
 *
 * Requires:
 *   63  /soc/i2c@40005400
 *
 * Description:
 *   SSD1306 128x64 dot-matrix display controller
 */

/* Node parent (/soc/i2c@40005400) identifier: */
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_PARENT DT_N_S_soc_S_i2c_40005400
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_EXISTS 1
#define DT_N_INST_0_solomon_ssd1306fb DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c
#define DT_N_NODELABEL_oled           DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c

/* Bus info (controller: '/soc/i2c@40005400', type: 'i2c') */
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_BUS DT_N_S_soc_S_i2c_40005400

/* Special property macros: */
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_REG_IDX_0_VAL_ADDRESS 60 /* 0x3c */
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_COMPAT_MATCHES_solomon_ssd1306fb 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_height 32
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_height_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_width 128
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_width_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_segment_offset 0
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_segment_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_page_offset 0
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_page_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_display_offset 0
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_display_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_multiplex_ratio 31
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_multiplex_ratio_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_segment_remap 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_segment_remap_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_com_invdir 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_com_invdir_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_com_sequential 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_com_sequential_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_prechargep 34
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_prechargep_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_reg {60 /* 0x3c */}
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_reg_IDX_0 60
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_label "DISPLAY"
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_compatible {"solomon,ssd1306fb"}
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_compatible_IDX_0 "solomon,ssd1306fb"
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_S_ssd1306_3c_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000c00
 *
 * Node's generated path identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * Dependency Ordinal: 65
 *
 * Requires:
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 GPIO node
 */

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
#define DT_N_NODELABEL_gpiod      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_IDX_0_VAL_ADDRESS 1207962624 /* 0x48000c00 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg {1207962624 /* 0x48000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_0 1207962624
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_label "GPIOD"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48001000
 *
 * Node's generated path identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * Dependency Ordinal: 66
 *
 * Requires:
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 GPIO node
 */

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_EXISTS 1
#define DT_N_INST_5_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_NODELABEL_gpioe      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_IDX_0_VAL_ADDRESS 1207963648 /* 0x48001000 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg {1207963648 /* 0x48001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_0 1207963648
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_label "GPIOE"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48001400
 *
 * Node's generated path identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * Dependency Ordinal: 67
 *
 * Requires:
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 GPIO node
 */

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_EXISTS 1
#define DT_N_INST_4_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400
#define DT_N_NODELABEL_gpiof      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REG_IDX_0_VAL_ADDRESS 1207964672 /* 0x48001400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg {1207964672 /* 0x48001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_IDX_0 1207964672
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_label "GPIOF"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40000000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 68
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   69  /soc/timers@40000000/pwm
 *
 * Description:
 *   STM32 timers
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_EXISTS 1
#define DT_N_INST_0_st_stm32_timers DT_N_S_soc_S_timers_40000000
#define DT_N_NODELABEL_timers2      DT_N_S_soc_S_timers_40000000

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000000_REG_NUM 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_P_label "TIMERS_2"
#define DT_N_S_soc_S_timers_40000000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/pwm
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40000000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 69
 *
 * Requires:
 *   68  /soc/timers@40000000
 *
 * Description:
 *   STM32 PWM
 */

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PARENT DT_N_S_soc_S_timers_40000000
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_EXISTS 1
#define DT_N_INST_0_st_stm32_pwm DT_N_S_soc_S_timers_40000000_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label "PWM_2"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40000400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 70
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   71  /soc/timers@40000400/pwm
 *
 * Description:
 *   STM32 timers
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_EXISTS 1
#define DT_N_INST_1_st_stm32_timers DT_N_S_soc_S_timers_40000400
#define DT_N_NODELABEL_timers3      DT_N_S_soc_S_timers_40000400

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000400_REG_NUM 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_P_label "TIMERS_3"
#define DT_N_S_soc_S_timers_40000400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/pwm
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40000400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 71
 *
 * Requires:
 *   70  /soc/timers@40000400
 *
 * Description:
 *   STM32 PWM
 */

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PARENT DT_N_S_soc_S_timers_40000400
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_EXISTS 1
#define DT_N_INST_1_st_stm32_pwm DT_N_S_soc_S_timers_40000400_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label "PWM_3"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40000800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 72
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   73  /soc/timers@40000800/pwm
 *
 * Description:
 *   STM32 timers
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_EXISTS 1
#define DT_N_INST_8_st_stm32_timers DT_N_S_soc_S_timers_40000800
#define DT_N_NODELABEL_timers4      DT_N_S_soc_S_timers_40000800

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000800_REG_NUM 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_ADDRESS 1073743872 /* 0x40000800 */
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_P_label "TIMERS_4"
#define DT_N_S_soc_S_timers_40000800_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg {1073743872 /* 0x40000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0 1073743872
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/pwm
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40000800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 73
 *
 * Requires:
 *   72  /soc/timers@40000800
 *
 * Description:
 *   STM32 PWM
 */

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PARENT DT_N_S_soc_S_timers_40000800
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_EXISTS 1
#define DT_N_INST_8_st_stm32_pwm DT_N_S_soc_S_timers_40000800_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label "PWM_4"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40001000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 74
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   75  /soc/timers@40001000/pwm
 *
 * Description:
 *   STM32 timers
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_EXISTS 1
#define DT_N_INST_2_st_stm32_timers DT_N_S_soc_S_timers_40001000
#define DT_N_NODELABEL_timers6      DT_N_S_soc_S_timers_40001000

/* Special property macros: */
#define DT_N_S_soc_S_timers_40001000_REG_NUM 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq 54
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_P_label "TIMERS_6"
#define DT_N_S_soc_S_timers_40001000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg {1073745920 /* 0x40001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts {54 /* 0x36 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0 54
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000/pwm
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40001000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 75
 *
 * Requires:
 *   74  /soc/timers@40001000
 *
 * Description:
 *   STM32 PWM
 */

/* Node parent (/soc/timers@40001000) identifier: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_PARENT DT_N_S_soc_S_timers_40001000
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_EXISTS 1
#define DT_N_INST_2_st_stm32_pwm DT_N_S_soc_S_timers_40001000_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_label "PWM_6"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40001400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 76
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   77  /soc/timers@40001400/pwm
 *
 * Description:
 *   STM32 timers
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001400_S_pwm)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_EXISTS 1
#define DT_N_INST_3_st_stm32_timers DT_N_S_soc_S_timers_40001400
#define DT_N_NODELABEL_timers7      DT_N_S_soc_S_timers_40001400

/* Special property macros: */
#define DT_N_S_soc_S_timers_40001400_REG_NUM 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_ADDRESS 1073746944 /* 0x40001400 */
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq 55
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_P_label "TIMERS_7"
#define DT_N_S_soc_S_timers_40001400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg {1073746944 /* 0x40001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0 1073746944
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts {55 /* 0x37 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0 55
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400/pwm
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40001400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 77
 *
 * Requires:
 *   76  /soc/timers@40001400
 *
 * Description:
 *   STM32 PWM
 */

/* Node parent (/soc/timers@40001400) identifier: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_PARENT DT_N_S_soc_S_timers_40001400
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_EXISTS 1
#define DT_N_INST_3_st_stm32_pwm DT_N_S_soc_S_timers_40001400_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_label "PWM_7"
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40012c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 78
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   79  /soc/timers@40012c00/pwm
 *
 * Description:
 *   STM32 timers
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40012c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_EXISTS 1
#define DT_N_INST_7_st_stm32_timers DT_N_S_soc_S_timers_40012c00
#define DT_N_NODELABEL_timers1      DT_N_S_soc_S_timers_40012c00

/* Special property macros: */
#define DT_N_S_soc_S_timers_40012c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_ADDRESS 1073818624 /* 0x40012c00 */
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40012c00_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq 26
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq 27
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40012c00_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_P_label "TIMERS_1"
#define DT_N_S_soc_S_timers_40012c00_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg {1073818624 /* 0x40012c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0 1073818624
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40012c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 26 /* 0x1a */, 0 /* 0x0 */, 27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2 25
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_4 26
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_6 27
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40012c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40012c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00/pwm
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40012c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 79
 *
 * Requires:
 *   78  /soc/timers@40012c00
 *
 * Description:
 *   STM32 PWM
 */

/* Node parent (/soc/timers@40012c00) identifier: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PARENT DT_N_S_soc_S_timers_40012c00
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_EXISTS 1
#define DT_N_INST_7_st_stm32_pwm DT_N_S_soc_S_timers_40012c00_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_label "PWM_1"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40013400
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40013400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 80
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   81  /soc/timers@40013400/pwm
 *
 * Description:
 *   STM32 timers
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40013400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40013400_S_pwm)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40013400_EXISTS 1
#define DT_N_INST_9_st_stm32_timers DT_N_S_soc_S_timers_40013400
#define DT_N_NODELABEL_timers8      DT_N_S_soc_S_timers_40013400

/* Special property macros: */
#define DT_N_S_soc_S_timers_40013400_REG_NUM 1
#define DT_N_S_soc_S_timers_40013400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_REG_IDX_0_VAL_ADDRESS 1073820672 /* 0x40013400 */
#define DT_N_S_soc_S_timers_40013400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40013400_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_irq 44
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_irq 45
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_irq 46
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40013400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40013400_P_label "TIMERS_8"
#define DT_N_S_soc_S_timers_40013400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_reg {1073820672 /* 0x40013400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_0 1073820672
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40013400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts {43 /* 0x2b */, 0 /* 0x0 */, 44 /* 0x2c */, 0 /* 0x0 */, 45 /* 0x2d */, 0 /* 0x0 */, 46 /* 0x2e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_2 44
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_4 45
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_6 46
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_status "disabled"
#define DT_N_S_soc_S_timers_40013400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40013400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40013400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40013400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40013400/pwm
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40013400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 81
 *
 * Requires:
 *   80  /soc/timers@40013400
 *
 * Description:
 *   STM32 PWM
 */

/* Node parent (/soc/timers@40013400) identifier: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_PARENT DT_N_S_soc_S_timers_40013400
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_EXISTS 1
#define DT_N_INST_9_st_stm32_pwm DT_N_S_soc_S_timers_40013400_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_label "PWM_8"
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40014000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 82
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   83  /soc/timers@40014000/pwm
 *
 * Description:
 *   STM32 timers
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_EXISTS 1
#define DT_N_INST_4_st_stm32_timers DT_N_S_soc_S_timers_40014000
#define DT_N_NODELABEL_timers15     DT_N_S_soc_S_timers_40014000

/* Special property macros: */
#define DT_N_S_soc_S_timers_40014000_REG_NUM 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_P_label "TIMERS_15"
#define DT_N_S_soc_S_timers_40014000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg {1073823744 /* 0x40014000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/pwm
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40014000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 83
 *
 * Requires:
 *   82  /soc/timers@40014000
 *
 * Description:
 *   STM32 PWM
 */

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PARENT DT_N_S_soc_S_timers_40014000
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_EXISTS 1
#define DT_N_INST_4_st_stm32_pwm DT_N_S_soc_S_timers_40014000_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label "PWM_15"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40014400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 84
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   85  /soc/timers@40014400/pwm
 *
 * Description:
 *   STM32 timers
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_EXISTS 1
#define DT_N_INST_5_st_stm32_timers DT_N_S_soc_S_timers_40014400
#define DT_N_NODELABEL_timers16     DT_N_S_soc_S_timers_40014400

/* Special property macros: */
#define DT_N_S_soc_S_timers_40014400_REG_NUM 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_ADDRESS 1073824768 /* 0x40014400 */
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_P_label "TIMERS_16"
#define DT_N_S_soc_S_timers_40014400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg {1073824768 /* 0x40014400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0 1073824768
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/pwm
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40014400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 85
 *
 * Requires:
 *   84  /soc/timers@40014400
 *
 * Description:
 *   STM32 PWM
 */

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PARENT DT_N_S_soc_S_timers_40014400
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_EXISTS 1
#define DT_N_INST_5_st_stm32_pwm DT_N_S_soc_S_timers_40014400_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label "PWM_16"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40014800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 86
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   87  /soc/timers@40014800/pwm
 *
 * Description:
 *   STM32 timers
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_EXISTS 1
#define DT_N_INST_6_st_stm32_timers DT_N_S_soc_S_timers_40014800
#define DT_N_NODELABEL_timers17     DT_N_S_soc_S_timers_40014800

/* Special property macros: */
#define DT_N_S_soc_S_timers_40014800_REG_NUM 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_ADDRESS 1073825792 /* 0x40014800 */
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_P_label "TIMERS_17"
#define DT_N_S_soc_S_timers_40014800_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg {1073825792 /* 0x40014800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0 1073825792
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts {26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/pwm
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40014800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 87
 *
 * Requires:
 *   86  /soc/timers@40014800
 *
 * Description:
 *   STM32 PWM
 */

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PARENT DT_N_S_soc_S_timers_40014800
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_EXISTS 1
#define DT_N_INST_6_st_stm32_pwm DT_N_S_soc_S_timers_40014800_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label "PWM_17"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40015000
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40015000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 88
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   89  /soc/timers@40015000/pwm
 *
 * Description:
 *   STM32 timers
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40015000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40015000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40015000_S_pwm)

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40015000_EXISTS 1
#define DT_N_INST_10_st_stm32_timers DT_N_S_soc_S_timers_40015000
#define DT_N_NODELABEL_timers20      DT_N_S_soc_S_timers_40015000

/* Special property macros: */
#define DT_N_S_soc_S_timers_40015000_REG_NUM 1
#define DT_N_S_soc_S_timers_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_timers_40015000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40015000_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_VAL_irq 77
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_VAL_irq 78
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_VAL_irq 79
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_VAL_irq 80
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40015000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40015000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40015000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40015000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40015000_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40015000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40015000_P_label "TIMERS_20"
#define DT_N_S_soc_S_timers_40015000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_reg {1073827840 /* 0x40015000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_timers_40015000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40015000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40015000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_timers_40015000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40015000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupts {77 /* 0x4d */, 0 /* 0x0 */, 78 /* 0x4e */, 0 /* 0x0 */, 79 /* 0x4f */, 0 /* 0x0 */, 80 /* 0x50 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_0 77
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_2 78
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_4 79
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_6 80
#define DT_N_S_soc_S_timers_40015000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_status "disabled"
#define DT_N_S_soc_S_timers_40015000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40015000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40015000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40015000_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40015000/pwm
 *
 * Node's generated path identifier: DT_N_S_soc_S_timers_40015000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 89
 *
 * Requires:
 *   88  /soc/timers@40015000
 *
 * Description:
 *   STM32 PWM
 */

/* Node parent (/soc/timers@40015000) identifier: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_PARENT DT_N_S_soc_S_timers_40015000
#define DT_N_S_soc_S_timers_40015000_S_pwm_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_EXISTS 1
#define DT_N_INST_10_st_stm32_pwm DT_N_S_soc_S_timers_40015000_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40015000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_label "PWM_20"
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40015000_S_pwm_P_compatible_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40022000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zmk_kscan                      DT_N_S_kscan
#define DT_CHOSEN_zmk_kscan_EXISTS               1
#define DT_CHOSEN_zmk_matrix_transform           DT_N_S_keymap_transform_0
#define DT_CHOSEN_zmk_matrix_transform_EXISTS    1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_3e800
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_qmk_proton_c 1
#define DT_COMPAT_HAS_OKAY_st_stm32f303 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32f3_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinmux 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32_i2c_v2 1
#define DT_COMPAT_HAS_OKAY_solomon_ssd1306fb 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usb 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rtc 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_usb_nop_xceiv 1
#define DT_COMPAT_HAS_OKAY_st_stm32_ccm 1
#define DT_COMPAT_HAS_OKAY_arduino_pro_micro 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_zmk_matrix_transform 1
#define DT_COMPAT_HAS_OKAY_zmk_kscan_gpio_matrix 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_key_press 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_transparent 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_none 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_hold_tap 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_sticky_key 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_momentary_layer 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_toggle_layer 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_to_layer 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_reset 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_sensor_rotate_key_press 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_rgb_underglow 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_bluetooth 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_ext_power 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_outputs 1
#define DT_COMPAT_HAS_OKAY_zmk_keymap 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_qmk_proton_c_NUM_OKAY 1
#define DT_N_INST_st_stm32f303_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32f3_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_st_stm32_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinmux_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 6
#define DT_N_INST_st_stm32_i2c_v2_NUM_OKAY 1
#define DT_N_INST_solomon_ssd1306fb_NUM_OKAY 1
#define DT_N_INST_st_stm32_usb_NUM_OKAY 1
#define DT_N_INST_st_stm32_rtc_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_usb_nop_xceiv_NUM_OKAY 1
#define DT_N_INST_st_stm32_ccm_NUM_OKAY 1
#define DT_N_INST_arduino_pro_micro_NUM_OKAY 2
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_zmk_matrix_transform_NUM_OKAY 2
#define DT_N_INST_zmk_kscan_gpio_matrix_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_key_press_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_transparent_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_none_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_hold_tap_NUM_OKAY 2
#define DT_N_INST_zmk_behavior_sticky_key_NUM_OKAY 2
#define DT_N_INST_zmk_behavior_momentary_layer_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_toggle_layer_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_to_layer_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_reset_NUM_OKAY 2
#define DT_N_INST_zmk_behavior_sensor_rotate_key_press_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_rgb_underglow_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_bluetooth_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_ext_power_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_outputs_NUM_OKAY 1
#define DT_N_INST_zmk_keymap_NUM_OKAY 1
#define DT_FOREACH_OKAY_INST_qmk_proton_c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32f303(fn) fn(0)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32f3_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_pinmux(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_st_stm32_i2c_v2(fn) fn(0)
#define DT_FOREACH_OKAY_INST_solomon_ssd1306fb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_usb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_usb_nop_xceiv(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_ccm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arduino_pro_micro(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_matrix_transform(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_zmk_kscan_gpio_matrix(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_key_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_transparent(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_none(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_hold_tap(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_zmk_behavior_sticky_key(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_zmk_behavior_momentary_layer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_toggle_layer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_to_layer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_reset(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_zmk_behavior_sensor_rotate_key_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_rgb_underglow(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_bluetooth(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_ext_power(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_outputs(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_keymap(fn) fn(0)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_solomon_ssd1306fb_BUS_i2c 1
