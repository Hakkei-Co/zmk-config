/*
 * Generated by gen_legacy_defines.py
 *
 * DTS input file:
 *   proton_c.dts.pre.tmp
 *
 * Directories with bindings:
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings, /home/laujonat/hakkei/ryval-zmk/app/drivers/zephyr/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Nodes in dependency order (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector_a
 *   4   /connector_d
 *   5   /keymap_transform_0
 *   6   /keymap_transform_1
 *   7   /soc
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *   10  /soc/pin-controller@48000000/gpio@48000000
 *   11  /soc/pin-controller@48000000/gpio@48000400
 *   12  /kscan
 *   13  /memory@10000000
 *   14  /memory@20000000
 *   15  /behaviors
 *   16  /behaviors/behavior_ext_power
 *   17  /behaviors/behavior_key_press
 *   18  /behaviors/behavior_momentary_layer
 *   19  /behaviors/behavior_layer_tap
 *   20  /behaviors/behavior_mod_tap
 *   21  /behaviors/behavior_none
 *   22  /behaviors/behavior_outputs
 *   23  /behaviors/behavior_reset
 *   24  /behaviors/behavior_reset_dfu
 *   25  /behaviors/behavior_rgb_underglow
 *   26  /behaviors/behavior_sensor_rotate_key_press
 *   27  /behaviors/behavior_sticky_key
 *   28  /behaviors/behavior_sticky_layer
 *   29  /behaviors/behavior_to_layer
 *   30  /behaviors/behavior_toggle_layer
 *   31  /cpus
 *   32  /cpus/cpu@0
 *   33  /keymap
 *   34  /keymap/default_layer
 *   35  /behaviors/behavior_bluetooth
 *   36  /behaviors/behavior_transparent
 *   37  /keymap/lower_layer
 *   38  /keymap/raise_layer
 *   39  /leds
 *   40  /soc/pin-controller@48000000/gpio@48000800
 *   41  /leds/led_0
 *   42  /soc/interrupt-controller@e000e100
 *   43  /soc/adc@50000000
 *   44  /soc/can@40006400
 *   45  /soc/dma@40020000
 *   46  /soc/dma@40020400
 *   47  /soc/i2c@40005800
 *   48  /soc/rtc@40002800
 *   49  /soc/serial@40004400
 *   50  /soc/serial@40004800
 *   51  /soc/serial@40013800
 *   52  /soc/spi@40003800
 *   53  /soc/spi@40013000
 *   54  /soc/timer@e000e010
 *   55  /usbphy
 *   56  /soc/usb@40005c00
 *   57  /soc/watchdog@40002c00
 *   58  /soc/watchdog@40003000
 *   59  /soc/flash-controller@40022000
 *   60  /soc/flash-controller@40022000/flash@8000000
 *   61  /soc/flash-controller@40022000/flash@8000000/partitions
 *   62  /soc/flash-controller@40022000/flash@8000000/partitions/partition@3e800
 *   63  /soc/i2c@40005400
 *   64  /soc/i2c@40005400/ssd1306@3c
 *   65  /soc/pin-controller@48000000/gpio@48000c00
 *   66  /soc/pin-controller@48000000/gpio@48001000
 *   67  /soc/pin-controller@48000000/gpio@48001400
 *   68  /soc/timers@40000000
 *   69  /soc/timers@40000000/pwm
 *   70  /soc/timers@40000400
 *   71  /soc/timers@40000400/pwm
 *   72  /soc/timers@40000800
 *   73  /soc/timers@40000800/pwm
 *   74  /soc/timers@40001000
 *   75  /soc/timers@40001000/pwm
 *   76  /soc/timers@40001400
 *   77  /soc/timers@40001400/pwm
 *   78  /soc/timers@40012c00
 *   79  /soc/timers@40012c00/pwm
 *   80  /soc/timers@40013400
 *   81  /soc/timers@40013400/pwm
 *   82  /soc/timers@40014000
 *   83  /soc/timers@40014000/pwm
 *   84  /soc/timers@40014400
 *   85  /soc/timers@40014400/pwm
 *   86  /soc/timers@40014800
 *   87  /soc/timers@40014800/pwm
 *   88  /soc/timers@40015000
 *   89  /soc/timers@40015000/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by tree-wide information (active compatibles, chosen nodes,
 * etc.).
 */

/*
 * Devicetree node:
 *   /
 *
 * No matching binding.
 *
 * Dependency Ordinal: 0
 *
 * Supports:
 *   1   /aliases
 *   15  /behaviors
 *   2   /chosen
 *   3   /connector_a
 *   4   /connector_d
 *   31  /cpus
 *   33  /keymap
 *   5   /keymap_transform_0
 *   6   /keymap_transform_1
 *   12  /kscan
 *   39  /leds
 *   13  /memory@10000000
 *   14  /memory@20000000
 *   7   /soc
 *   55  /usbphy
 */

/*
 * Devicetree node:
 *   /aliases
 *
 * No matching binding.
 *
 * Dependency Ordinal: 1
 *
 * Requires:
 *   0   /
 */

/*
 * Devicetree node:
 *   /chosen
 *
 * No matching binding.
 *
 * Dependency Ordinal: 2
 *
 * Requires:
 *   0   /
 */

/*
 * Devicetree node:
 *   /connector_a
 *
 * No matching binding.
 *
 * Dependency Ordinal: 3
 *
 * Requires:
 *   0   /
 */

/*
 * Devicetree node:
 *   /connector_d
 *
 * No matching binding.
 *
 * Dependency Ordinal: 4
 *
 * Requires:
 *   0   /
 */

/*
 * Devicetree node:
 *   /keymap_transform_0
 *
 * Binding (compatible = zmk,matrix-transform):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/zmk,matrix-transform.yaml
 *
 * Dependency Ordinal: 5
 *
 * Requires:
 *   0   /
 *
 * Description:
 *   Defines a mapping from keymap logical positions to matrix physical positions
 */
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_COLUMNS 12
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_COLUMNS      DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_COLUMNS
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_ROWS 4
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_ROWS         DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_ROWS
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_COL_OFFSET 6
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_COL_OFFSET   DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_COL_OFFSET
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_0 0
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_0        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_0
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_1 1
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_1        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_1
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_2 2
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_2        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_2
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_3 3
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_3        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_3
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_4 4
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_4        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_4
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_5 5
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_5        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_5
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_6 6
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_6        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_6
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_7 7
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_7        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_7
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_8 8
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_8        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_8
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_9 9
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_9        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_9
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_10 10
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_10       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_10
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_11 11
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_11       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_11
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_12 256
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_12       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_12
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_13 257
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_13       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_13
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_14 258
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_14       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_14
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_15 259
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_15       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_15
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_16 260
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_16       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_16
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_17 261
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_17       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_17
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_18 262
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_18       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_18
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_19 263
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_19       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_19
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_20 264
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_20       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_20
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_21 265
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_21       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_21
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_22 266
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_22       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_22
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_23 267
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_23       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_23
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_24 512
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_24       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_24
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_25 513
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_25       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_25
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_26 514
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_26       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_26
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_27 515
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_27       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_27
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_28 516
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_28       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_28
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_29 517
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_29       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_29
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_30 518
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_30       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_30
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_31 519
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_31       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_31
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_32 520
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_32       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_32
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_33 521
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_33       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_33
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_34 522
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_34       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_34
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_35 523
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_35       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_35
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_36 771
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_36       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_36
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_37 772
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_37       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_37
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_38 773
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_38       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_38
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_39 774
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_39       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_39
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_40 775
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_40       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_40
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_41 776
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP_41       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP_41
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 771, 772, 773, 774, 775, 776}
#define DT_INST_0_ZMK_MATRIX_TRANSFORM_MAP          DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_0_MAP
#define DT_INST_0_ZMK_MATRIX_TRANSFORM              1

/*
 * Devicetree node:
 *   /keymap_transform_1
 *
 * Binding (compatible = zmk,matrix-transform):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/zmk,matrix-transform.yaml
 *
 * Dependency Ordinal: 6
 *
 * Requires:
 *   0   /
 *
 * Description:
 *   Defines a mapping from keymap logical positions to matrix physical positions
 */
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_COLUMNS 10
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_COLUMNS      DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_COLUMNS
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_ROWS 4
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_ROWS         DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_ROWS
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_COL_OFFSET 0
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_COL_OFFSET   DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_COL_OFFSET
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_0 1
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_0        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_0
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_1 2
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_1        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_1
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_2 3
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_2        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_2
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_3 4
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_3        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_3
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_4 5
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_4        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_4
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_5 6
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_5        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_5
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_6 7
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_6        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_6
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_7 8
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_7        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_7
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_8 9
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_8        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_8
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_9 10
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_9        DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_9
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_10 257
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_10       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_10
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_11 258
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_11       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_11
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_12 259
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_12       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_12
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_13 260
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_13       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_13
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_14 261
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_14       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_14
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_15 262
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_15       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_15
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_16 263
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_16       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_16
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_17 264
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_17       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_17
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_18 265
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_18       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_18
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_19 266
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_19       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_19
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_20 513
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_20       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_20
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_21 514
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_21       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_21
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_22 515
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_22       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_22
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_23 516
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_23       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_23
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_24 517
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_24       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_24
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_25 518
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_25       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_25
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_26 519
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_26       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_26
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_27 520
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_27       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_27
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_28 521
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_28       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_28
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_29 522
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_29       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_29
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_30 771
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_30       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_30
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_31 772
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_31       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_31
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_32 773
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_32       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_32
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_33 774
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_33       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_33
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_34 775
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_34       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_34
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_35 776
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP_35       DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP_35
#define DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 771, 772, 773, 774, 775, 776}
#define DT_INST_1_ZMK_MATRIX_TRANSFORM_MAP          DT_ZMK_MATRIX_TRANSFORM_KEYMAP_TRANSFORM_1_MAP
#define DT_INST_1_ZMK_MATRIX_TRANSFORM              1

/*
 * Devicetree node:
 *   /soc
 *
 * No matching binding.
 *
 * Dependency Ordinal: 7
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   43  /soc/adc@50000000
 *   44  /soc/can@40006400
 *   45  /soc/dma@40020000
 *   46  /soc/dma@40020400
 *   59  /soc/flash-controller@40022000
 *   63  /soc/i2c@40005400
 *   47  /soc/i2c@40005800
 *   42  /soc/interrupt-controller@e000e100
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *   48  /soc/rtc@40002800
 *   49  /soc/serial@40004400
 *   50  /soc/serial@40004800
 *   51  /soc/serial@40013800
 *   52  /soc/spi@40003800
 *   53  /soc/spi@40013000
 *   54  /soc/timer@e000e010
 *   68  /soc/timers@40000000
 *   70  /soc/timers@40000400
 *   72  /soc/timers@40000800
 *   74  /soc/timers@40001000
 *   76  /soc/timers@40001400
 *   78  /soc/timers@40012c00
 *   80  /soc/timers@40013400
 *   82  /soc/timers@40014000
 *   84  /soc/timers@40014400
 *   86  /soc/timers@40014800
 *   88  /soc/timers@40015000
 *   56  /soc/usb@40005c00
 *   57  /soc/watchdog@40002c00
 *   58  /soc/watchdog@40003000
 */

/*
 * Devicetree node:
 *   /soc/pin-controller@48000000
 *
 * Binding (compatible = st,stm32-pinmux):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/st,stm32-pinmux.yaml
 *
 * Dependency Ordinal: 8
 *
 * Requires:
 *   7   /soc
 *
 * Supports:
 *   10  /soc/pin-controller@48000000/gpio@48000000
 *   11  /soc/pin-controller@48000000/gpio@48000400
 *   40  /soc/pin-controller@48000000/gpio@48000800
 *   65  /soc/pin-controller@48000000/gpio@48000c00
 *   66  /soc/pin-controller@48000000/gpio@48001000
 *   67  /soc/pin-controller@48000000/gpio@48001400
 *
 * Description:
 *   STM32 PINMUX
 */
#define DT_ST_STM32_PINMUX_48000000_BASE_ADDRESS    0x48000000
#define DT_INST_0_ST_STM32_PINMUX_BASE_ADDRESS      DT_ST_STM32_PINMUX_48000000_BASE_ADDRESS
#define DT_ST_STM32_PINMUX_48000000_SIZE            6144
#define DT_INST_0_ST_STM32_PINMUX_SIZE              DT_ST_STM32_PINMUX_48000000_SIZE
#define DT_INST_0_ST_STM32_PINMUX                   1

/*
 * Devicetree node:
 *   /soc/rcc@40021000
 *
 * Binding (compatible = st,stm32-rcc):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-rcc.yaml
 *
 * Dependency Ordinal: 9
 *
 * Requires:
 *   7   /soc
 *
 * Supports:
 *   43  /soc/adc@50000000
 *   44  /soc/can@40006400
 *   45  /soc/dma@40020000
 *   46  /soc/dma@40020400
 *   63  /soc/i2c@40005400
 *   47  /soc/i2c@40005800
 *   48  /soc/rtc@40002800
 *   49  /soc/serial@40004400
 *   50  /soc/serial@40004800
 *   51  /soc/serial@40013800
 *   52  /soc/spi@40003800
 *   53  /soc/spi@40013000
 *   68  /soc/timers@40000000
 *   70  /soc/timers@40000400
 *   72  /soc/timers@40000800
 *   74  /soc/timers@40001000
 *   76  /soc/timers@40001400
 *   78  /soc/timers@40012c00
 *   80  /soc/timers@40013400
 *   82  /soc/timers@40014000
 *   84  /soc/timers@40014400
 *   86  /soc/timers@40014800
 *   88  /soc/timers@40015000
 *   56  /soc/usb@40005c00
 *   57  /soc/watchdog@40002c00
 *   10  /soc/pin-controller@48000000/gpio@48000000
 *   11  /soc/pin-controller@48000000/gpio@48000400
 *   40  /soc/pin-controller@48000000/gpio@48000800
 *   65  /soc/pin-controller@48000000/gpio@48000c00
 *   66  /soc/pin-controller@48000000/gpio@48001000
 *   67  /soc/pin-controller@48000000/gpio@48001400
 *
 * Description:
 *   STM32 RCC (Reset and Clock Controller)
 */
#define DT_ST_STM32_RCC_40021000_BASE_ADDRESS       0x40021000
#define DT_INST_0_ST_STM32_RCC_BASE_ADDRESS         DT_ST_STM32_RCC_40021000_BASE_ADDRESS
#define DT_ST_STM32_RCC_40021000_SIZE               1024
#define DT_INST_0_ST_STM32_RCC_SIZE                 DT_ST_STM32_RCC_40021000_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ST_STM32_RCC_40021000_LABEL              "STM32_CLK_RCC"
#define DT_INST_0_ST_STM32_RCC_LABEL                DT_ST_STM32_RCC_40021000_LABEL
#define DT_INST_0_ST_STM32_RCC                      1

/*
 * Devicetree node:
 *   /soc/pin-controller@48000000/gpio@48000000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * Dependency Ordinal: 10
 *
 * Requires:
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   12  /kscan
 *
 * Description:
 *   STM32 GPIO node
 */
#define DT_ST_STM32_GPIO_48000000_BASE_ADDRESS      0x48000000
#define DT_INST_0_ST_STM32_GPIO_BASE_ADDRESS        DT_ST_STM32_GPIO_48000000_BASE_ADDRESS
#define DT_ST_STM32_GPIO_48000000_SIZE              1024
#define DT_INST_0_ST_STM32_GPIO_SIZE                DT_ST_STM32_GPIO_48000000_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ST_STM32_GPIO_48000000_LABEL             "GPIOA"
#define DT_INST_0_ST_STM32_GPIO_LABEL               DT_ST_STM32_GPIO_48000000_LABEL
/* Number of gpios supported */
#define DT_ST_STM32_GPIO_48000000_NGPIOS            32
#define DT_INST_0_ST_STM32_GPIO_NGPIOS              DT_ST_STM32_GPIO_48000000_NGPIOS
#define DT_ST_STM32_GPIO_48000000_CLOCK_CONTROLLER  "STM32_CLK_RCC"
#define DT_INST_0_ST_STM32_GPIO_CLOCK_CONTROLLER    DT_ST_STM32_GPIO_48000000_CLOCK_CONTROLLER
#define DT_ST_STM32_GPIO_48000000_CLOCK_BUS_0       0
#define DT_INST_0_ST_STM32_GPIO_CLOCK_BUS_0         DT_ST_STM32_GPIO_48000000_CLOCK_BUS_0
#define DT_ST_STM32_GPIO_48000000_CLOCK_BUS         DT_ST_STM32_GPIO_48000000_CLOCK_BUS_0
#define DT_INST_0_ST_STM32_GPIO_CLOCK_BUS           DT_ST_STM32_GPIO_48000000_CLOCK_BUS_0
#define DT_ST_STM32_GPIO_48000000_CLOCK_BITS_0      131072
#define DT_INST_0_ST_STM32_GPIO_CLOCK_BITS_0        DT_ST_STM32_GPIO_48000000_CLOCK_BITS_0
#define DT_ST_STM32_GPIO_48000000_CLOCK_BITS        DT_ST_STM32_GPIO_48000000_CLOCK_BITS_0
#define DT_INST_0_ST_STM32_GPIO_CLOCK_BITS          DT_ST_STM32_GPIO_48000000_CLOCK_BITS_0
#define DT_INST_0_ST_STM32_GPIO                     1

/*
 * Devicetree node:
 *   /soc/pin-controller@48000000/gpio@48000400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * Dependency Ordinal: 11
 *
 * Requires:
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   12  /kscan
 *
 * Description:
 *   STM32 GPIO node
 */
#define DT_ST_STM32_GPIO_48000400_BASE_ADDRESS      0x48000400
#define DT_INST_1_ST_STM32_GPIO_BASE_ADDRESS        DT_ST_STM32_GPIO_48000400_BASE_ADDRESS
#define DT_ST_STM32_GPIO_48000400_SIZE              1024
#define DT_INST_1_ST_STM32_GPIO_SIZE                DT_ST_STM32_GPIO_48000400_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ST_STM32_GPIO_48000400_LABEL             "GPIOB"
#define DT_INST_1_ST_STM32_GPIO_LABEL               DT_ST_STM32_GPIO_48000400_LABEL
/* Number of gpios supported */
#define DT_ST_STM32_GPIO_48000400_NGPIOS            32
#define DT_INST_1_ST_STM32_GPIO_NGPIOS              DT_ST_STM32_GPIO_48000400_NGPIOS
#define DT_ST_STM32_GPIO_48000400_CLOCK_CONTROLLER  "STM32_CLK_RCC"
#define DT_INST_1_ST_STM32_GPIO_CLOCK_CONTROLLER    DT_ST_STM32_GPIO_48000400_CLOCK_CONTROLLER
#define DT_ST_STM32_GPIO_48000400_CLOCK_BUS_0       0
#define DT_INST_1_ST_STM32_GPIO_CLOCK_BUS_0         DT_ST_STM32_GPIO_48000400_CLOCK_BUS_0
#define DT_ST_STM32_GPIO_48000400_CLOCK_BUS         DT_ST_STM32_GPIO_48000400_CLOCK_BUS_0
#define DT_INST_1_ST_STM32_GPIO_CLOCK_BUS           DT_ST_STM32_GPIO_48000400_CLOCK_BUS_0
#define DT_ST_STM32_GPIO_48000400_CLOCK_BITS_0      262144
#define DT_INST_1_ST_STM32_GPIO_CLOCK_BITS_0        DT_ST_STM32_GPIO_48000400_CLOCK_BITS_0
#define DT_ST_STM32_GPIO_48000400_CLOCK_BITS        DT_ST_STM32_GPIO_48000400_CLOCK_BITS_0
#define DT_INST_1_ST_STM32_GPIO_CLOCK_BITS          DT_ST_STM32_GPIO_48000400_CLOCK_BITS_0
#define DT_INST_1_ST_STM32_GPIO                     1

/*
 * Devicetree node:
 *   /kscan
 *
 * Binding (compatible = zmk,kscan-gpio-matrix):
 *   /home/laujonat/hakkei/ryval-zmk/app/drivers/zephyr/dts/bindings/kscan/zmk,kscan-gpio-matrix.yaml
 *
 * Dependency Ordinal: 12
 *
 * Requires:
 *   0   /
 *   10  /soc/pin-controller@48000000/gpio@48000000
 *   11  /soc/pin-controller@48000000/gpio@48000400
 *
 * Description:
 *   GPIO keyboard matrix controller
 */
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_CONTROLLER_0 "GPIOB"
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_CONTROLLER_0 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_CONTROLLER_0
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_PIN_0 5
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_PIN_0 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_PIN_0
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_FLAGS_0 32
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_FLAGS_0 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_FLAGS_0
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_0  {"GPIOB", 5, 32}
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_0 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_0
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_CONTROLLER_1 "GPIOB"
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_CONTROLLER_1 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_CONTROLLER_1
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_PIN_1 4
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_PIN_1 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_PIN_1
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_FLAGS_1 32
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_FLAGS_1 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_FLAGS_1
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_1  {"GPIOB", 4, 32}
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_1 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_1
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_CONTROLLER_2 "GPIOB"
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_CONTROLLER_2 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_CONTROLLER_2
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_PIN_2 3
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_PIN_2 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_PIN_2
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_FLAGS_2 32
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_FLAGS_2 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_FLAGS_2
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_2  {"GPIOB", 3, 32}
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_2 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_2
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_CONTROLLER_3 "GPIOB"
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_CONTROLLER_3 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_CONTROLLER_3
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_PIN_3 2
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_PIN_3 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_PIN_3
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_FLAGS_3 32
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_FLAGS_3 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_FLAGS_3
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_3  {"GPIOB", 2, 32}
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_3 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_3
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_COUNT 4
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS_COUNT DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_COUNT
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS    {DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_0, DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_1, DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_2, DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS_3}
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_ROW_GPIOS   DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_ROW_GPIOS
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_CONTROLLER_0 "GPIOB"
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_CONTROLLER_0 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_CONTROLLER_0
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_PIN_0 14
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_PIN_0 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_PIN_0
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_FLAGS_0 0
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_FLAGS_0 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_FLAGS_0
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_0  {"GPIOB", 14, 0}
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_0 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_0
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_CONTROLLER_1 "GPIOB"
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_CONTROLLER_1 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_CONTROLLER_1
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_PIN_1 13
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_PIN_1 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_PIN_1
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_FLAGS_1 0
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_FLAGS_1 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_FLAGS_1
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_1  {"GPIOB", 13, 0}
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_1 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_1
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_CONTROLLER_2 "GPIOB"
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_CONTROLLER_2 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_CONTROLLER_2
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_PIN_2 8
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_PIN_2 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_PIN_2
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_FLAGS_2 0
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_FLAGS_2 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_FLAGS_2
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_2  {"GPIOB", 8, 0}
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_2 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_2
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_CONTROLLER_3 "GPIOA"
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_CONTROLLER_3 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_CONTROLLER_3
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_PIN_3 0
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_PIN_3 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_PIN_3
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_FLAGS_3 0
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_FLAGS_3 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_FLAGS_3
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_3  {"GPIOA", 0, 0}
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_3 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_3
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_CONTROLLER_4 "GPIOA"
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_CONTROLLER_4 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_CONTROLLER_4
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_PIN_4 1
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_PIN_4 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_PIN_4
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_FLAGS_4 0
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_FLAGS_4 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_FLAGS_4
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_4  {"GPIOA", 1, 0}
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_4 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_4
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_CONTROLLER_5 "GPIOA"
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_CONTROLLER_5 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_CONTROLLER_5
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_PIN_5 2
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_PIN_5 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_PIN_5
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_FLAGS_5 0
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_FLAGS_5 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_FLAGS_5
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_5  {"GPIOA", 2, 0}
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_5 DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_5
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_COUNT 6
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS_COUNT DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_COUNT
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS    {DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_0, DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_1, DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_2, DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_3, DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_4, DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS_5}
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_COL_GPIOS   DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_COL_GPIOS
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_DEBOUNCE_PERIOD 5
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_DEBOUNCE_PERIOD DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_DEBOUNCE_PERIOD
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_DIODE_DIRECTION "col2row"
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_DIODE_DIRECTION DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_DIODE_DIRECTION
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_DIODE_DIRECTION_ENUM 1
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_DIODE_DIRECTION_ENUM DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_DIODE_DIRECTION_ENUM
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_LABEL        "KSCAN"
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX_LABEL       DT_ZMK_KSCAN_GPIO_MATRIX_KSCAN_LABEL
#define DT_INST_0_ZMK_KSCAN_GPIO_MATRIX             1

/*
 * Devicetree node:
 *   /memory@10000000
 *
 * Binding (compatible = st,stm32-ccm):
 *   $ZEPHYR_BASE/dts/bindings/arm/st,stm32-ccm.yaml
 *
 * Dependency Ordinal: 13
 *
 * Requires:
 *   0   /
 *
 * Description:
 *   STM32 CCM (Core Coupled Memory)
 */
#define DT_ST_STM32_CCM_10000000_BASE_ADDRESS       0x10000000
#define DT_INST_0_ST_STM32_CCM_BASE_ADDRESS         DT_ST_STM32_CCM_10000000_BASE_ADDRESS
#define DT_ST_STM32_CCM_10000000_SIZE               8192
#define DT_INST_0_ST_STM32_CCM_SIZE                 DT_ST_STM32_CCM_10000000_SIZE
#define DT_INST_0_ST_STM32_CCM                      1

/*
 * Devicetree node:
 *   /memory@20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * Dependency Ordinal: 14
 *
 * Requires:
 *   0   /
 *
 * Description:
 *   Generic on-chip SRAM description
 */
#define DT_MMIO_SRAM_20000000_BASE_ADDRESS          0x20000000
#define DT_INST_0_MMIO_SRAM_BASE_ADDRESS            DT_MMIO_SRAM_20000000_BASE_ADDRESS
#define DT_MMIO_SRAM_20000000_SIZE                  40960
#define DT_INST_0_MMIO_SRAM_SIZE                    DT_MMIO_SRAM_20000000_SIZE
#define DT_INST_0_MMIO_SRAM                         1

/*
 * Devicetree node:
 *   /behaviors
 *
 * No matching binding.
 *
 * Dependency Ordinal: 15
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   35  /behaviors/behavior_bluetooth
 *   16  /behaviors/behavior_ext_power
 *   17  /behaviors/behavior_key_press
 *   19  /behaviors/behavior_layer_tap
 *   20  /behaviors/behavior_mod_tap
 *   18  /behaviors/behavior_momentary_layer
 *   21  /behaviors/behavior_none
 *   22  /behaviors/behavior_outputs
 *   23  /behaviors/behavior_reset
 *   24  /behaviors/behavior_reset_dfu
 *   25  /behaviors/behavior_rgb_underglow
 *   26  /behaviors/behavior_sensor_rotate_key_press
 *   27  /behaviors/behavior_sticky_key
 *   28  /behaviors/behavior_sticky_layer
 *   29  /behaviors/behavior_to_layer
 *   30  /behaviors/behavior_toggle_layer
 *   36  /behaviors/behavior_transparent
 */

/*
 * Devicetree node:
 *   /behaviors/behavior_ext_power
 *
 * Binding (compatible = zmk,behavior-ext-power):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-ext-power.yaml
 *
 * Dependency Ordinal: 16
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   External power control Behavior
 */
#define DT_ZMK_BEHAVIOR_EXT_POWER_BEHAVIOR_EXT_POWER_LABEL "EXT_POWER_BEHAVIOR"
#define DT_INST_0_ZMK_BEHAVIOR_EXT_POWER_LABEL      DT_ZMK_BEHAVIOR_EXT_POWER_BEHAVIOR_EXT_POWER_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_EXT_POWER            1

/*
 * Devicetree node:
 *   /behaviors/behavior_key_press
 *
 * Binding (compatible = zmk,behavior-key-press):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-key-press.yaml
 *
 * Dependency Ordinal: 17
 *
 * Requires:
 *   15  /behaviors
 *
 * Supports:
 *   19  /behaviors/behavior_layer_tap
 *   20  /behaviors/behavior_mod_tap
 *   27  /behaviors/behavior_sticky_key
 *   34  /keymap/default_layer
 *   37  /keymap/lower_layer
 *   38  /keymap/raise_layer
 *
 * Description:
 *   Key press/release behavior
 */
#define DT_ZMK_BEHAVIOR_KEY_PRESS_BEHAVIOR_KEY_PRESS_LABEL "KEY_PRESS"
#define DT_INST_0_ZMK_BEHAVIOR_KEY_PRESS_LABEL      DT_ZMK_BEHAVIOR_KEY_PRESS_BEHAVIOR_KEY_PRESS_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_KEY_PRESS            1

/*
 * Devicetree node:
 *   /behaviors/behavior_momentary_layer
 *
 * Binding (compatible = zmk,behavior-momentary-layer):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-momentary-layer.yaml
 *
 * Dependency Ordinal: 18
 *
 * Requires:
 *   15  /behaviors
 *
 * Supports:
 *   19  /behaviors/behavior_layer_tap
 *   28  /behaviors/behavior_sticky_layer
 *   34  /keymap/default_layer
 *
 * Description:
 *   Momentary layer on press/release behavior
 */
#define DT_ZMK_BEHAVIOR_MOMENTARY_LAYER_BEHAVIOR_MOMENTARY_LAYER_LABEL "MO"
#define DT_INST_0_ZMK_BEHAVIOR_MOMENTARY_LAYER_LABEL DT_ZMK_BEHAVIOR_MOMENTARY_LAYER_BEHAVIOR_MOMENTARY_LAYER_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_MOMENTARY_LAYER      1

/*
 * Devicetree node:
 *   /behaviors/behavior_layer_tap
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * Dependency Ordinal: 19
 *
 * Requires:
 *   15  /behaviors
 *   17  /behaviors/behavior_key_press
 *   18  /behaviors/behavior_momentary_layer
 *
 * Description:
 *   Hold or Tap behavior
 */
#define DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_LAYER_TAP_TAPPING_TERM_MS 200
#define DT_INST_1_ZMK_BEHAVIOR_HOLD_TAP_TAPPING_TERM_MS DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_LAYER_TAP_TAPPING_TERM_MS
#define DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_LAYER_TAP_FLAVOR "tap-preferred"
#define DT_INST_1_ZMK_BEHAVIOR_HOLD_TAP_FLAVOR      DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_LAYER_TAP_FLAVOR
#define DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_LAYER_TAP_FLAVOR_ENUM 2
#define DT_INST_1_ZMK_BEHAVIOR_HOLD_TAP_FLAVOR_ENUM DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_LAYER_TAP_FLAVOR_ENUM
#define DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_LAYER_TAP_LABEL "LAYER_TAP"
#define DT_INST_1_ZMK_BEHAVIOR_HOLD_TAP_LABEL       DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_LAYER_TAP_LABEL
#define DT_INST_1_ZMK_BEHAVIOR_HOLD_TAP             1

/*
 * Devicetree node:
 *   /behaviors/behavior_mod_tap
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * Dependency Ordinal: 20
 *
 * Requires:
 *   15  /behaviors
 *   17  /behaviors/behavior_key_press
 *
 * Description:
 *   Hold or Tap behavior
 */
#define DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_MOD_TAP_TAPPING_TERM_MS 200
#define DT_INST_0_ZMK_BEHAVIOR_HOLD_TAP_TAPPING_TERM_MS DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_MOD_TAP_TAPPING_TERM_MS
#define DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_MOD_TAP_FLAVOR "hold-preferred"
#define DT_INST_0_ZMK_BEHAVIOR_HOLD_TAP_FLAVOR      DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_MOD_TAP_FLAVOR
#define DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_MOD_TAP_FLAVOR_ENUM 0
#define DT_INST_0_ZMK_BEHAVIOR_HOLD_TAP_FLAVOR_ENUM DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_MOD_TAP_FLAVOR_ENUM
#define DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_MOD_TAP_LABEL "MOD_TAP"
#define DT_INST_0_ZMK_BEHAVIOR_HOLD_TAP_LABEL       DT_ZMK_BEHAVIOR_HOLD_TAP_BEHAVIOR_MOD_TAP_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_HOLD_TAP             1

/*
 * Devicetree node:
 *   /behaviors/behavior_none
 *
 * Binding (compatible = zmk,behavior-none):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-none.yaml
 *
 * Dependency Ordinal: 21
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   None Binding Behavior
 */
#define DT_ZMK_BEHAVIOR_NONE_BEHAVIOR_NONE_LABEL    "NONE"
#define DT_INST_0_ZMK_BEHAVIOR_NONE_LABEL           DT_ZMK_BEHAVIOR_NONE_BEHAVIOR_NONE_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_NONE                 1

/*
 * Devicetree node:
 *   /behaviors/behavior_outputs
 *
 * Binding (compatible = zmk,behavior-outputs):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-outputs.yaml
 *
 * Dependency Ordinal: 22
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   Output Selection Behavior
 */
#define DT_ZMK_BEHAVIOR_OUTPUTS_BEHAVIOR_OUTPUTS_LABEL "OUTPUTS"
#define DT_INST_0_ZMK_BEHAVIOR_OUTPUTS_LABEL        DT_ZMK_BEHAVIOR_OUTPUTS_BEHAVIOR_OUTPUTS_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_OUTPUTS              1

/*
 * Devicetree node:
 *   /behaviors/behavior_reset
 *
 * Binding (compatible = zmk,behavior-reset):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-reset.yaml
 *
 * Dependency Ordinal: 23
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   Keyboard Reset Behavior
 */
#define DT_ZMK_BEHAVIOR_RESET_BEHAVIOR_RESET_TYPE   0
#define DT_INST_0_ZMK_BEHAVIOR_RESET_TYPE           DT_ZMK_BEHAVIOR_RESET_BEHAVIOR_RESET_TYPE
#define DT_ZMK_BEHAVIOR_RESET_BEHAVIOR_RESET_LABEL  "RESET"
#define DT_INST_0_ZMK_BEHAVIOR_RESET_LABEL          DT_ZMK_BEHAVIOR_RESET_BEHAVIOR_RESET_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_RESET                1

/*
 * Devicetree node:
 *   /behaviors/behavior_reset_dfu
 *
 * Binding (compatible = zmk,behavior-reset):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-reset.yaml
 *
 * Dependency Ordinal: 24
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   Keyboard Reset Behavior
 */
#define DT_ZMK_BEHAVIOR_RESET_BEHAVIOR_RESET_DFU_TYPE 87
#define DT_INST_1_ZMK_BEHAVIOR_RESET_TYPE           DT_ZMK_BEHAVIOR_RESET_BEHAVIOR_RESET_DFU_TYPE
#define DT_ZMK_BEHAVIOR_RESET_BEHAVIOR_RESET_DFU_LABEL "BOOTLOADER_RESET"
#define DT_INST_1_ZMK_BEHAVIOR_RESET_LABEL          DT_ZMK_BEHAVIOR_RESET_BEHAVIOR_RESET_DFU_LABEL
#define DT_INST_1_ZMK_BEHAVIOR_RESET                1

/*
 * Devicetree node:
 *   /behaviors/behavior_rgb_underglow
 *
 * Binding (compatible = zmk,behavior-rgb-underglow):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-rgb-underglow.yaml
 *
 * Dependency Ordinal: 25
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   RGB Underglow Action
 */
#define DT_ZMK_BEHAVIOR_RGB_UNDERGLOW_BEHAVIOR_RGB_UNDERGLOW_LABEL "RGB_UNDERGLOW"
#define DT_INST_0_ZMK_BEHAVIOR_RGB_UNDERGLOW_LABEL  DT_ZMK_BEHAVIOR_RGB_UNDERGLOW_BEHAVIOR_RGB_UNDERGLOW_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_RGB_UNDERGLOW        1

/*
 * Devicetree node:
 *   /behaviors/behavior_sensor_rotate_key_press
 *
 * Binding (compatible = zmk,behavior-sensor-rotate-key-press):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-sensor-rotate-key-press.yaml
 *
 * Dependency Ordinal: 26
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   Sensor rotate key press/release behavior
 */
#define DT_ZMK_BEHAVIOR_SENSOR_ROTATE_KEY_PRESS_BEHAVIOR_SENSOR_ROTATE_KEY_PRESS_LABEL "ENC_KEY_PRESS"
#define DT_INST_0_ZMK_BEHAVIOR_SENSOR_ROTATE_KEY_PRESS_LABEL DT_ZMK_BEHAVIOR_SENSOR_ROTATE_KEY_PRESS_BEHAVIOR_SENSOR_ROTATE_KEY_PRESS_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_SENSOR_ROTATE_KEY_PRESS 1

/*
 * Devicetree node:
 *   /behaviors/behavior_sticky_key
 *
 * Binding (compatible = zmk,behavior-sticky-key):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-sticky-key.yaml
 *
 * Dependency Ordinal: 27
 *
 * Requires:
 *   15  /behaviors
 *   17  /behaviors/behavior_key_press
 *
 * Description:
 *   Sticky key behavior
 */
#define DT_ZMK_BEHAVIOR_STICKY_KEY_BEHAVIOR_STICKY_KEY_RELEASE_AFTER_MS 1000
#define DT_INST_0_ZMK_BEHAVIOR_STICKY_KEY_RELEASE_AFTER_MS DT_ZMK_BEHAVIOR_STICKY_KEY_BEHAVIOR_STICKY_KEY_RELEASE_AFTER_MS
#define DT_ZMK_BEHAVIOR_STICKY_KEY_BEHAVIOR_STICKY_KEY_LABEL "STICKY_KEY"
#define DT_INST_0_ZMK_BEHAVIOR_STICKY_KEY_LABEL     DT_ZMK_BEHAVIOR_STICKY_KEY_BEHAVIOR_STICKY_KEY_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_STICKY_KEY           1

/*
 * Devicetree node:
 *   /behaviors/behavior_sticky_layer
 *
 * Binding (compatible = zmk,behavior-sticky-key):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-sticky-key.yaml
 *
 * Dependency Ordinal: 28
 *
 * Requires:
 *   15  /behaviors
 *   18  /behaviors/behavior_momentary_layer
 *
 * Description:
 *   Sticky key behavior
 */
#define DT_ZMK_BEHAVIOR_STICKY_KEY_BEHAVIOR_STICKY_LAYER_RELEASE_AFTER_MS 1000
#define DT_INST_1_ZMK_BEHAVIOR_STICKY_KEY_RELEASE_AFTER_MS DT_ZMK_BEHAVIOR_STICKY_KEY_BEHAVIOR_STICKY_LAYER_RELEASE_AFTER_MS
#define DT_ZMK_BEHAVIOR_STICKY_KEY_BEHAVIOR_STICKY_LAYER_LABEL "STICKY_LAYER"
#define DT_INST_1_ZMK_BEHAVIOR_STICKY_KEY_LABEL     DT_ZMK_BEHAVIOR_STICKY_KEY_BEHAVIOR_STICKY_LAYER_LABEL
#define DT_INST_1_ZMK_BEHAVIOR_STICKY_KEY           1

/*
 * Devicetree node:
 *   /behaviors/behavior_to_layer
 *
 * Binding (compatible = zmk,behavior-to-layer):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-to-layer.yaml
 *
 * Dependency Ordinal: 29
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   To Layer
 */
#define DT_ZMK_BEHAVIOR_TO_LAYER_BEHAVIOR_TO_LAYER_LABEL "TO_LAYER"
#define DT_INST_0_ZMK_BEHAVIOR_TO_LAYER_LABEL       DT_ZMK_BEHAVIOR_TO_LAYER_BEHAVIOR_TO_LAYER_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_TO_LAYER             1

/*
 * Devicetree node:
 *   /behaviors/behavior_toggle_layer
 *
 * Binding (compatible = zmk,behavior-toggle-layer):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-toggle-layer.yaml
 *
 * Dependency Ordinal: 30
 *
 * Requires:
 *   15  /behaviors
 *
 * Description:
 *   Toggle Layer
 */
#define DT_ZMK_BEHAVIOR_TOGGLE_LAYER_BEHAVIOR_TOGGLE_LAYER_LABEL "TOGGLE_LAYER"
#define DT_INST_0_ZMK_BEHAVIOR_TOGGLE_LAYER_LABEL   DT_ZMK_BEHAVIOR_TOGGLE_LAYER_BEHAVIOR_TOGGLE_LAYER_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_TOGGLE_LAYER         1

/*
 * Devicetree node:
 *   /cpus
 *
 * No matching binding.
 *
 * Dependency Ordinal: 31
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   32  /cpus/cpu@0
 */

/*
 * Devicetree node:
 *   /cpus/cpu@0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * Dependency Ordinal: 32
 *
 * Requires:
 *   31  /cpus
 *
 * Description:
 *   ARM Cortex-M4F CPU
 */
#define DT_ARM_CORTEX_M4F_0_BASE_ADDRESS            0x0
#define DT_INST_0_ARM_CORTEX_M4F_BASE_ADDRESS       DT_ARM_CORTEX_M4F_0_BASE_ADDRESS
#define DT_INST_0_ARM_CORTEX_M4F                    1

/*
 * Devicetree node:
 *   /keymap
 *
 * Binding (compatible = zmk,keymap):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * Dependency Ordinal: 33
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   34  /keymap/default_layer
 *   37  /keymap/lower_layer
 *   38  /keymap/raise_layer
 *
 * Description:
 *   Allows defining a keymap composed of multiple layers
 */
#define DT_INST_0_ZMK_KEYMAP                        1

/*
 * Devicetree node:
 *   /keymap/default_layer
 *
 * Binding (compatible = zmk,keymap):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * Dependency Ordinal: 34
 *
 * Requires:
 *   33  /keymap
 *   17  /behaviors/behavior_key_press
 *   18  /behaviors/behavior_momentary_layer
 *
 * Description:
 *   A layer to be used in a keymap
 */
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_0 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_0 458795
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_0      {"KEY_PRESS", 458795}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_1 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_1 458772
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_1      {"KEY_PRESS", 458772}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_2 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_2 458778
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_2      {"KEY_PRESS", 458778}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_3 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_3 458760
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_3      {"KEY_PRESS", 458760}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_4 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_4 458773
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_4      {"KEY_PRESS", 458773}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_5 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_5 458775
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_5      {"KEY_PRESS", 458775}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_6 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_6 458780
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_6      {"KEY_PRESS", 458780}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_7 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_7 458776
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_7      {"KEY_PRESS", 458776}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_8 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_8 458764
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_8      {"KEY_PRESS", 458764}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_9 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_9 458770
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_9      {"KEY_PRESS", 458770}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_10 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_10 458771
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_10     {"KEY_PRESS", 458771}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_11 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_11 458794
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_11     {"KEY_PRESS", 458794}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_12 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_12 458976
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_12     {"KEY_PRESS", 458976}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_13 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_13 458756
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_13     {"KEY_PRESS", 458756}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_14 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_14 458774
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_14     {"KEY_PRESS", 458774}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_15 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_15 458759
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_15     {"KEY_PRESS", 458759}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_16 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_16 458761
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_16     {"KEY_PRESS", 458761}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_17 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_17 458762
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_17     {"KEY_PRESS", 458762}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_18 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_18 458763
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_18     {"KEY_PRESS", 458763}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_19 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_19 458765
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_19     {"KEY_PRESS", 458765}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_20 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_20 458766
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_20     {"KEY_PRESS", 458766}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_21 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_21 458767
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_21     {"KEY_PRESS", 458767}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_22 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_22 458803
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_22     {"KEY_PRESS", 458803}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_23 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_23 458804
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_23     {"KEY_PRESS", 458804}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_24 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_24 458977
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_24     {"KEY_PRESS", 458977}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_25 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_25 458781
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_25     {"KEY_PRESS", 458781}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_26 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_26 458779
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_26     {"KEY_PRESS", 458779}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_27 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_27 458758
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_27     {"KEY_PRESS", 458758}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_28 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_28 458777
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_28     {"KEY_PRESS", 458777}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_29 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_29 458757
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_29     {"KEY_PRESS", 458757}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_30 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_30 458769
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_30     {"KEY_PRESS", 458769}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_31 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_31 458768
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_31     {"KEY_PRESS", 458768}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_32 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_32 458806
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_32     {"KEY_PRESS", 458806}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_33 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_33 458807
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_33     {"KEY_PRESS", 458807}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_34 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_34 458808
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_34     {"KEY_PRESS", 458808}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_35 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_35 458981
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_35     {"KEY_PRESS", 458981}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_36 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_36 458979
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_36     {"KEY_PRESS", 458979}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_37 "MO"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_37 1
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_37     {"MO", 1}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_38 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_38 458796
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_38     {"KEY_PRESS", 458796}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_39 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_39 458792
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_39     {"KEY_PRESS", 458792}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_40 "MO"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_40 2
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_40     {"MO", 2}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_CONTROLLER_41 "KEY_PRESS"
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_PARAM1_41 458982
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_41     {"KEY_PRESS", 458982}
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_COUNT  42
#define DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS        {DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_0, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_1, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_2, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_3, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_4, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_5, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_6, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_7, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_8, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_9, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_10, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_11, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_12, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_13, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_14, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_15, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_16, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_17, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_18, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_19, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_20, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_21, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_22, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_23, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_24, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_25, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_26, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_27, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_28, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_29, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_30, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_31, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_32, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_33, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_34, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_35, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_36, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_37, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_38, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_39, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_40, DT_ZMK_KEYMAP_DEFAULT_LAYER_BINDINGS_41}

/*
 * Devicetree node:
 *   /behaviors/behavior_bluetooth
 *
 * Binding (compatible = zmk,behavior-bluetooth):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-bluetooth.yaml
 *
 * Dependency Ordinal: 35
 *
 * Requires:
 *   15  /behaviors
 *
 * Supports:
 *   37  /keymap/lower_layer
 *
 * Description:
 *   Bluetooth Behavior
 */
#define DT_ZMK_BEHAVIOR_BLUETOOTH_BEHAVIOR_BLUETOOTH_LABEL "BLUETOOTH"
#define DT_INST_0_ZMK_BEHAVIOR_BLUETOOTH_LABEL      DT_ZMK_BEHAVIOR_BLUETOOTH_BEHAVIOR_BLUETOOTH_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_BLUETOOTH            1

/*
 * Devicetree node:
 *   /behaviors/behavior_transparent
 *
 * Binding (compatible = zmk,behavior-transparent):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/behaviors/zmk,behavior-transparent.yaml
 *
 * Dependency Ordinal: 36
 *
 * Requires:
 *   15  /behaviors
 *
 * Supports:
 *   37  /keymap/lower_layer
 *   38  /keymap/raise_layer
 *
 * Description:
 *   Transparent Binding Behavior
 */
#define DT_ZMK_BEHAVIOR_TRANSPARENT_BEHAVIOR_TRANSPARENT_LABEL "TRANS"
#define DT_INST_0_ZMK_BEHAVIOR_TRANSPARENT_LABEL    DT_ZMK_BEHAVIOR_TRANSPARENT_BEHAVIOR_TRANSPARENT_LABEL
#define DT_INST_0_ZMK_BEHAVIOR_TRANSPARENT          1

/*
 * Devicetree node:
 *   /keymap/lower_layer
 *
 * Binding (compatible = zmk,keymap):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * Dependency Ordinal: 37
 *
 * Requires:
 *   33  /keymap
 *   35  /behaviors/behavior_bluetooth
 *   17  /behaviors/behavior_key_press
 *   36  /behaviors/behavior_transparent
 *
 * Description:
 *   A layer to be used in a keymap
 */
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_0 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_0 458793
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_0        {"KEY_PRESS", 458793}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_1 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_1 458782
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_1        {"KEY_PRESS", 458782}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_2 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_2 458783
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_2        {"KEY_PRESS", 458783}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_3 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_3 458784
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_3        {"KEY_PRESS", 458784}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_4 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_4 458785
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_4        {"KEY_PRESS", 458785}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_5 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_5 458786
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_5        {"KEY_PRESS", 458786}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_6 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_6 458787
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_6        {"KEY_PRESS", 458787}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_7 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_7 458788
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_7        {"KEY_PRESS", 458788}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_8 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_8 458789
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_8        {"KEY_PRESS", 458789}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_9 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_9 458790
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_9        {"KEY_PRESS", 458790}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_10 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_10 458791
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_10       {"KEY_PRESS", 458791}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_11 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_11 458794
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_11       {"KEY_PRESS", 458794}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_12 "BLUETOOTH"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_12 0
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM2_12 0
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_12       {"BLUETOOTH", 0, 0}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_13 "BLUETOOTH"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_13 3
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM2_13 0
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_13       {"BLUETOOTH", 3, 0}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_14 "BLUETOOTH"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_14 3
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM2_14 1
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_14       {"BLUETOOTH", 3, 1}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_15 "BLUETOOTH"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_15 3
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM2_15 2
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_15       {"BLUETOOTH", 3, 2}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_16 "BLUETOOTH"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_16 3
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM2_16 3
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_16       {"BLUETOOTH", 3, 3}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_17 "BLUETOOTH"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_17 3
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM2_17 4
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_17       {"BLUETOOTH", 3, 4}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_18 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_18 458832
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_18       {"KEY_PRESS", 458832}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_19 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_19 458833
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_19       {"KEY_PRESS", 458833}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_20 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_20 458834
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_20       {"KEY_PRESS", 458834}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_21 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_21 458831
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_21       {"KEY_PRESS", 458831}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_22 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_22       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_23 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_23       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_24 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_24 458977
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_24       {"KEY_PRESS", 458977}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_25 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_25       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_26 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_26       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_27 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_27       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_28 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_28       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_29 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_29       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_30 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_30       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_31 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_31       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_32 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_32       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_33 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_33       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_34 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_34       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_35 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_35       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_36 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_36 458979
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_36       {"KEY_PRESS", 458979}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_37 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_37       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_38 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_38 458796
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_38       {"KEY_PRESS", 458796}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_39 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_39 458792
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_39       {"KEY_PRESS", 458792}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_40 "TRANS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_40       {"TRANS"}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_CONTROLLER_41 "KEY_PRESS"
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_PARAM1_41 458982
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_41       {"KEY_PRESS", 458982}
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_COUNT    42
#define DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS          {DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_0, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_1, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_2, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_3, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_4, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_5, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_6, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_7, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_8, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_9, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_10, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_11, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_12, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_13, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_14, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_15, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_16, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_17, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_18, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_19, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_20, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_21, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_22, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_23, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_24, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_25, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_26, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_27, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_28, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_29, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_30, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_31, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_32, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_33, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_34, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_35, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_36, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_37, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_38, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_39, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_40, DT_ZMK_KEYMAP_LOWER_LAYER_BINDINGS_41}

/*
 * Devicetree node:
 *   /keymap/raise_layer
 *
 * Binding (compatible = zmk,keymap):
 *   /home/laujonat/hakkei/ryval-zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * Dependency Ordinal: 38
 *
 * Requires:
 *   33  /keymap
 *   17  /behaviors/behavior_key_press
 *   36  /behaviors/behavior_transparent
 *
 * Description:
 *   A layer to be used in a keymap
 */
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_0 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_0 458793
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_0        {"KEY_PRESS", 458793}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_1 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_1 34013214
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_1        {"KEY_PRESS", 34013214}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_2 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_2 34013215
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_2        {"KEY_PRESS", 34013215}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_3 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_3 34013216
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_3        {"KEY_PRESS", 34013216}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_4 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_4 34013217
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_4        {"KEY_PRESS", 34013217}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_5 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_5 34013218
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_5        {"KEY_PRESS", 34013218}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_6 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_6 34013219
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_6        {"KEY_PRESS", 34013219}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_7 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_7 34013220
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_7        {"KEY_PRESS", 34013220}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_8 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_8 458837
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_8        {"KEY_PRESS", 458837}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_9 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_9 34013222
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_9        {"KEY_PRESS", 34013222}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_10 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_10 34013223
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_10       {"KEY_PRESS", 34013223}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_11 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_11 458794
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_11       {"KEY_PRESS", 458794}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_12 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_12 458976
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_12       {"KEY_PRESS", 458976}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_13 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_13       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_14 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_14       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_15 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_15       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_16 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_16       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_17 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_17       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_18 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_18 458797
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_18       {"KEY_PRESS", 458797}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_19 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_19 458798
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_19       {"KEY_PRESS", 458798}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_20 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_20 458799
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_20       {"KEY_PRESS", 458799}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_21 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_21 458800
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_21       {"KEY_PRESS", 458800}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_22 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_22 34013233
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_22       {"KEY_PRESS", 34013233}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_23 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_23 458805
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_23       {"KEY_PRESS", 458805}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_24 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_24 458977
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_24       {"KEY_PRESS", 458977}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_25 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_25       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_26 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_26       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_27 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_27       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_28 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_28       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_29 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_29       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_30 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_30       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_31 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_31       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_32 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_32       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_33 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_33       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_34 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_34 458801
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_34       {"KEY_PRESS", 458801}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_35 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_35 34013237
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_35       {"KEY_PRESS", 34013237}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_36 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_36 458979
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_36       {"KEY_PRESS", 458979}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_37 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_37       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_38 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_38 458796
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_38       {"KEY_PRESS", 458796}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_39 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_39 458792
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_39       {"KEY_PRESS", 458792}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_40 "TRANS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_40       {"TRANS"}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_CONTROLLER_41 "KEY_PRESS"
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_PARAM1_41 458982
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_41       {"KEY_PRESS", 458982}
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_COUNT    42
#define DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS          {DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_0, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_1, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_2, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_3, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_4, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_5, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_6, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_7, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_8, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_9, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_10, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_11, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_12, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_13, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_14, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_15, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_16, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_17, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_18, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_19, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_20, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_21, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_22, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_23, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_24, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_25, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_26, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_27, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_28, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_29, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_30, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_31, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_32, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_33, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_34, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_35, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_36, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_37, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_38, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_39, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_40, DT_ZMK_KEYMAP_RAISE_LAYER_BINDINGS_41}

/*
 * Devicetree node:
 *   /leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * Dependency Ordinal: 39
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   41  /leds/led_0
 *
 * Description:
 *   GPIO LEDs parent node
 */
#define DT_INST_0_GPIO_LEDS                         1

/*
 * Devicetree node:
 *   /soc/pin-controller@48000000/gpio@48000800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * Dependency Ordinal: 40
 *
 * Requires:
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   41  /leds/led_0
 *
 * Description:
 *   STM32 GPIO node
 */
#define DT_ST_STM32_GPIO_48000800_BASE_ADDRESS      0x48000800
#define DT_INST_2_ST_STM32_GPIO_BASE_ADDRESS        DT_ST_STM32_GPIO_48000800_BASE_ADDRESS
#define DT_ST_STM32_GPIO_48000800_SIZE              1024
#define DT_INST_2_ST_STM32_GPIO_SIZE                DT_ST_STM32_GPIO_48000800_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ST_STM32_GPIO_48000800_LABEL             "GPIOC"
#define DT_INST_2_ST_STM32_GPIO_LABEL               DT_ST_STM32_GPIO_48000800_LABEL
/* Number of gpios supported */
#define DT_ST_STM32_GPIO_48000800_NGPIOS            32
#define DT_INST_2_ST_STM32_GPIO_NGPIOS              DT_ST_STM32_GPIO_48000800_NGPIOS
#define DT_ST_STM32_GPIO_48000800_CLOCK_CONTROLLER  "STM32_CLK_RCC"
#define DT_INST_2_ST_STM32_GPIO_CLOCK_CONTROLLER    DT_ST_STM32_GPIO_48000800_CLOCK_CONTROLLER
#define DT_ST_STM32_GPIO_48000800_CLOCK_BUS_0       0
#define DT_INST_2_ST_STM32_GPIO_CLOCK_BUS_0         DT_ST_STM32_GPIO_48000800_CLOCK_BUS_0
#define DT_ST_STM32_GPIO_48000800_CLOCK_BUS         DT_ST_STM32_GPIO_48000800_CLOCK_BUS_0
#define DT_INST_2_ST_STM32_GPIO_CLOCK_BUS           DT_ST_STM32_GPIO_48000800_CLOCK_BUS_0
#define DT_ST_STM32_GPIO_48000800_CLOCK_BITS_0      524288
#define DT_INST_2_ST_STM32_GPIO_CLOCK_BITS_0        DT_ST_STM32_GPIO_48000800_CLOCK_BITS_0
#define DT_ST_STM32_GPIO_48000800_CLOCK_BITS        DT_ST_STM32_GPIO_48000800_CLOCK_BITS_0
#define DT_INST_2_ST_STM32_GPIO_CLOCK_BITS          DT_ST_STM32_GPIO_48000800_CLOCK_BITS_0
#define DT_INST_2_ST_STM32_GPIO                     1

/*
 * Devicetree node:
 *   /leds/led_0
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * Dependency Ordinal: 41
 *
 * Requires:
 *   39  /leds
 *   40  /soc/pin-controller@48000000/gpio@48000800
 *
 * Description:
 *   GPIO LED child node
 */
#define DT_GPIO_LEDS_LED_0_GPIOS_CONTROLLER         "GPIOC"
#define DT_GPIO_LEDS_LED_0_GPIOS_PIN                13
#define DT_GPIO_LEDS_LED_0_GPIOS_FLAGS              0
#define DT_GPIO_LEDS_LED_0_GPIOS                    {"GPIOC", 13, 0}
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_GPIO_LEDS_LED_0_LABEL                    "User LED"

/*
 * Devicetree node:
 *   /soc/interrupt-controller@e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * Dependency Ordinal: 42
 *
 * Requires:
 *   7   /soc
 *
 * Supports:
 *   43  /soc/adc@50000000
 *   44  /soc/can@40006400
 *   45  /soc/dma@40020000
 *   46  /soc/dma@40020400
 *   59  /soc/flash-controller@40022000
 *   63  /soc/i2c@40005400
 *   47  /soc/i2c@40005800
 *   48  /soc/rtc@40002800
 *   49  /soc/serial@40004400
 *   50  /soc/serial@40004800
 *   51  /soc/serial@40013800
 *   52  /soc/spi@40003800
 *   53  /soc/spi@40013000
 *   68  /soc/timers@40000000
 *   70  /soc/timers@40000400
 *   72  /soc/timers@40000800
 *   74  /soc/timers@40001000
 *   76  /soc/timers@40001400
 *   78  /soc/timers@40012c00
 *   80  /soc/timers@40013400
 *   82  /soc/timers@40014000
 *   84  /soc/timers@40014400
 *   86  /soc/timers@40014800
 *   88  /soc/timers@40015000
 *   56  /soc/usb@40005c00
 *   57  /soc/watchdog@40002c00
 *
 * Description:
 *   ARMv7-M NVIC (Nested Vectored Interrupt Controller)
 */
#define DT_ARM_V7M_NVIC_E000E100_BASE_ADDRESS       0xe000e100
#define DT_INST_0_ARM_V7M_NVIC_BASE_ADDRESS         DT_ARM_V7M_NVIC_E000E100_BASE_ADDRESS
#define DT_ARM_V7M_NVIC_E000E100_SIZE               3072
#define DT_INST_0_ARM_V7M_NVIC_SIZE                 DT_ARM_V7M_NVIC_E000E100_SIZE
/* number of bits of IRQ priorities */
#define DT_ARM_V7M_NVIC_E000E100_ARM_NUM_IRQ_PRIORITY_BITS 4
#define DT_INST_0_ARM_V7M_NVIC_ARM_NUM_IRQ_PRIORITY_BITS DT_ARM_V7M_NVIC_E000E100_ARM_NUM_IRQ_PRIORITY_BITS
#define DT_INST_0_ARM_V7M_NVIC                      1

/*
 * Devicetree node:
 *   /soc/adc@50000000
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE/dts/bindings/iio/adc/st,stm32-adc.yaml
 *
 * Dependency Ordinal: 43
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   ST STM32 family ADC
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/can@40006400
 *
 * Binding (compatible = st,stm32-can):
 *   $ZEPHYR_BASE/dts/bindings/can/st,stm32-can.yaml
 *
 * Dependency Ordinal: 44
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 CAN controller
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/dma@40020000
 *
 * Binding (compatible = st,stm32-dma):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma.yaml
 *
 * Dependency Ordinal: 45
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   The STM32 DMA is a general-purpose direct memory access controller
 *   capable of supporting 5 or 6 or 7 or 8 independent DMA channels.
 *   Each channel can have up to 8 requests.
 *   DMA clients connected to the STM32 DMA controller must use the format
 *   described in the dma.txt file, using a four-cell specifier for each
 *   channel: a phandle to the DMA controller plus the following four integer cells:
 *     1. channel: the dma stream from 0 in V1 or 1 in V2 to <dma-requests>
 *     2. slot: DMA periph request ID in DMA_V2 or DMAMUX, dma request in V1
 *     3. channel-config: A 32bit mask specifying the DMA channel configuration
 *     which is device dependent:
 *         -bit 6-7 : Direction  (see dma.h)
 *        	       0x0: MEM to MEM
 *        	       0x1: MEM to PERIPH
 *        	       0x2: PERIPH to MEM
 *        	       0x3: reserved for PERIPH to PERIPH
 *         -bit 9 : Peripheral Increment Address
 *        	       0x0: no address increment between transfers
 *        	       0x1: increment address between transfers
 *         -bit 10 : Memory Increment Address
 *        	       0x0: no address increment between transfers
 *        	       0x1: increment address between transfers
 *         -bit 11-12 : Peripheral data size
 *        	       0x0: Byte (8 bits)
 *        	       0x1: Half-word (16 bits)
 *        	       0x2: Word (32 bits)
 *        	       0x3: reserved
 *         -bit 13-14 : Memory data size
 *        	       0x0: Byte (8 bits)
 *        	       0x1: Half-word (16 bits)
 *        	       0x2: Word (32 bits)
 *        	       0x3: reserved
 *         -bit 15: Peripheral Increment Offset Size (not USED for DMA V2)
 *        	       0x0: offset size is linked to the peripheral bus width
 *        	       0x1: offset size is fixed to 4 (32-bit alignment)
 *         -bit 16-17 : Priority level
 *        	       0x0: low
 *        	       0x1: medium
 *        	       0x2: high
 *        	       0x3: very high
 *     4. features: A 32bit bitfield value specifying DMA features
 *         -bit 0-1: DMA FIFO threshold selection (not USED for DMA V2)
 *        	       0x0: 1/4 full FIFO
 *        	       0x1: 1/2 full FIFO
 *        	       0x2: 3/4 full FIFO
 *        	       0x3: full FIFO
 *     examples for stm32wb55x
 *      dma2: dma-controller@40020400 {
 *          compatible = "st,stm32-dma";
 *          ...
 *          st,mem2mem;
 *          dma-requests = <7>;
 *          status = "disabled";
 *          label = "DMA_2";
 *         };
 *
 *   For the client part, example for stm32f411 DMA V1 on DMA2 instance
 *     Tx using stream 5 on channel 3 (stream 2 on channel 2 is also possible)
 *     Rx using stream 2 on channel 3 (stream 0 on channel 3 is also possible)
 *     spi1 {
 *      dmas = <&dma2 5 3 0x28440 0x03>,
 *            <&dma2 2 3 0x28480 0x03>;
 *      dma-names = "tx", "rx";
 *      };
 *
 *   For the client part, example for stm32l476 DMA V2 on DMA1 instance
 *     Tx using channel 3 with request 1
 *     Rx using channel 2 with request 1
 *     spi1 {
 *      compatible = "st,stm32-spi";
 *      dmas = <&dma1 3 1 0x20440 0x04>,
 *            <&dma1 2 1 0x20480 0x04>;
 *      dma-names = "tx", "rx";
 *    };
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/dma@40020400
 *
 * Binding (compatible = st,stm32-dma):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma.yaml
 *
 * Dependency Ordinal: 46
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   The STM32 DMA is a general-purpose direct memory access controller
 *   capable of supporting 5 or 6 or 7 or 8 independent DMA channels.
 *   Each channel can have up to 8 requests.
 *   DMA clients connected to the STM32 DMA controller must use the format
 *   described in the dma.txt file, using a four-cell specifier for each
 *   channel: a phandle to the DMA controller plus the following four integer cells:
 *     1. channel: the dma stream from 0 in V1 or 1 in V2 to <dma-requests>
 *     2. slot: DMA periph request ID in DMA_V2 or DMAMUX, dma request in V1
 *     3. channel-config: A 32bit mask specifying the DMA channel configuration
 *     which is device dependent:
 *         -bit 6-7 : Direction  (see dma.h)
 *        	       0x0: MEM to MEM
 *        	       0x1: MEM to PERIPH
 *        	       0x2: PERIPH to MEM
 *        	       0x3: reserved for PERIPH to PERIPH
 *         -bit 9 : Peripheral Increment Address
 *        	       0x0: no address increment between transfers
 *        	       0x1: increment address between transfers
 *         -bit 10 : Memory Increment Address
 *        	       0x0: no address increment between transfers
 *        	       0x1: increment address between transfers
 *         -bit 11-12 : Peripheral data size
 *        	       0x0: Byte (8 bits)
 *        	       0x1: Half-word (16 bits)
 *        	       0x2: Word (32 bits)
 *        	       0x3: reserved
 *         -bit 13-14 : Memory data size
 *        	       0x0: Byte (8 bits)
 *        	       0x1: Half-word (16 bits)
 *        	       0x2: Word (32 bits)
 *        	       0x3: reserved
 *         -bit 15: Peripheral Increment Offset Size (not USED for DMA V2)
 *        	       0x0: offset size is linked to the peripheral bus width
 *        	       0x1: offset size is fixed to 4 (32-bit alignment)
 *         -bit 16-17 : Priority level
 *        	       0x0: low
 *        	       0x1: medium
 *        	       0x2: high
 *        	       0x3: very high
 *     4. features: A 32bit bitfield value specifying DMA features
 *         -bit 0-1: DMA FIFO threshold selection (not USED for DMA V2)
 *        	       0x0: 1/4 full FIFO
 *        	       0x1: 1/2 full FIFO
 *        	       0x2: 3/4 full FIFO
 *        	       0x3: full FIFO
 *     examples for stm32wb55x
 *      dma2: dma-controller@40020400 {
 *          compatible = "st,stm32-dma";
 *          ...
 *          st,mem2mem;
 *          dma-requests = <7>;
 *          status = "disabled";
 *          label = "DMA_2";
 *         };
 *
 *   For the client part, example for stm32f411 DMA V1 on DMA2 instance
 *     Tx using stream 5 on channel 3 (stream 2 on channel 2 is also possible)
 *     Rx using stream 2 on channel 3 (stream 0 on channel 3 is also possible)
 *     spi1 {
 *      dmas = <&dma2 5 3 0x28440 0x03>,
 *            <&dma2 2 3 0x28480 0x03>;
 *      dma-names = "tx", "rx";
 *      };
 *
 *   For the client part, example for stm32l476 DMA V2 on DMA1 instance
 *     Tx using channel 3 with request 1
 *     Rx using channel 2 with request 1
 *     spi1 {
 *      compatible = "st,stm32-spi";
 *      dmas = <&dma1 3 1 0x20440 0x04>,
 *            <&dma1 2 1 0x20480 0x04>;
 *      dma-names = "tx", "rx";
 *    };
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/i2c@40005800
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * Dependency Ordinal: 47
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 I2C V2 controller
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/rtc@40002800
 *
 * Binding (compatible = st,stm32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/st,stm32-rtc.yaml
 *
 * Dependency Ordinal: 48
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 RTC
 */
#define DT_ST_STM32_RTC_40002800_BASE_ADDRESS       0x40002800
#define DT_INST_0_ST_STM32_RTC_BASE_ADDRESS         DT_ST_STM32_RTC_40002800_BASE_ADDRESS
#define DT_ST_STM32_RTC_40002800_SIZE               1024
#define DT_INST_0_ST_STM32_RTC_SIZE                 DT_ST_STM32_RTC_40002800_SIZE
#define DT_ST_STM32_RTC_40002800_IRQ_0              41
#define DT_INST_0_ST_STM32_RTC_IRQ_0                DT_ST_STM32_RTC_40002800_IRQ_0
#define DT_ST_STM32_RTC_40002800_IRQ_0_PRIORITY     0
#define DT_INST_0_ST_STM32_RTC_IRQ_0_PRIORITY       DT_ST_STM32_RTC_40002800_IRQ_0_PRIORITY
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ST_STM32_RTC_40002800_LABEL              "RTC_0"
#define DT_INST_0_ST_STM32_RTC_LABEL                DT_ST_STM32_RTC_40002800_LABEL
/* RTC frequency equals clock-frequency divided by the prescaler value */
#define DT_ST_STM32_RTC_40002800_PRESCALER          32768
#define DT_INST_0_ST_STM32_RTC_PRESCALER            DT_ST_STM32_RTC_40002800_PRESCALER
#define DT_ST_STM32_RTC_40002800_CLOCK_CONTROLLER   "STM32_CLK_RCC"
#define DT_INST_0_ST_STM32_RTC_CLOCK_CONTROLLER     DT_ST_STM32_RTC_40002800_CLOCK_CONTROLLER
#define DT_ST_STM32_RTC_40002800_CLOCK_BUS_0        2
#define DT_INST_0_ST_STM32_RTC_CLOCK_BUS_0          DT_ST_STM32_RTC_40002800_CLOCK_BUS_0
#define DT_ST_STM32_RTC_40002800_CLOCK_BUS          DT_ST_STM32_RTC_40002800_CLOCK_BUS_0
#define DT_INST_0_ST_STM32_RTC_CLOCK_BUS            DT_ST_STM32_RTC_40002800_CLOCK_BUS_0
#define DT_ST_STM32_RTC_40002800_CLOCK_BITS_0       268435456
#define DT_INST_0_ST_STM32_RTC_CLOCK_BITS_0         DT_ST_STM32_RTC_40002800_CLOCK_BITS_0
#define DT_ST_STM32_RTC_40002800_CLOCK_BITS         DT_ST_STM32_RTC_40002800_CLOCK_BITS_0
#define DT_INST_0_ST_STM32_RTC_CLOCK_BITS           DT_ST_STM32_RTC_40002800_CLOCK_BITS_0
#define DT_INST_0_ST_STM32_RTC                      1

/*
 * Devicetree node:
 *   /soc/serial@40004400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * Dependency Ordinal: 49
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 USART
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/serial@40004800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * Dependency Ordinal: 50
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 USART
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/serial@40013800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * Dependency Ordinal: 51
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 USART
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/spi@40003800
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi-fifo.yaml
 *
 * Dependency Ordinal: 52
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 SPI controller with embedded Rx and Tx FIFOs
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/spi@40013000
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi-fifo.yaml
 *
 * Dependency Ordinal: 53
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 SPI controller with embedded Rx and Tx FIFOs
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timer@e000e010
 *
 * No matching binding.
 *
 * Dependency Ordinal: 54
 *
 * Requires:
 *   7   /soc
 */

/*
 * Devicetree node:
 *   /usbphy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE/dts/bindings/phy/usb-nop-xceiv.yaml
 *
 * Dependency Ordinal: 55
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   56  /soc/usb@40005c00
 *
 * Description:
 *   This binding is to be used by all the usb transceivers which are built-in
 *   with USB IP
 */
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_USB_NOP_XCEIV_USBPHY_LABEL               "USB_FS_PHY"
#define DT_INST_0_USB_NOP_XCEIV_LABEL               DT_USB_NOP_XCEIV_USBPHY_LABEL
#define DT_INST_0_USB_NOP_XCEIV                     1

/*
 * Devicetree node:
 *   /soc/usb@40005c00
 *
 * Binding (compatible = st,stm32-usb):
 *   $ZEPHYR_BASE/dts/bindings/usb/st,stm32-usb.yaml
 *
 * Dependency Ordinal: 56
 *
 * Requires:
 *   7   /soc
 *   55  /usbphy
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 USB controller
 */
#define DT_ST_STM32_USB_40005C00_BASE_ADDRESS       0x40005c00
#define DT_INST_0_ST_STM32_USB_BASE_ADDRESS         DT_ST_STM32_USB_40005C00_BASE_ADDRESS
#define DT_ST_STM32_USB_40005C00_SIZE               1024
#define DT_INST_0_ST_STM32_USB_SIZE                 DT_ST_STM32_USB_40005C00_SIZE
#define DT_ST_STM32_USB_40005C00_IRQ_0              75
#define DT_INST_0_ST_STM32_USB_IRQ_0                DT_ST_STM32_USB_40005C00_IRQ_0
#define DT_ST_STM32_USB_40005C00_IRQ_USB            DT_ST_STM32_USB_40005C00_IRQ_0
#define DT_INST_0_ST_STM32_USB_IRQ_USB              DT_ST_STM32_USB_40005C00_IRQ_0
#define DT_ST_STM32_USB_40005C00_IRQ_0_PRIORITY     0
#define DT_INST_0_ST_STM32_USB_IRQ_0_PRIORITY       DT_ST_STM32_USB_40005C00_IRQ_0_PRIORITY
#define DT_ST_STM32_USB_40005C00_IRQ_USB_PRIORITY   DT_ST_STM32_USB_40005C00_IRQ_0_PRIORITY
#define DT_INST_0_ST_STM32_USB_IRQ_USB_PRIORITY     DT_ST_STM32_USB_40005C00_IRQ_0_PRIORITY
/* Size of USB dedicated RAM. STM32 SOC's reference manual defines USB packet SRAM size. */
#define DT_ST_STM32_USB_40005C00_RAM_SIZE           512
#define DT_INST_0_ST_STM32_USB_RAM_SIZE             DT_ST_STM32_USB_40005C00_RAM_SIZE
/* For STM32F0 series SoCs on QFN28 and TSSOP20 packages enable PIN pair PA11/12 mapped instead of PA9/10 (e.g. stm32f070x6) */
#define DT_ST_STM32_USB_40005C00_ENABLE_PIN_REMAP   0
#define DT_INST_0_ST_STM32_USB_ENABLE_PIN_REMAP     DT_ST_STM32_USB_40005C00_ENABLE_PIN_REMAP
/* Number of bi-directional endpoints supported by hardware (including EP0) */
#define DT_ST_STM32_USB_40005C00_NUM_BIDIR_ENDPOINTS 8
#define DT_INST_0_ST_STM32_USB_NUM_BIDIR_ENDPOINTS  DT_ST_STM32_USB_40005C00_NUM_BIDIR_ENDPOINTS
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ST_STM32_USB_40005C00_LABEL              "USB"
#define DT_INST_0_ST_STM32_USB_LABEL                DT_ST_STM32_USB_40005C00_LABEL
/* name of each interrupt */
#define DT_ST_STM32_USB_40005C00_INTERRUPT_NAMES_0  "usb"
#define DT_INST_0_ST_STM32_USB_INTERRUPT_NAMES_0    DT_ST_STM32_USB_40005C00_INTERRUPT_NAMES_0
#define DT_ST_STM32_USB_40005C00_CLOCK_CONTROLLER   "STM32_CLK_RCC"
#define DT_INST_0_ST_STM32_USB_CLOCK_CONTROLLER     DT_ST_STM32_USB_40005C00_CLOCK_CONTROLLER
#define DT_ST_STM32_USB_40005C00_CLOCK_BUS_0        2
#define DT_INST_0_ST_STM32_USB_CLOCK_BUS_0          DT_ST_STM32_USB_40005C00_CLOCK_BUS_0
#define DT_ST_STM32_USB_40005C00_CLOCK_BUS          DT_ST_STM32_USB_40005C00_CLOCK_BUS_0
#define DT_INST_0_ST_STM32_USB_CLOCK_BUS            DT_ST_STM32_USB_40005C00_CLOCK_BUS_0
#define DT_ST_STM32_USB_40005C00_CLOCK_BITS_0       8388608
#define DT_INST_0_ST_STM32_USB_CLOCK_BITS_0         DT_ST_STM32_USB_40005C00_CLOCK_BITS_0
#define DT_ST_STM32_USB_40005C00_CLOCK_BITS         DT_ST_STM32_USB_40005C00_CLOCK_BITS_0
#define DT_INST_0_ST_STM32_USB_CLOCK_BITS           DT_ST_STM32_USB_40005C00_CLOCK_BITS_0
#define DT_INST_0_ST_STM32_USB                      1

/*
 * Devicetree node:
 *   /soc/watchdog@40002c00
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-window-watchdog.yaml
 *
 * Dependency Ordinal: 57
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 system window watchdog
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/watchdog@40003000
 *
 * Binding (compatible = st,stm32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-watchdog.yaml
 *
 * Dependency Ordinal: 58
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   STM32 watchdog
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/flash-controller@40022000
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/st,stm32-flash-controller.yaml
 *
 * Dependency Ordinal: 59
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *
 * Supports:
 *   60  /soc/flash-controller@40022000/flash@8000000
 *
 * Description:
 *   STM32 Family flash controller
 */
#define DT_ST_STM32_FLASH_CONTROLLER_40022000_BASE_ADDRESS 0x40022000
#define DT_INST_0_ST_STM32_FLASH_CONTROLLER_BASE_ADDRESS DT_ST_STM32_FLASH_CONTROLLER_40022000_BASE_ADDRESS
#define DT_INST_0_ST_STM32F3_FLASH_CONTROLLER_BASE_ADDRESS DT_ST_STM32_FLASH_CONTROLLER_40022000_BASE_ADDRESS
#define DT_ST_STM32_FLASH_CONTROLLER_40022000_SIZE  1024
#define DT_INST_0_ST_STM32_FLASH_CONTROLLER_SIZE    DT_ST_STM32_FLASH_CONTROLLER_40022000_SIZE
#define DT_INST_0_ST_STM32F3_FLASH_CONTROLLER_SIZE  DT_ST_STM32_FLASH_CONTROLLER_40022000_SIZE
#define DT_ST_STM32_FLASH_CONTROLLER_40022000_IRQ_0 4
#define DT_INST_0_ST_STM32_FLASH_CONTROLLER_IRQ_0   DT_ST_STM32_FLASH_CONTROLLER_40022000_IRQ_0
#define DT_INST_0_ST_STM32F3_FLASH_CONTROLLER_IRQ_0 DT_ST_STM32_FLASH_CONTROLLER_40022000_IRQ_0
#define DT_ST_STM32_FLASH_CONTROLLER_40022000_IRQ_0_PRIORITY 0
#define DT_INST_0_ST_STM32_FLASH_CONTROLLER_IRQ_0_PRIORITY DT_ST_STM32_FLASH_CONTROLLER_40022000_IRQ_0_PRIORITY
#define DT_INST_0_ST_STM32F3_FLASH_CONTROLLER_IRQ_0_PRIORITY DT_ST_STM32_FLASH_CONTROLLER_40022000_IRQ_0_PRIORITY
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ST_STM32_FLASH_CONTROLLER_40022000_LABEL "FLASH_CTRL"
#define DT_INST_0_ST_STM32_FLASH_CONTROLLER_LABEL   DT_ST_STM32_FLASH_CONTROLLER_40022000_LABEL
#define DT_INST_0_ST_STM32F3_FLASH_CONTROLLER_LABEL DT_ST_STM32_FLASH_CONTROLLER_40022000_LABEL
#define DT_INST_0_ST_STM32_FLASH_CONTROLLER         1
#define DT_INST_0_ST_STM32F3_FLASH_CONTROLLER       1

/*
 * Devicetree node:
 *   /soc/flash-controller@40022000/flash@8000000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * Dependency Ordinal: 60
 *
 * Requires:
 *   59  /soc/flash-controller@40022000
 *
 * Supports:
 *   61  /soc/flash-controller@40022000/flash@8000000/partitions
 *
 * Description:
 *   Flash node
 */
#define DT_SOC_NV_FLASH_8000000_BASE_ADDRESS        0x8000000
#define DT_INST_0_SOC_NV_FLASH_BASE_ADDRESS         DT_SOC_NV_FLASH_8000000_BASE_ADDRESS
#define DT_SOC_NV_FLASH_8000000_SIZE                262144
#define DT_INST_0_SOC_NV_FLASH_SIZE                 DT_SOC_NV_FLASH_8000000_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_SOC_NV_FLASH_8000000_LABEL               "FLASH_STM32"
#define DT_INST_0_SOC_NV_FLASH_LABEL                DT_SOC_NV_FLASH_8000000_LABEL
/* address alignment required by flash erase operations */
#define DT_SOC_NV_FLASH_8000000_ERASE_BLOCK_SIZE    2048
#define DT_INST_0_SOC_NV_FLASH_ERASE_BLOCK_SIZE     DT_SOC_NV_FLASH_8000000_ERASE_BLOCK_SIZE
/* address alignment required by flash write operations */
#define DT_SOC_NV_FLASH_8000000_WRITE_BLOCK_SIZE    2
#define DT_INST_0_SOC_NV_FLASH_WRITE_BLOCK_SIZE     DT_SOC_NV_FLASH_8000000_WRITE_BLOCK_SIZE
#define DT_INST_0_SOC_NV_FLASH                      1

/*
 * Devicetree node:
 *   /soc/flash-controller@40022000/flash@8000000/partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/partition.yaml
 *
 * Dependency Ordinal: 61
 *
 * Requires:
 *   60  /soc/flash-controller@40022000/flash@8000000
 *
 * Supports:
 *   62  /soc/flash-controller@40022000/flash@8000000/partitions/partition@3e800
 *
 * Description:
 *   Flash partitions parent node
 */
#define DT_INST_0_FIXED_PARTITIONS                  1

/*
 * Devicetree node:
 *   /soc/flash-controller@40022000/flash@8000000/partitions/partition@3e800
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/partition.yaml
 *
 * Dependency Ordinal: 62
 *
 * Requires:
 *   61  /soc/flash-controller@40022000/flash@8000000/partitions
 *
 * Description:
 *   Flash partition child node
 */
#define DT_FLASH_AREA_STORAGE_ID                    0
#define DT_FLASH_AREA_STORAGE_READ_ONLY             0
#define DT_FLASH_AREA_STORAGE_OFFSET_0              256000
#define DT_FLASH_AREA_STORAGE_OFFSET                DT_FLASH_AREA_STORAGE_OFFSET_0
#define DT_FLASH_AREA_STORAGE_SIZE_0                6144
#define DT_FLASH_AREA_STORAGE_SIZE                  DT_FLASH_AREA_STORAGE_SIZE_0
#define DT_FLASH_AREA_STORAGE_DEV                   "FLASH_CTRL"
#define DT_FLASH_AREA_0_ID                          0
#define DT_FLASH_AREA_0_READ_ONLY                   0
#define DT_FLASH_AREA_0_OFFSET_0                    256000
#define DT_FLASH_AREA_0_OFFSET                      DT_FLASH_AREA_0_OFFSET_0
#define DT_FLASH_AREA_0_SIZE_0                      6144
#define DT_FLASH_AREA_0_SIZE                        DT_FLASH_AREA_0_SIZE_0
#define DT_FLASH_AREA_0_DEV                         "FLASH_CTRL"
#define DT_FIXED_PARTITIONS_3E800_BASE_ADDRESS      0x3e800
#define DT_FIXED_PARTITIONS_3E800_SIZE              6144
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_FIXED_PARTITIONS_3E800_LABEL             "storage"
/* if the partition is read-only or not */
#define DT_FIXED_PARTITIONS_3E800_READ_ONLY         0

/*
 * Devicetree node:
 *   /soc/i2c@40005400
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * Dependency Ordinal: 63
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   64  /soc/i2c@40005400/ssd1306@3c
 *
 * Description:
 *   STM32 I2C V2 controller
 */
#define DT_ST_STM32_I2C_V2_40005400_BASE_ADDRESS    0x40005400
#define DT_INST_0_ST_STM32_I2C_V2_BASE_ADDRESS      DT_ST_STM32_I2C_V2_40005400_BASE_ADDRESS
#define DT_ST_STM32_I2C_V2_40005400_SIZE            1024
#define DT_INST_0_ST_STM32_I2C_V2_SIZE              DT_ST_STM32_I2C_V2_40005400_SIZE
#define DT_ST_STM32_I2C_V2_40005400_IRQ_0           31
#define DT_INST_0_ST_STM32_I2C_V2_IRQ_0             DT_ST_STM32_I2C_V2_40005400_IRQ_0
#define DT_ST_STM32_I2C_V2_40005400_IRQ_EVENT       DT_ST_STM32_I2C_V2_40005400_IRQ_0
#define DT_INST_0_ST_STM32_I2C_V2_IRQ_EVENT         DT_ST_STM32_I2C_V2_40005400_IRQ_0
#define DT_ST_STM32_I2C_V2_40005400_IRQ_0_PRIORITY  0
#define DT_INST_0_ST_STM32_I2C_V2_IRQ_0_PRIORITY    DT_ST_STM32_I2C_V2_40005400_IRQ_0_PRIORITY
#define DT_ST_STM32_I2C_V2_40005400_IRQ_EVENT_PRIORITY DT_ST_STM32_I2C_V2_40005400_IRQ_0_PRIORITY
#define DT_INST_0_ST_STM32_I2C_V2_IRQ_EVENT_PRIORITY DT_ST_STM32_I2C_V2_40005400_IRQ_0_PRIORITY
#define DT_ST_STM32_I2C_V2_40005400_IRQ_1           32
#define DT_INST_0_ST_STM32_I2C_V2_IRQ_1             DT_ST_STM32_I2C_V2_40005400_IRQ_1
#define DT_ST_STM32_I2C_V2_40005400_IRQ_ERROR       DT_ST_STM32_I2C_V2_40005400_IRQ_1
#define DT_INST_0_ST_STM32_I2C_V2_IRQ_ERROR         DT_ST_STM32_I2C_V2_40005400_IRQ_1
#define DT_ST_STM32_I2C_V2_40005400_IRQ_1_PRIORITY  0
#define DT_INST_0_ST_STM32_I2C_V2_IRQ_1_PRIORITY    DT_ST_STM32_I2C_V2_40005400_IRQ_1_PRIORITY
#define DT_ST_STM32_I2C_V2_40005400_IRQ_ERROR_PRIORITY DT_ST_STM32_I2C_V2_40005400_IRQ_1_PRIORITY
#define DT_INST_0_ST_STM32_I2C_V2_IRQ_ERROR_PRIORITY DT_ST_STM32_I2C_V2_40005400_IRQ_1_PRIORITY
/* Initial clock frequency in Hz */
#define DT_ST_STM32_I2C_V2_40005400_CLOCK_FREQUENCY 100000
#define DT_INST_0_ST_STM32_I2C_V2_CLOCK_FREQUENCY   DT_ST_STM32_I2C_V2_40005400_CLOCK_FREQUENCY
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ST_STM32_I2C_V2_40005400_LABEL           "I2C_1"
#define DT_INST_0_ST_STM32_I2C_V2_LABEL             DT_ST_STM32_I2C_V2_40005400_LABEL
/* name of each interrupt */
#define DT_ST_STM32_I2C_V2_40005400_INTERRUPT_NAMES_0 "event"
#define DT_INST_0_ST_STM32_I2C_V2_INTERRUPT_NAMES_0 DT_ST_STM32_I2C_V2_40005400_INTERRUPT_NAMES_0
#define DT_ST_STM32_I2C_V2_40005400_INTERRUPT_NAMES_1 "error"
#define DT_INST_0_ST_STM32_I2C_V2_INTERRUPT_NAMES_1 DT_ST_STM32_I2C_V2_40005400_INTERRUPT_NAMES_1
#define DT_ST_STM32_I2C_V2_40005400_CLOCK_CONTROLLER "STM32_CLK_RCC"
#define DT_INST_0_ST_STM32_I2C_V2_CLOCK_CONTROLLER  DT_ST_STM32_I2C_V2_40005400_CLOCK_CONTROLLER
#define DT_ST_STM32_I2C_V2_40005400_CLOCK_BUS_0     2
#define DT_INST_0_ST_STM32_I2C_V2_CLOCK_BUS_0       DT_ST_STM32_I2C_V2_40005400_CLOCK_BUS_0
#define DT_ST_STM32_I2C_V2_40005400_CLOCK_BUS       DT_ST_STM32_I2C_V2_40005400_CLOCK_BUS_0
#define DT_INST_0_ST_STM32_I2C_V2_CLOCK_BUS         DT_ST_STM32_I2C_V2_40005400_CLOCK_BUS_0
#define DT_ST_STM32_I2C_V2_40005400_CLOCK_BITS_0    2097152
#define DT_INST_0_ST_STM32_I2C_V2_CLOCK_BITS_0      DT_ST_STM32_I2C_V2_40005400_CLOCK_BITS_0
#define DT_ST_STM32_I2C_V2_40005400_CLOCK_BITS      DT_ST_STM32_I2C_V2_40005400_CLOCK_BITS_0
#define DT_INST_0_ST_STM32_I2C_V2_CLOCK_BITS        DT_ST_STM32_I2C_V2_40005400_CLOCK_BITS_0
#define DT_INST_0_ST_STM32_I2C_V2                   1

/*
 * Devicetree node:
 *   /soc/i2c@40005400/ssd1306@3c
 *
 * Binding (compatible = solomon,ssd1306fb):
 *   $ZEPHYR_BASE/dts/bindings/display/solomon,ssd1306fb.yaml
 *
 * Dependency Ordinal: 64
 *
 * Requires:
 *   63  /soc/i2c@40005400
 *
 * Description:
 *   SSD1306 128x64 dot-matrix display controller
 */
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_BASE_ADDRESS 0x3c
#define DT_INST_0_SOLOMON_SSD1306FB_BASE_ADDRESS    DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_BASE_ADDRESS
/* Height in pixel of the panel driven by the controller */
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_HEIGHT 32
#define DT_INST_0_SOLOMON_SSD1306FB_HEIGHT          DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_HEIGHT
/* Width in pixel of the panel driven by the controller */
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_WIDTH 128
#define DT_INST_0_SOLOMON_SSD1306FB_WIDTH           DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_WIDTH
/* 8-bit column start address for Page Addressing Mode */
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_SEGMENT_OFFSET 0
#define DT_INST_0_SOLOMON_SSD1306FB_SEGMENT_OFFSET  DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_SEGMENT_OFFSET
/* Start address for Page Addressing Mode */
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_PAGE_OFFSET 0
#define DT_INST_0_SOLOMON_SSD1306FB_PAGE_OFFSET     DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_PAGE_OFFSET
/* mapping of the display start line to one of COM0 .. COM63 */
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_DISPLAY_OFFSET 0
#define DT_INST_0_SOLOMON_SSD1306FB_DISPLAY_OFFSET  DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_DISPLAY_OFFSET
/* Multiplex Ratio */
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_MULTIPLEX_RATIO 31
#define DT_INST_0_SOLOMON_SSD1306FB_MULTIPLEX_RATIO DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_MULTIPLEX_RATIO
/* Last column address is mapped to first segment */
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_SEGMENT_REMAP 1
#define DT_INST_0_SOLOMON_SSD1306FB_SEGMENT_REMAP   DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_SEGMENT_REMAP
/* Scan direction is from last COM output to first COM output */
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_COM_INVDIR 1
#define DT_INST_0_SOLOMON_SSD1306FB_COM_INVDIR      DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_COM_INVDIR
/* Sequential COM pin configuration */
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_COM_SEQUENTIAL 1
#define DT_INST_0_SOLOMON_SSD1306FB_COM_SEQUENTIAL  DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_COM_SEQUENTIAL
/* Duration of the pre-charge period */
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_PRECHARGEP 34
#define DT_INST_0_SOLOMON_SSD1306FB_PRECHARGEP      DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_PRECHARGEP
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_LABEL "DISPLAY"
#define DT_INST_0_SOLOMON_SSD1306FB_LABEL           DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_LABEL
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_BUS_NAME "I2C_1"
#define DT_INST_0_SOLOMON_SSD1306FB_BUS_NAME        DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_BUS_NAME
#define DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_Macro is deprecated DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_BUS_NAME
#define DT_INST_0_SOLOMON_SSD1306FB_Macro is deprecated DT_ST_STM32_I2C_V2_40005400_SOLOMON_SSD1306FB_3C_BUS_NAME
#define DT_SOLOMON_SSD1306FB_BUS_I2C                1
#define DT_INST_0_SOLOMON_SSD1306FB                 1

/*
 * Devicetree node:
 *   /soc/pin-controller@48000000/gpio@48000c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * Dependency Ordinal: 65
 *
 * Requires:
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 GPIO node
 */
#define DT_ST_STM32_GPIO_48000C00_BASE_ADDRESS      0x48000c00
#define DT_INST_3_ST_STM32_GPIO_BASE_ADDRESS        DT_ST_STM32_GPIO_48000C00_BASE_ADDRESS
#define DT_ST_STM32_GPIO_48000C00_SIZE              1024
#define DT_INST_3_ST_STM32_GPIO_SIZE                DT_ST_STM32_GPIO_48000C00_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ST_STM32_GPIO_48000C00_LABEL             "GPIOD"
#define DT_INST_3_ST_STM32_GPIO_LABEL               DT_ST_STM32_GPIO_48000C00_LABEL
/* Number of gpios supported */
#define DT_ST_STM32_GPIO_48000C00_NGPIOS            32
#define DT_INST_3_ST_STM32_GPIO_NGPIOS              DT_ST_STM32_GPIO_48000C00_NGPIOS
#define DT_ST_STM32_GPIO_48000C00_CLOCK_CONTROLLER  "STM32_CLK_RCC"
#define DT_INST_3_ST_STM32_GPIO_CLOCK_CONTROLLER    DT_ST_STM32_GPIO_48000C00_CLOCK_CONTROLLER
#define DT_ST_STM32_GPIO_48000C00_CLOCK_BUS_0       0
#define DT_INST_3_ST_STM32_GPIO_CLOCK_BUS_0         DT_ST_STM32_GPIO_48000C00_CLOCK_BUS_0
#define DT_ST_STM32_GPIO_48000C00_CLOCK_BUS         DT_ST_STM32_GPIO_48000C00_CLOCK_BUS_0
#define DT_INST_3_ST_STM32_GPIO_CLOCK_BUS           DT_ST_STM32_GPIO_48000C00_CLOCK_BUS_0
#define DT_ST_STM32_GPIO_48000C00_CLOCK_BITS_0      1048576
#define DT_INST_3_ST_STM32_GPIO_CLOCK_BITS_0        DT_ST_STM32_GPIO_48000C00_CLOCK_BITS_0
#define DT_ST_STM32_GPIO_48000C00_CLOCK_BITS        DT_ST_STM32_GPIO_48000C00_CLOCK_BITS_0
#define DT_INST_3_ST_STM32_GPIO_CLOCK_BITS          DT_ST_STM32_GPIO_48000C00_CLOCK_BITS_0
#define DT_INST_3_ST_STM32_GPIO                     1

/*
 * Devicetree node:
 *   /soc/pin-controller@48000000/gpio@48001000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * Dependency Ordinal: 66
 *
 * Requires:
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 GPIO node
 */
#define DT_ST_STM32_GPIO_48001000_BASE_ADDRESS      0x48001000
#define DT_INST_5_ST_STM32_GPIO_BASE_ADDRESS        DT_ST_STM32_GPIO_48001000_BASE_ADDRESS
#define DT_ST_STM32_GPIO_48001000_SIZE              1024
#define DT_INST_5_ST_STM32_GPIO_SIZE                DT_ST_STM32_GPIO_48001000_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ST_STM32_GPIO_48001000_LABEL             "GPIOE"
#define DT_INST_5_ST_STM32_GPIO_LABEL               DT_ST_STM32_GPIO_48001000_LABEL
/* Number of gpios supported */
#define DT_ST_STM32_GPIO_48001000_NGPIOS            32
#define DT_INST_5_ST_STM32_GPIO_NGPIOS              DT_ST_STM32_GPIO_48001000_NGPIOS
#define DT_ST_STM32_GPIO_48001000_CLOCK_CONTROLLER  "STM32_CLK_RCC"
#define DT_INST_5_ST_STM32_GPIO_CLOCK_CONTROLLER    DT_ST_STM32_GPIO_48001000_CLOCK_CONTROLLER
#define DT_ST_STM32_GPIO_48001000_CLOCK_BUS_0       0
#define DT_INST_5_ST_STM32_GPIO_CLOCK_BUS_0         DT_ST_STM32_GPIO_48001000_CLOCK_BUS_0
#define DT_ST_STM32_GPIO_48001000_CLOCK_BUS         DT_ST_STM32_GPIO_48001000_CLOCK_BUS_0
#define DT_INST_5_ST_STM32_GPIO_CLOCK_BUS           DT_ST_STM32_GPIO_48001000_CLOCK_BUS_0
#define DT_ST_STM32_GPIO_48001000_CLOCK_BITS_0      2097152
#define DT_INST_5_ST_STM32_GPIO_CLOCK_BITS_0        DT_ST_STM32_GPIO_48001000_CLOCK_BITS_0
#define DT_ST_STM32_GPIO_48001000_CLOCK_BITS        DT_ST_STM32_GPIO_48001000_CLOCK_BITS_0
#define DT_INST_5_ST_STM32_GPIO_CLOCK_BITS          DT_ST_STM32_GPIO_48001000_CLOCK_BITS_0
#define DT_INST_5_ST_STM32_GPIO                     1

/*
 * Devicetree node:
 *   /soc/pin-controller@48000000/gpio@48001400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * Dependency Ordinal: 67
 *
 * Requires:
 *   8   /soc/pin-controller@48000000
 *   9   /soc/rcc@40021000
 *
 * Description:
 *   STM32 GPIO node
 */
#define DT_ST_STM32_GPIO_48001400_BASE_ADDRESS      0x48001400
#define DT_INST_4_ST_STM32_GPIO_BASE_ADDRESS        DT_ST_STM32_GPIO_48001400_BASE_ADDRESS
#define DT_ST_STM32_GPIO_48001400_SIZE              1024
#define DT_INST_4_ST_STM32_GPIO_SIZE                DT_ST_STM32_GPIO_48001400_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ST_STM32_GPIO_48001400_LABEL             "GPIOF"
#define DT_INST_4_ST_STM32_GPIO_LABEL               DT_ST_STM32_GPIO_48001400_LABEL
/* Number of gpios supported */
#define DT_ST_STM32_GPIO_48001400_NGPIOS            32
#define DT_INST_4_ST_STM32_GPIO_NGPIOS              DT_ST_STM32_GPIO_48001400_NGPIOS
#define DT_ST_STM32_GPIO_48001400_CLOCK_CONTROLLER  "STM32_CLK_RCC"
#define DT_INST_4_ST_STM32_GPIO_CLOCK_CONTROLLER    DT_ST_STM32_GPIO_48001400_CLOCK_CONTROLLER
#define DT_ST_STM32_GPIO_48001400_CLOCK_BUS_0       0
#define DT_INST_4_ST_STM32_GPIO_CLOCK_BUS_0         DT_ST_STM32_GPIO_48001400_CLOCK_BUS_0
#define DT_ST_STM32_GPIO_48001400_CLOCK_BUS         DT_ST_STM32_GPIO_48001400_CLOCK_BUS_0
#define DT_INST_4_ST_STM32_GPIO_CLOCK_BUS           DT_ST_STM32_GPIO_48001400_CLOCK_BUS_0
#define DT_ST_STM32_GPIO_48001400_CLOCK_BITS_0      4194304
#define DT_INST_4_ST_STM32_GPIO_CLOCK_BITS_0        DT_ST_STM32_GPIO_48001400_CLOCK_BITS_0
#define DT_ST_STM32_GPIO_48001400_CLOCK_BITS        DT_ST_STM32_GPIO_48001400_CLOCK_BITS_0
#define DT_INST_4_ST_STM32_GPIO_CLOCK_BITS          DT_ST_STM32_GPIO_48001400_CLOCK_BITS_0
#define DT_INST_4_ST_STM32_GPIO                     1

/*
 * Devicetree node:
 *   /soc/timers@40000000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 68
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   69  /soc/timers@40000000/pwm
 *
 * Description:
 *   STM32 timers
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40000000/pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 69
 *
 * Requires:
 *   68  /soc/timers@40000000
 *
 * Description:
 *   STM32 PWM
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40000400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 70
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   71  /soc/timers@40000400/pwm
 *
 * Description:
 *   STM32 timers
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40000400/pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 71
 *
 * Requires:
 *   70  /soc/timers@40000400
 *
 * Description:
 *   STM32 PWM
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40000800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 72
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   73  /soc/timers@40000800/pwm
 *
 * Description:
 *   STM32 timers
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40000800/pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 73
 *
 * Requires:
 *   72  /soc/timers@40000800
 *
 * Description:
 *   STM32 PWM
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40001000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 74
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   75  /soc/timers@40001000/pwm
 *
 * Description:
 *   STM32 timers
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40001000/pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 75
 *
 * Requires:
 *   74  /soc/timers@40001000
 *
 * Description:
 *   STM32 PWM
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40001400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 76
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   77  /soc/timers@40001400/pwm
 *
 * Description:
 *   STM32 timers
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40001400/pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 77
 *
 * Requires:
 *   76  /soc/timers@40001400
 *
 * Description:
 *   STM32 PWM
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40012c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 78
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   79  /soc/timers@40012c00/pwm
 *
 * Description:
 *   STM32 timers
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40012c00/pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 79
 *
 * Requires:
 *   78  /soc/timers@40012c00
 *
 * Description:
 *   STM32 PWM
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40013400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 80
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   81  /soc/timers@40013400/pwm
 *
 * Description:
 *   STM32 timers
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40013400/pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 81
 *
 * Requires:
 *   80  /soc/timers@40013400
 *
 * Description:
 *   STM32 PWM
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40014000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 82
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   83  /soc/timers@40014000/pwm
 *
 * Description:
 *   STM32 timers
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40014000/pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 83
 *
 * Requires:
 *   82  /soc/timers@40014000
 *
 * Description:
 *   STM32 PWM
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40014400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 84
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   85  /soc/timers@40014400/pwm
 *
 * Description:
 *   STM32 timers
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40014400/pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 85
 *
 * Requires:
 *   84  /soc/timers@40014400
 *
 * Description:
 *   STM32 PWM
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40014800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 86
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   87  /soc/timers@40014800/pwm
 *
 * Description:
 *   STM32 timers
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40014800/pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 87
 *
 * Requires:
 *   86  /soc/timers@40014800
 *
 * Description:
 *   STM32 PWM
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40015000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * Dependency Ordinal: 88
 *
 * Requires:
 *   7   /soc
 *   42  /soc/interrupt-controller@e000e100
 *   9   /soc/rcc@40021000
 *
 * Supports:
 *   89  /soc/timers@40015000/pwm
 *
 * Description:
 *   STM32 timers
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/timers@40015000/pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * Dependency Ordinal: 89
 *
 * Requires:
 *   88  /soc/timers@40015000
 *
 * Description:
 *   STM32 PWM
 *
 * Node is disabled.
 */

/* Compatibles appearing on enabled nodes */
#define DT_COMPAT_ARDUINO_PRO_MICRO                 1
#define DT_COMPAT_ARM_ARMV7M_SYSTICK                1
#define DT_COMPAT_ARM_CORTEX_M4F                    1
#define DT_COMPAT_ARM_V7M_NVIC                      1
#define DT_COMPAT_FIXED_PARTITIONS                  1
#define DT_COMPAT_GPIO_LEDS                         1
#define DT_COMPAT_MMIO_SRAM                         1
#define DT_COMPAT_QMK_PROTON_C                      1
#define DT_COMPAT_SIMPLE_BUS                        1
#define DT_COMPAT_SOC_NV_FLASH                      1
#define DT_COMPAT_SOLOMON_SSD1306FB                 1
#define DT_COMPAT_ST_STM32_CCM                      1
#define DT_COMPAT_ST_STM32_FLASH_CONTROLLER         1
#define DT_COMPAT_ST_STM32_GPIO                     1
#define DT_COMPAT_ST_STM32_I2C_V2                   1
#define DT_COMPAT_ST_STM32_PINMUX                   1
#define DT_COMPAT_ST_STM32_RCC                      1
#define DT_COMPAT_ST_STM32_RTC                      1
#define DT_COMPAT_ST_STM32_USB                      1
#define DT_COMPAT_ST_STM32F3_FLASH_CONTROLLER       1
#define DT_COMPAT_ST_STM32F303                      1
#define DT_COMPAT_USB_NOP_XCEIV                     1
#define DT_COMPAT_ZMK_BEHAVIOR_BLUETOOTH            1
#define DT_COMPAT_ZMK_BEHAVIOR_EXT_POWER            1
#define DT_COMPAT_ZMK_BEHAVIOR_HOLD_TAP             1
#define DT_COMPAT_ZMK_BEHAVIOR_KEY_PRESS            1
#define DT_COMPAT_ZMK_BEHAVIOR_MOMENTARY_LAYER      1
#define DT_COMPAT_ZMK_BEHAVIOR_NONE                 1
#define DT_COMPAT_ZMK_BEHAVIOR_OUTPUTS              1
#define DT_COMPAT_ZMK_BEHAVIOR_RESET                1
#define DT_COMPAT_ZMK_BEHAVIOR_RGB_UNDERGLOW        1
#define DT_COMPAT_ZMK_BEHAVIOR_SENSOR_ROTATE_KEY_PRESS 1
#define DT_COMPAT_ZMK_BEHAVIOR_STICKY_KEY           1
#define DT_COMPAT_ZMK_BEHAVIOR_TO_LAYER             1
#define DT_COMPAT_ZMK_BEHAVIOR_TOGGLE_LAYER         1
#define DT_COMPAT_ZMK_BEHAVIOR_TRANSPARENT          1
#define DT_COMPAT_ZMK_KEYMAP                        1
#define DT_COMPAT_ZMK_KSCAN_GPIO_MATRIX             1
#define DT_COMPAT_ZMK_MATRIX_TRANSFORM              1

/* /chosen/zephyr,flash (/soc/flash-controller@40022000/flash@8000000) */
#define DT_FLASH_BASE_ADDRESS                       0x8000000
#define DT_FLASH_SIZE                               256
#define DT_FLASH_ERASE_BLOCK_SIZE                   2048
#define DT_FLASH_WRITE_BLOCK_SIZE                   2

/* /chosen/zephyr,code-partition (missing) */
#define DT_CODE_PARTITION_OFFSET                    0
#define DT_CODE_PARTITION_SIZE                      0

/* Number of flash partitions */
#define DT_FLASH_AREA_NUM                           1
